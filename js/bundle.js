!function(e){var a={};function n(t){if(a[t])return a[t].exports;var i=a[t]={i:t,l:!1,exports:{}};return e[t].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=a,n.d=function(e,a,t){n.o(e,a)||Object.defineProperty(e,a,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,a){if(1&a&&(e=n(e)),8&a)return e;if(4&a&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&a&&"string"!=typeof e)for(var i in e)n.d(t,i,function(a){return e[a]}.bind(null,i));return t},n.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(a,"a",a),a},n.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},n.p="",n(n.s=5)}([function(e,a,n){var t;
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
!function(a,n){"use strict";"object"==typeof e&&"object"==typeof e.exports?e.exports=a.document?n(a,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return n(e)}:n(a)}("undefined"!=typeof window?window:this,function(n,i){"use strict";var r=[],o=n.document,s=Object.getPrototypeOf,l=r.slice,u=r.concat,c=r.push,d=r.indexOf,h={},p=h.toString,g=h.hasOwnProperty,m=g.toString,f=m.call(Object),y={},b=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},v=function(e){return null!=e&&e===e.window},_={type:!0,src:!0,noModule:!0};function k(e,a,n){var t,i=(a=a||o).createElement("script");if(i.text=e,n)for(t in _)n[t]&&(i[t]=n[t]);a.head.appendChild(i).parentNode.removeChild(i)}function S(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?h[p.call(e)]||"object":typeof e}var C=function(e,a){return new C.fn.init(e,a)},w=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function A(e){var a=!!e&&"length"in e&&e.length,n=S(e);return!b(e)&&!v(e)&&("array"===n||0===a||"number"==typeof a&&a>0&&a-1 in e)}C.fn=C.prototype={jquery:"3.3.1",constructor:C,length:0,toArray:function(){return l.call(this)},get:function(e){return null==e?l.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var a=C.merge(this.constructor(),e);return a.prevObject=this,a},each:function(e){return C.each(this,e)},map:function(e){return this.pushStack(C.map(this,function(a,n){return e.call(a,n,a)}))},slice:function(){return this.pushStack(l.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var a=this.length,n=+e+(e<0?a:0);return this.pushStack(n>=0&&n<a?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:c,sort:r.sort,splice:r.splice},C.extend=C.fn.extend=function(){var e,a,n,t,i,r,o=arguments[0]||{},s=1,l=arguments.length,u=!1;for("boolean"==typeof o&&(u=o,o=arguments[s]||{},s++),"object"==typeof o||b(o)||(o={}),s===l&&(o=this,s--);s<l;s++)if(null!=(e=arguments[s]))for(a in e)n=o[a],o!==(t=e[a])&&(u&&t&&(C.isPlainObject(t)||(i=Array.isArray(t)))?(i?(i=!1,r=n&&Array.isArray(n)?n:[]):r=n&&C.isPlainObject(n)?n:{},o[a]=C.extend(u,r,t)):void 0!==t&&(o[a]=t));return o},C.extend({expando:"jQuery"+("3.3.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var a,n;return!(!e||"[object Object]"!==p.call(e))&&(!(a=s(e))||"function"==typeof(n=g.call(a,"constructor")&&a.constructor)&&m.call(n)===f)},isEmptyObject:function(e){var a;for(a in e)return!1;return!0},globalEval:function(e){k(e)},each:function(e,a){var n,t=0;if(A(e))for(n=e.length;t<n&&!1!==a.call(e[t],t,e[t]);t++);else for(t in e)if(!1===a.call(e[t],t,e[t]))break;return e},trim:function(e){return null==e?"":(e+"").replace(w,"")},makeArray:function(e,a){var n=a||[];return null!=e&&(A(Object(e))?C.merge(n,"string"==typeof e?[e]:e):c.call(n,e)),n},inArray:function(e,a,n){return null==a?-1:d.call(a,e,n)},merge:function(e,a){for(var n=+a.length,t=0,i=e.length;t<n;t++)e[i++]=a[t];return e.length=i,e},grep:function(e,a,n){for(var t=[],i=0,r=e.length,o=!n;i<r;i++)!a(e[i],i)!==o&&t.push(e[i]);return t},map:function(e,a,n){var t,i,r=0,o=[];if(A(e))for(t=e.length;r<t;r++)null!=(i=a(e[r],r,n))&&o.push(i);else for(r in e)null!=(i=a(e[r],r,n))&&o.push(i);return u.apply([],o)},guid:1,support:y}),"function"==typeof Symbol&&(C.fn[Symbol.iterator]=r[Symbol.iterator]),C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,a){h["[object "+a+"]"]=a.toLowerCase()});var x=
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
function(e){var a,n,t,i,r,o,s,l,u,c,d,h,p,g,m,f,y,b,v,_="sizzle"+1*new Date,k=e.document,S=0,C=0,w=oe(),A=oe(),x=oe(),M=function(e,a){return e===a&&(d=!0),0},T={}.hasOwnProperty,O=[],P=O.pop,N=O.push,z=O.push,K=O.slice,B=function(e,a){for(var n=0,t=e.length;n<t;n++)if(e[n]===a)return n;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",R="[\\x20\\t\\r\\n\\f]",I="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",G="\\["+R+"*("+I+")(?:"+R+"*([*^$|!~]?=)"+R+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+I+"))|)"+R+"*\\]",E=":("+I+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+G+")*)|.*)\\)|)",D=new RegExp(R+"+","g"),j=new RegExp("^"+R+"+|((?:^|[^\\\\])(?:\\\\.)*)"+R+"+$","g"),H=new RegExp("^"+R+"*,"+R+"*"),F=new RegExp("^"+R+"*([>+~]|"+R+")"+R+"*"),U=new RegExp("="+R+"*([^\\]'\"]*?)"+R+"*\\]","g"),q=new RegExp(E),W=new RegExp("^"+I+"$"),V={ID:new RegExp("^#("+I+")"),CLASS:new RegExp("^\\.("+I+")"),TAG:new RegExp("^("+I+"|[*])"),ATTR:new RegExp("^"+G),PSEUDO:new RegExp("^"+E),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+R+"*(even|odd|(([+-]|)(\\d*)n|)"+R+"*(?:([+-]|)"+R+"*(\\d+)|))"+R+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+R+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+R+"*((?:-\\d)?\\d*)"+R+"*\\)|)(?=[^-]|$)","i")},J=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Q=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,$=/[+~]/,X=new RegExp("\\\\([\\da-f]{1,6}"+R+"?|("+R+")|.)","ig"),ee=function(e,a,n){var t="0x"+a-65536;return t!=t||n?a:t<0?String.fromCharCode(t+65536):String.fromCharCode(t>>10|55296,1023&t|56320)},ae=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ne=function(e,a){return a?"\0"===e?"ï¿½":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},te=function(){h()},ie=be(function(e){return!0===e.disabled&&("form"in e||"label"in e)},{dir:"parentNode",next:"legend"});try{z.apply(O=K.call(k.childNodes),k.childNodes),O[k.childNodes.length].nodeType}catch(e){z={apply:O.length?function(e,a){N.apply(e,K.call(a))}:function(e,a){for(var n=e.length,t=0;e[n++]=a[t++];);e.length=n-1}}}function re(e,a,t,i){var r,s,u,c,d,g,y,b=a&&a.ownerDocument,S=a?a.nodeType:9;if(t=t||[],"string"!=typeof e||!e||1!==S&&9!==S&&11!==S)return t;if(!i&&((a?a.ownerDocument||a:k)!==p&&h(a),a=a||p,m)){if(11!==S&&(d=Z.exec(e)))if(r=d[1]){if(9===S){if(!(u=a.getElementById(r)))return t;if(u.id===r)return t.push(u),t}else if(b&&(u=b.getElementById(r))&&v(a,u)&&u.id===r)return t.push(u),t}else{if(d[2])return z.apply(t,a.getElementsByTagName(e)),t;if((r=d[3])&&n.getElementsByClassName&&a.getElementsByClassName)return z.apply(t,a.getElementsByClassName(r)),t}if(n.qsa&&!x[e+" "]&&(!f||!f.test(e))){if(1!==S)b=a,y=e;else if("object"!==a.nodeName.toLowerCase()){for((c=a.getAttribute("id"))?c=c.replace(ae,ne):a.setAttribute("id",c=_),s=(g=o(e)).length;s--;)g[s]="#"+c+" "+ye(g[s]);y=g.join(","),b=$.test(e)&&me(a.parentNode)||a}if(y)try{return z.apply(t,b.querySelectorAll(y)),t}catch(e){}finally{c===_&&a.removeAttribute("id")}}}return l(e.replace(j,"$1"),a,t,i)}function oe(){var e=[];return function a(n,i){return e.push(n+" ")>t.cacheLength&&delete a[e.shift()],a[n+" "]=i}}function se(e){return e[_]=!0,e}function le(e){var a=p.createElement("fieldset");try{return!!e(a)}catch(e){return!1}finally{a.parentNode&&a.parentNode.removeChild(a),a=null}}function ue(e,a){for(var n=e.split("|"),i=n.length;i--;)t.attrHandle[n[i]]=a}function ce(e,a){var n=a&&e,t=n&&1===e.nodeType&&1===a.nodeType&&e.sourceIndex-a.sourceIndex;if(t)return t;if(n)for(;n=n.nextSibling;)if(n===a)return-1;return e?1:-1}function de(e){return function(a){return"input"===a.nodeName.toLowerCase()&&a.type===e}}function he(e){return function(a){var n=a.nodeName.toLowerCase();return("input"===n||"button"===n)&&a.type===e}}function pe(e){return function(a){return"form"in a?a.parentNode&&!1===a.disabled?"label"in a?"label"in a.parentNode?a.parentNode.disabled===e:a.disabled===e:a.isDisabled===e||a.isDisabled!==!e&&ie(a)===e:a.disabled===e:"label"in a&&a.disabled===e}}function ge(e){return se(function(a){return a=+a,se(function(n,t){for(var i,r=e([],n.length,a),o=r.length;o--;)n[i=r[o]]&&(n[i]=!(t[i]=n[i]))})})}function me(e){return e&&void 0!==e.getElementsByTagName&&e}for(a in n=re.support={},r=re.isXML=function(e){var a=e&&(e.ownerDocument||e).documentElement;return!!a&&"HTML"!==a.nodeName},h=re.setDocument=function(e){var a,i,o=e?e.ownerDocument||e:k;return o!==p&&9===o.nodeType&&o.documentElement?(g=(p=o).documentElement,m=!r(p),k!==p&&(i=p.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",te,!1):i.attachEvent&&i.attachEvent("onunload",te)),n.attributes=le(function(e){return e.className="i",!e.getAttribute("className")}),n.getElementsByTagName=le(function(e){return e.appendChild(p.createComment("")),!e.getElementsByTagName("*").length}),n.getElementsByClassName=Q.test(p.getElementsByClassName),n.getById=le(function(e){return g.appendChild(e).id=_,!p.getElementsByName||!p.getElementsByName(_).length}),n.getById?(t.filter.ID=function(e){var a=e.replace(X,ee);return function(e){return e.getAttribute("id")===a}},t.find.ID=function(e,a){if(void 0!==a.getElementById&&m){var n=a.getElementById(e);return n?[n]:[]}}):(t.filter.ID=function(e){var a=e.replace(X,ee);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===a}},t.find.ID=function(e,a){if(void 0!==a.getElementById&&m){var n,t,i,r=a.getElementById(e);if(r){if((n=r.getAttributeNode("id"))&&n.value===e)return[r];for(i=a.getElementsByName(e),t=0;r=i[t++];)if((n=r.getAttributeNode("id"))&&n.value===e)return[r]}return[]}}),t.find.TAG=n.getElementsByTagName?function(e,a){return void 0!==a.getElementsByTagName?a.getElementsByTagName(e):n.qsa?a.querySelectorAll(e):void 0}:function(e,a){var n,t=[],i=0,r=a.getElementsByTagName(e);if("*"===e){for(;n=r[i++];)1===n.nodeType&&t.push(n);return t}return r},t.find.CLASS=n.getElementsByClassName&&function(e,a){if(void 0!==a.getElementsByClassName&&m)return a.getElementsByClassName(e)},y=[],f=[],(n.qsa=Q.test(p.querySelectorAll))&&(le(function(e){g.appendChild(e).innerHTML="<a id='"+_+"'></a><select id='"+_+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&f.push("[*^$]="+R+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||f.push("\\["+R+"*(?:value|"+L+")"),e.querySelectorAll("[id~="+_+"-]").length||f.push("~="),e.querySelectorAll(":checked").length||f.push(":checked"),e.querySelectorAll("a#"+_+"+*").length||f.push(".#.+[+~]")}),le(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var a=p.createElement("input");a.setAttribute("type","hidden"),e.appendChild(a).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&f.push("name"+R+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&f.push(":enabled",":disabled"),g.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&f.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),f.push(",.*:")})),(n.matchesSelector=Q.test(b=g.matches||g.webkitMatchesSelector||g.mozMatchesSelector||g.oMatchesSelector||g.msMatchesSelector))&&le(function(e){n.disconnectedMatch=b.call(e,"*"),b.call(e,"[s!='']:x"),y.push("!=",E)}),f=f.length&&new RegExp(f.join("|")),y=y.length&&new RegExp(y.join("|")),a=Q.test(g.compareDocumentPosition),v=a||Q.test(g.contains)?function(e,a){var n=9===e.nodeType?e.documentElement:e,t=a&&a.parentNode;return e===t||!(!t||1!==t.nodeType||!(n.contains?n.contains(t):e.compareDocumentPosition&&16&e.compareDocumentPosition(t)))}:function(e,a){if(a)for(;a=a.parentNode;)if(a===e)return!0;return!1},M=a?function(e,a){if(e===a)return d=!0,0;var t=!e.compareDocumentPosition-!a.compareDocumentPosition;return t||(1&(t=(e.ownerDocument||e)===(a.ownerDocument||a)?e.compareDocumentPosition(a):1)||!n.sortDetached&&a.compareDocumentPosition(e)===t?e===p||e.ownerDocument===k&&v(k,e)?-1:a===p||a.ownerDocument===k&&v(k,a)?1:c?B(c,e)-B(c,a):0:4&t?-1:1)}:function(e,a){if(e===a)return d=!0,0;var n,t=0,i=e.parentNode,r=a.parentNode,o=[e],s=[a];if(!i||!r)return e===p?-1:a===p?1:i?-1:r?1:c?B(c,e)-B(c,a):0;if(i===r)return ce(e,a);for(n=e;n=n.parentNode;)o.unshift(n);for(n=a;n=n.parentNode;)s.unshift(n);for(;o[t]===s[t];)t++;return t?ce(o[t],s[t]):o[t]===k?-1:s[t]===k?1:0},p):p},re.matches=function(e,a){return re(e,null,null,a)},re.matchesSelector=function(e,a){if((e.ownerDocument||e)!==p&&h(e),a=a.replace(U,"='$1']"),n.matchesSelector&&m&&!x[a+" "]&&(!y||!y.test(a))&&(!f||!f.test(a)))try{var t=b.call(e,a);if(t||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return t}catch(e){}return re(a,p,null,[e]).length>0},re.contains=function(e,a){return(e.ownerDocument||e)!==p&&h(e),v(e,a)},re.attr=function(e,a){(e.ownerDocument||e)!==p&&h(e);var i=t.attrHandle[a.toLowerCase()],r=i&&T.call(t.attrHandle,a.toLowerCase())?i(e,a,!m):void 0;return void 0!==r?r:n.attributes||!m?e.getAttribute(a):(r=e.getAttributeNode(a))&&r.specified?r.value:null},re.escape=function(e){return(e+"").replace(ae,ne)},re.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},re.uniqueSort=function(e){var a,t=[],i=0,r=0;if(d=!n.detectDuplicates,c=!n.sortStable&&e.slice(0),e.sort(M),d){for(;a=e[r++];)a===e[r]&&(i=t.push(r));for(;i--;)e.splice(t[i],1)}return c=null,e},i=re.getText=function(e){var a,n="",t=0,r=e.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=i(e)}else if(3===r||4===r)return e.nodeValue}else for(;a=e[t++];)n+=i(a);return n},(t=re.selectors={cacheLength:50,createPseudo:se,match:V,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(X,ee),e[3]=(e[3]||e[4]||e[5]||"").replace(X,ee),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||re.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&re.error(e[0]),e},PSEUDO:function(e){var a,n=!e[6]&&e[2];return V.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&q.test(n)&&(a=o(n,!0))&&(a=n.indexOf(")",n.length-a)-n.length)&&(e[0]=e[0].slice(0,a),e[2]=n.slice(0,a)),e.slice(0,3))}},filter:{TAG:function(e){var a=e.replace(X,ee).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===a}},CLASS:function(e){var a=w[e+" "];return a||(a=new RegExp("(^|"+R+")"+e+"("+R+"|$)"))&&w(e,function(e){return a.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,a,n){return function(t){var i=re.attr(t,e);return null==i?"!="===a:!a||(i+="","="===a?i===n:"!="===a?i!==n:"^="===a?n&&0===i.indexOf(n):"*="===a?n&&i.indexOf(n)>-1:"$="===a?n&&i.slice(-n.length)===n:"~="===a?(" "+i.replace(D," ")+" ").indexOf(n)>-1:"|="===a&&(i===n||i.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,a,n,t,i){var r="nth"!==e.slice(0,3),o="last"!==e.slice(-4),s="of-type"===a;return 1===t&&0===i?function(e){return!!e.parentNode}:function(a,n,l){var u,c,d,h,p,g,m=r!==o?"nextSibling":"previousSibling",f=a.parentNode,y=s&&a.nodeName.toLowerCase(),b=!l&&!s,v=!1;if(f){if(r){for(;m;){for(h=a;h=h[m];)if(s?h.nodeName.toLowerCase()===y:1===h.nodeType)return!1;g=m="only"===e&&!g&&"nextSibling"}return!0}if(g=[o?f.firstChild:f.lastChild],o&&b){for(v=(p=(u=(c=(d=(h=f)[_]||(h[_]={}))[h.uniqueID]||(d[h.uniqueID]={}))[e]||[])[0]===S&&u[1])&&u[2],h=p&&f.childNodes[p];h=++p&&h&&h[m]||(v=p=0)||g.pop();)if(1===h.nodeType&&++v&&h===a){c[e]=[S,p,v];break}}else if(b&&(v=p=(u=(c=(d=(h=a)[_]||(h[_]={}))[h.uniqueID]||(d[h.uniqueID]={}))[e]||[])[0]===S&&u[1]),!1===v)for(;(h=++p&&h&&h[m]||(v=p=0)||g.pop())&&((s?h.nodeName.toLowerCase()!==y:1!==h.nodeType)||!++v||(b&&((c=(d=h[_]||(h[_]={}))[h.uniqueID]||(d[h.uniqueID]={}))[e]=[S,v]),h!==a)););return(v-=i)===t||v%t==0&&v/t>=0}}},PSEUDO:function(e,a){var n,i=t.pseudos[e]||t.setFilters[e.toLowerCase()]||re.error("unsupported pseudo: "+e);return i[_]?i(a):i.length>1?(n=[e,e,"",a],t.setFilters.hasOwnProperty(e.toLowerCase())?se(function(e,n){for(var t,r=i(e,a),o=r.length;o--;)e[t=B(e,r[o])]=!(n[t]=r[o])}):function(e){return i(e,0,n)}):i}},pseudos:{not:se(function(e){var a=[],n=[],t=s(e.replace(j,"$1"));return t[_]?se(function(e,a,n,i){for(var r,o=t(e,null,i,[]),s=e.length;s--;)(r=o[s])&&(e[s]=!(a[s]=r))}):function(e,i,r){return a[0]=e,t(a,null,r,n),a[0]=null,!n.pop()}}),has:se(function(e){return function(a){return re(e,a).length>0}}),contains:se(function(e){return e=e.replace(X,ee),function(a){return(a.textContent||a.innerText||i(a)).indexOf(e)>-1}}),lang:se(function(e){return W.test(e||"")||re.error("unsupported lang: "+e),e=e.replace(X,ee).toLowerCase(),function(a){var n;do{if(n=m?a.lang:a.getAttribute("xml:lang")||a.getAttribute("lang"))return(n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((a=a.parentNode)&&1===a.nodeType);return!1}}),target:function(a){var n=e.location&&e.location.hash;return n&&n.slice(1)===a.id},root:function(e){return e===g},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:pe(!1),disabled:pe(!0),checked:function(e){var a=e.nodeName.toLowerCase();return"input"===a&&!!e.checked||"option"===a&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!t.pseudos.empty(e)},header:function(e){return Y.test(e.nodeName)},input:function(e){return J.test(e.nodeName)},button:function(e){var a=e.nodeName.toLowerCase();return"input"===a&&"button"===e.type||"button"===a},text:function(e){var a;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(a=e.getAttribute("type"))||"text"===a.toLowerCase())},first:ge(function(){return[0]}),last:ge(function(e,a){return[a-1]}),eq:ge(function(e,a,n){return[n<0?n+a:n]}),even:ge(function(e,a){for(var n=0;n<a;n+=2)e.push(n);return e}),odd:ge(function(e,a){for(var n=1;n<a;n+=2)e.push(n);return e}),lt:ge(function(e,a,n){for(var t=n<0?n+a:n;--t>=0;)e.push(t);return e}),gt:ge(function(e,a,n){for(var t=n<0?n+a:n;++t<a;)e.push(t);return e})}}).pseudos.nth=t.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})t.pseudos[a]=de(a);for(a in{submit:!0,reset:!0})t.pseudos[a]=he(a);function fe(){}function ye(e){for(var a=0,n=e.length,t="";a<n;a++)t+=e[a].value;return t}function be(e,a,n){var t=a.dir,i=a.next,r=i||t,o=n&&"parentNode"===r,s=C++;return a.first?function(a,n,i){for(;a=a[t];)if(1===a.nodeType||o)return e(a,n,i);return!1}:function(a,n,l){var u,c,d,h=[S,s];if(l){for(;a=a[t];)if((1===a.nodeType||o)&&e(a,n,l))return!0}else for(;a=a[t];)if(1===a.nodeType||o)if(c=(d=a[_]||(a[_]={}))[a.uniqueID]||(d[a.uniqueID]={}),i&&i===a.nodeName.toLowerCase())a=a[t]||a;else{if((u=c[r])&&u[0]===S&&u[1]===s)return h[2]=u[2];if(c[r]=h,h[2]=e(a,n,l))return!0}return!1}}function ve(e){return e.length>1?function(a,n,t){for(var i=e.length;i--;)if(!e[i](a,n,t))return!1;return!0}:e[0]}function _e(e,a,n,t,i){for(var r,o=[],s=0,l=e.length,u=null!=a;s<l;s++)(r=e[s])&&(n&&!n(r,t,i)||(o.push(r),u&&a.push(s)));return o}function ke(e,a,n,t,i,r){return t&&!t[_]&&(t=ke(t)),i&&!i[_]&&(i=ke(i,r)),se(function(r,o,s,l){var u,c,d,h=[],p=[],g=o.length,m=r||function(e,a,n){for(var t=0,i=a.length;t<i;t++)re(e,a[t],n);return n}(a||"*",s.nodeType?[s]:s,[]),f=!e||!r&&a?m:_e(m,h,e,s,l),y=n?i||(r?e:g||t)?[]:o:f;if(n&&n(f,y,s,l),t)for(u=_e(y,p),t(u,[],s,l),c=u.length;c--;)(d=u[c])&&(y[p[c]]=!(f[p[c]]=d));if(r){if(i||e){if(i){for(u=[],c=y.length;c--;)(d=y[c])&&u.push(f[c]=d);i(null,y=[],u,l)}for(c=y.length;c--;)(d=y[c])&&(u=i?B(r,d):h[c])>-1&&(r[u]=!(o[u]=d))}}else y=_e(y===o?y.splice(g,y.length):y),i?i(null,o,y,l):z.apply(o,y)})}function Se(e){for(var a,n,i,r=e.length,o=t.relative[e[0].type],s=o||t.relative[" "],l=o?1:0,c=be(function(e){return e===a},s,!0),d=be(function(e){return B(a,e)>-1},s,!0),h=[function(e,n,t){var i=!o&&(t||n!==u)||((a=n).nodeType?c(e,n,t):d(e,n,t));return a=null,i}];l<r;l++)if(n=t.relative[e[l].type])h=[be(ve(h),n)];else{if((n=t.filter[e[l].type].apply(null,e[l].matches))[_]){for(i=++l;i<r&&!t.relative[e[i].type];i++);return ke(l>1&&ve(h),l>1&&ye(e.slice(0,l-1).concat({value:" "===e[l-2].type?"*":""})).replace(j,"$1"),n,l<i&&Se(e.slice(l,i)),i<r&&Se(e=e.slice(i)),i<r&&ye(e))}h.push(n)}return ve(h)}return fe.prototype=t.filters=t.pseudos,t.setFilters=new fe,o=re.tokenize=function(e,a){var n,i,r,o,s,l,u,c=A[e+" "];if(c)return a?0:c.slice(0);for(s=e,l=[],u=t.preFilter;s;){for(o in n&&!(i=H.exec(s))||(i&&(s=s.slice(i[0].length)||s),l.push(r=[])),n=!1,(i=F.exec(s))&&(n=i.shift(),r.push({value:n,type:i[0].replace(j," ")}),s=s.slice(n.length)),t.filter)!(i=V[o].exec(s))||u[o]&&!(i=u[o](i))||(n=i.shift(),r.push({value:n,type:o,matches:i}),s=s.slice(n.length));if(!n)break}return a?s.length:s?re.error(e):A(e,l).slice(0)},s=re.compile=function(e,a){var n,i=[],r=[],s=x[e+" "];if(!s){for(a||(a=o(e)),n=a.length;n--;)(s=Se(a[n]))[_]?i.push(s):r.push(s);(s=x(e,function(e,a){var n=a.length>0,i=e.length>0,r=function(r,o,s,l,c){var d,g,f,y=0,b="0",v=r&&[],_=[],k=u,C=r||i&&t.find.TAG("*",c),w=S+=null==k?1:Math.random()||.1,A=C.length;for(c&&(u=o===p||o||c);b!==A&&null!=(d=C[b]);b++){if(i&&d){for(g=0,o||d.ownerDocument===p||(h(d),s=!m);f=e[g++];)if(f(d,o||p,s)){l.push(d);break}c&&(S=w)}n&&((d=!f&&d)&&y--,r&&v.push(d))}if(y+=b,n&&b!==y){for(g=0;f=a[g++];)f(v,_,o,s);if(r){if(y>0)for(;b--;)v[b]||_[b]||(_[b]=P.call(l));_=_e(_)}z.apply(l,_),c&&!r&&_.length>0&&y+a.length>1&&re.uniqueSort(l)}return c&&(S=w,u=k),v};return n?se(r):r}(r,i))).selector=e}return s},l=re.select=function(e,a,n,i){var r,l,u,c,d,h="function"==typeof e&&e,p=!i&&o(e=h.selector||e);if(n=n||[],1===p.length){if((l=p[0]=p[0].slice(0)).length>2&&"ID"===(u=l[0]).type&&9===a.nodeType&&m&&t.relative[l[1].type]){if(!(a=(t.find.ID(u.matches[0].replace(X,ee),a)||[])[0]))return n;h&&(a=a.parentNode),e=e.slice(l.shift().value.length)}for(r=V.needsContext.test(e)?0:l.length;r--&&(u=l[r],!t.relative[c=u.type]);)if((d=t.find[c])&&(i=d(u.matches[0].replace(X,ee),$.test(l[0].type)&&me(a.parentNode)||a))){if(l.splice(r,1),!(e=i.length&&ye(l)))return z.apply(n,i),n;break}}return(h||s(e,p))(i,a,!m,n,!a||$.test(e)&&me(a.parentNode)||a),n},n.sortStable=_.split("").sort(M).join("")===_,n.detectDuplicates=!!d,h(),n.sortDetached=le(function(e){return 1&e.compareDocumentPosition(p.createElement("fieldset"))}),le(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||ue("type|href|height|width",function(e,a,n){if(!n)return e.getAttribute(a,"type"===a.toLowerCase()?1:2)}),n.attributes&&le(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||ue("value",function(e,a,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),le(function(e){return null==e.getAttribute("disabled")})||ue(L,function(e,a,n){var t;if(!n)return!0===e[a]?a.toLowerCase():(t=e.getAttributeNode(a))&&t.specified?t.value:null}),re}(n);C.find=x,C.expr=x.selectors,C.expr[":"]=C.expr.pseudos,C.uniqueSort=C.unique=x.uniqueSort,C.text=x.getText,C.isXMLDoc=x.isXML,C.contains=x.contains,C.escapeSelector=x.escape;var M=function(e,a,n){for(var t=[],i=void 0!==n;(e=e[a])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&C(e).is(n))break;t.push(e)}return t},T=function(e,a){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==a&&n.push(e);return n},O=C.expr.match.needsContext;function P(e,a){return e.nodeName&&e.nodeName.toLowerCase()===a.toLowerCase()}var N=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function z(e,a,n){return b(a)?C.grep(e,function(e,t){return!!a.call(e,t,e)!==n}):a.nodeType?C.grep(e,function(e){return e===a!==n}):"string"!=typeof a?C.grep(e,function(e){return d.call(a,e)>-1!==n}):C.filter(a,e,n)}C.filter=function(e,a,n){var t=a[0];return n&&(e=":not("+e+")"),1===a.length&&1===t.nodeType?C.find.matchesSelector(t,e)?[t]:[]:C.find.matches(e,C.grep(a,function(e){return 1===e.nodeType}))},C.fn.extend({find:function(e){var a,n,t=this.length,i=this;if("string"!=typeof e)return this.pushStack(C(e).filter(function(){for(a=0;a<t;a++)if(C.contains(i[a],this))return!0}));for(n=this.pushStack([]),a=0;a<t;a++)C.find(e,i[a],n);return t>1?C.uniqueSort(n):n},filter:function(e){return this.pushStack(z(this,e||[],!1))},not:function(e){return this.pushStack(z(this,e||[],!0))},is:function(e){return!!z(this,"string"==typeof e&&O.test(e)?C(e):e||[],!1).length}});var K,B=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(C.fn.init=function(e,a,n){var t,i;if(!e)return this;if(n=n||K,"string"==typeof e){if(!(t="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:B.exec(e))||!t[1]&&a)return!a||a.jquery?(a||n).find(e):this.constructor(a).find(e);if(t[1]){if(a=a instanceof C?a[0]:a,C.merge(this,C.parseHTML(t[1],a&&a.nodeType?a.ownerDocument||a:o,!0)),N.test(t[1])&&C.isPlainObject(a))for(t in a)b(this[t])?this[t](a[t]):this.attr(t,a[t]);return this}return(i=o.getElementById(t[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):b(e)?void 0!==n.ready?n.ready(e):e(C):C.makeArray(e,this)}).prototype=C.fn,K=C(o);var L=/^(?:parents|prev(?:Until|All))/,R={children:!0,contents:!0,next:!0,prev:!0};function I(e,a){for(;(e=e[a])&&1!==e.nodeType;);return e}C.fn.extend({has:function(e){var a=C(e,this),n=a.length;return this.filter(function(){for(var e=0;e<n;e++)if(C.contains(this,a[e]))return!0})},closest:function(e,a){var n,t=0,i=this.length,r=[],o="string"!=typeof e&&C(e);if(!O.test(e))for(;t<i;t++)for(n=this[t];n&&n!==a;n=n.parentNode)if(n.nodeType<11&&(o?o.index(n)>-1:1===n.nodeType&&C.find.matchesSelector(n,e))){r.push(n);break}return this.pushStack(r.length>1?C.uniqueSort(r):r)},index:function(e){return e?"string"==typeof e?d.call(C(e),this[0]):d.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,a){return this.pushStack(C.uniqueSort(C.merge(this.get(),C(e,a))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),C.each({parent:function(e){var a=e.parentNode;return a&&11!==a.nodeType?a:null},parents:function(e){return M(e,"parentNode")},parentsUntil:function(e,a,n){return M(e,"parentNode",n)},next:function(e){return I(e,"nextSibling")},prev:function(e){return I(e,"previousSibling")},nextAll:function(e){return M(e,"nextSibling")},prevAll:function(e){return M(e,"previousSibling")},nextUntil:function(e,a,n){return M(e,"nextSibling",n)},prevUntil:function(e,a,n){return M(e,"previousSibling",n)},siblings:function(e){return T((e.parentNode||{}).firstChild,e)},children:function(e){return T(e.firstChild)},contents:function(e){return P(e,"iframe")?e.contentDocument:(P(e,"template")&&(e=e.content||e),C.merge([],e.childNodes))}},function(e,a){C.fn[e]=function(n,t){var i=C.map(this,a,n);return"Until"!==e.slice(-5)&&(t=n),t&&"string"==typeof t&&(i=C.filter(t,i)),this.length>1&&(R[e]||C.uniqueSort(i),L.test(e)&&i.reverse()),this.pushStack(i)}});var G=/[^\x20\t\r\n\f]+/g;function E(e){return e}function D(e){throw e}function j(e,a,n,t){var i;try{e&&b(i=e.promise)?i.call(e).done(a).fail(n):e&&b(i=e.then)?i.call(e,a,n):a.apply(void 0,[e].slice(t))}catch(e){n.apply(void 0,[e])}}C.Callbacks=function(e){e="string"==typeof e?function(e){var a={};return C.each(e.match(G)||[],function(e,n){a[n]=!0}),a}(e):C.extend({},e);var a,n,t,i,r=[],o=[],s=-1,l=function(){for(i=i||e.once,t=a=!0;o.length;s=-1)for(n=o.shift();++s<r.length;)!1===r[s].apply(n[0],n[1])&&e.stopOnFalse&&(s=r.length,n=!1);e.memory||(n=!1),a=!1,i&&(r=n?[]:"")},u={add:function(){return r&&(n&&!a&&(s=r.length-1,o.push(n)),function a(n){C.each(n,function(n,t){b(t)?e.unique&&u.has(t)||r.push(t):t&&t.length&&"string"!==S(t)&&a(t)})}(arguments),n&&!a&&l()),this},remove:function(){return C.each(arguments,function(e,a){for(var n;(n=C.inArray(a,r,n))>-1;)r.splice(n,1),n<=s&&s--}),this},has:function(e){return e?C.inArray(e,r)>-1:r.length>0},empty:function(){return r&&(r=[]),this},disable:function(){return i=o=[],r=n="",this},disabled:function(){return!r},lock:function(){return i=o=[],n||a||(r=n=""),this},locked:function(){return!!i},fireWith:function(e,n){return i||(n=[e,(n=n||[]).slice?n.slice():n],o.push(n),a||l()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!t}};return u},C.extend({Deferred:function(e){var a=[["notify","progress",C.Callbacks("memory"),C.Callbacks("memory"),2],["resolve","done",C.Callbacks("once memory"),C.Callbacks("once memory"),0,"resolved"],["reject","fail",C.Callbacks("once memory"),C.Callbacks("once memory"),1,"rejected"]],t="pending",i={state:function(){return t},always:function(){return r.done(arguments).fail(arguments),this},catch:function(e){return i.then(null,e)},pipe:function(){var e=arguments;return C.Deferred(function(n){C.each(a,function(a,t){var i=b(e[t[4]])&&e[t[4]];r[t[1]](function(){var e=i&&i.apply(this,arguments);e&&b(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[t[0]+"With"](this,i?[e]:arguments)})}),e=null}).promise()},then:function(e,t,i){var r=0;function o(e,a,t,i){return function(){var s=this,l=arguments,u=function(){var n,u;if(!(e<r)){if((n=t.apply(s,l))===a.promise())throw new TypeError("Thenable self-resolution");u=n&&("object"==typeof n||"function"==typeof n)&&n.then,b(u)?i?u.call(n,o(r,a,E,i),o(r,a,D,i)):(r++,u.call(n,o(r,a,E,i),o(r,a,D,i),o(r,a,E,a.notifyWith))):(t!==E&&(s=void 0,l=[n]),(i||a.resolveWith)(s,l))}},c=i?u:function(){try{u()}catch(n){C.Deferred.exceptionHook&&C.Deferred.exceptionHook(n,c.stackTrace),e+1>=r&&(t!==D&&(s=void 0,l=[n]),a.rejectWith(s,l))}};e?c():(C.Deferred.getStackHook&&(c.stackTrace=C.Deferred.getStackHook()),n.setTimeout(c))}}return C.Deferred(function(n){a[0][3].add(o(0,n,b(i)?i:E,n.notifyWith)),a[1][3].add(o(0,n,b(e)?e:E)),a[2][3].add(o(0,n,b(t)?t:D))}).promise()},promise:function(e){return null!=e?C.extend(e,i):i}},r={};return C.each(a,function(e,n){var o=n[2],s=n[5];i[n[1]]=o.add,s&&o.add(function(){t=s},a[3-e][2].disable,a[3-e][3].disable,a[0][2].lock,a[0][3].lock),o.add(n[3].fire),r[n[0]]=function(){return r[n[0]+"With"](this===r?void 0:this,arguments),this},r[n[0]+"With"]=o.fireWith}),i.promise(r),e&&e.call(r,r),r},when:function(e){var a=arguments.length,n=a,t=Array(n),i=l.call(arguments),r=C.Deferred(),o=function(e){return function(n){t[e]=this,i[e]=arguments.length>1?l.call(arguments):n,--a||r.resolveWith(t,i)}};if(a<=1&&(j(e,r.done(o(n)).resolve,r.reject,!a),"pending"===r.state()||b(i[n]&&i[n].then)))return r.then();for(;n--;)j(i[n],o(n),r.reject);return r.promise()}});var H=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;C.Deferred.exceptionHook=function(e,a){n.console&&n.console.warn&&e&&H.test(e.name)&&n.console.warn("jQuery.Deferred exception: "+e.message,e.stack,a)},C.readyException=function(e){n.setTimeout(function(){throw e})};var F=C.Deferred();function U(){o.removeEventListener("DOMContentLoaded",U),n.removeEventListener("load",U),C.ready()}C.fn.ready=function(e){return F.then(e).catch(function(e){C.readyException(e)}),this},C.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--C.readyWait:C.isReady)||(C.isReady=!0,!0!==e&&--C.readyWait>0||F.resolveWith(o,[C]))}}),C.ready.then=F.then,"complete"===o.readyState||"loading"!==o.readyState&&!o.documentElement.doScroll?n.setTimeout(C.ready):(o.addEventListener("DOMContentLoaded",U),n.addEventListener("load",U));var q=function(e,a,n,t,i,r,o){var s=0,l=e.length,u=null==n;if("object"===S(n))for(s in i=!0,n)q(e,a,s,n[s],!0,r,o);else if(void 0!==t&&(i=!0,b(t)||(o=!0),u&&(o?(a.call(e,t),a=null):(u=a,a=function(e,a,n){return u.call(C(e),n)})),a))for(;s<l;s++)a(e[s],n,o?t:t.call(e[s],s,a(e[s],n)));return i?e:u?a.call(e):l?a(e[0],n):r},W=/^-ms-/,V=/-([a-z])/g;function J(e,a){return a.toUpperCase()}function Y(e){return e.replace(W,"ms-").replace(V,J)}var Q=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function Z(){this.expando=C.expando+Z.uid++}Z.uid=1,Z.prototype={cache:function(e){var a=e[this.expando];return a||(a={},Q(e)&&(e.nodeType?e[this.expando]=a:Object.defineProperty(e,this.expando,{value:a,configurable:!0}))),a},set:function(e,a,n){var t,i=this.cache(e);if("string"==typeof a)i[Y(a)]=n;else for(t in a)i[Y(t)]=a[t];return i},get:function(e,a){return void 0===a?this.cache(e):e[this.expando]&&e[this.expando][Y(a)]},access:function(e,a,n){return void 0===a||a&&"string"==typeof a&&void 0===n?this.get(e,a):(this.set(e,a,n),void 0!==n?n:a)},remove:function(e,a){var n,t=e[this.expando];if(void 0!==t){if(void 0!==a){n=(a=Array.isArray(a)?a.map(Y):(a=Y(a))in t?[a]:a.match(G)||[]).length;for(;n--;)delete t[a[n]]}(void 0===a||C.isEmptyObject(t))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var a=e[this.expando];return void 0!==a&&!C.isEmptyObject(a)}};var $=new Z,X=new Z,ee=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,ae=/[A-Z]/g;function ne(e,a,n){var t;if(void 0===n&&1===e.nodeType)if(t="data-"+a.replace(ae,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(t))){try{n=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:ee.test(e)?JSON.parse(e):e)}(n)}catch(e){}X.set(e,a,n)}else n=void 0;return n}C.extend({hasData:function(e){return X.hasData(e)||$.hasData(e)},data:function(e,a,n){return X.access(e,a,n)},removeData:function(e,a){X.remove(e,a)},_data:function(e,a,n){return $.access(e,a,n)},_removeData:function(e,a){$.remove(e,a)}}),C.fn.extend({data:function(e,a){var n,t,i,r=this[0],o=r&&r.attributes;if(void 0===e){if(this.length&&(i=X.get(r),1===r.nodeType&&!$.get(r,"hasDataAttrs"))){for(n=o.length;n--;)o[n]&&0===(t=o[n].name).indexOf("data-")&&(t=Y(t.slice(5)),ne(r,t,i[t]));$.set(r,"hasDataAttrs",!0)}return i}return"object"==typeof e?this.each(function(){X.set(this,e)}):q(this,function(a){var n;if(r&&void 0===a)return void 0!==(n=X.get(r,e))?n:void 0!==(n=ne(r,e))?n:void 0;this.each(function(){X.set(this,e,a)})},null,a,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){X.remove(this,e)})}}),C.extend({queue:function(e,a,n){var t;if(e)return a=(a||"fx")+"queue",t=$.get(e,a),n&&(!t||Array.isArray(n)?t=$.access(e,a,C.makeArray(n)):t.push(n)),t||[]},dequeue:function(e,a){a=a||"fx";var n=C.queue(e,a),t=n.length,i=n.shift(),r=C._queueHooks(e,a);"inprogress"===i&&(i=n.shift(),t--),i&&("fx"===a&&n.unshift("inprogress"),delete r.stop,i.call(e,function(){C.dequeue(e,a)},r)),!t&&r&&r.empty.fire()},_queueHooks:function(e,a){var n=a+"queueHooks";return $.get(e,n)||$.access(e,n,{empty:C.Callbacks("once memory").add(function(){$.remove(e,[a+"queue",n])})})}}),C.fn.extend({queue:function(e,a){var n=2;return"string"!=typeof e&&(a=e,e="fx",n--),arguments.length<n?C.queue(this[0],e):void 0===a?this:this.each(function(){var n=C.queue(this,e,a);C._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&C.dequeue(this,e)})},dequeue:function(e){return this.each(function(){C.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,a){var n,t=1,i=C.Deferred(),r=this,o=this.length,s=function(){--t||i.resolveWith(r,[r])};for("string"!=typeof e&&(a=e,e=void 0),e=e||"fx";o--;)(n=$.get(r[o],e+"queueHooks"))&&n.empty&&(t++,n.empty.add(s));return s(),i.promise(a)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ie=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),re=["Top","Right","Bottom","Left"],oe=function(e,a){return"none"===(e=a||e).style.display||""===e.style.display&&C.contains(e.ownerDocument,e)&&"none"===C.css(e,"display")},se=function(e,a,n,t){var i,r,o={};for(r in a)o[r]=e.style[r],e.style[r]=a[r];for(r in i=n.apply(e,t||[]),a)e.style[r]=o[r];return i};function le(e,a,n,t){var i,r,o=20,s=t?function(){return t.cur()}:function(){return C.css(e,a,"")},l=s(),u=n&&n[3]||(C.cssNumber[a]?"":"px"),c=(C.cssNumber[a]||"px"!==u&&+l)&&ie.exec(C.css(e,a));if(c&&c[3]!==u){for(l/=2,u=u||c[3],c=+l||1;o--;)C.style(e,a,c+u),(1-r)*(1-(r=s()/l||.5))<=0&&(o=0),c/=r;c*=2,C.style(e,a,c+u),n=n||[]}return n&&(c=+c||+l||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],t&&(t.unit=u,t.start=c,t.end=i)),i}var ue={};function ce(e){var a,n=e.ownerDocument,t=e.nodeName,i=ue[t];return i||(a=n.body.appendChild(n.createElement(t)),i=C.css(a,"display"),a.parentNode.removeChild(a),"none"===i&&(i="block"),ue[t]=i,i)}function de(e,a){for(var n,t,i=[],r=0,o=e.length;r<o;r++)(t=e[r]).style&&(n=t.style.display,a?("none"===n&&(i[r]=$.get(t,"display")||null,i[r]||(t.style.display="")),""===t.style.display&&oe(t)&&(i[r]=ce(t))):"none"!==n&&(i[r]="none",$.set(t,"display",n)));for(r=0;r<o;r++)null!=i[r]&&(e[r].style.display=i[r]);return e}C.fn.extend({show:function(){return de(this,!0)},hide:function(){return de(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){oe(this)?C(this).show():C(this).hide()})}});var he=/^(?:checkbox|radio)$/i,pe=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,ge=/^$|^module$|\/(?:java|ecma)script/i,me={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function fe(e,a){var n;return n=void 0!==e.getElementsByTagName?e.getElementsByTagName(a||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(a||"*"):[],void 0===a||a&&P(e,a)?C.merge([e],n):n}function ye(e,a){for(var n=0,t=e.length;n<t;n++)$.set(e[n],"globalEval",!a||$.get(a[n],"globalEval"))}me.optgroup=me.option,me.tbody=me.tfoot=me.colgroup=me.caption=me.thead,me.th=me.td;var be=/<|&#?\w+;/;function ve(e,a,n,t,i){for(var r,o,s,l,u,c,d=a.createDocumentFragment(),h=[],p=0,g=e.length;p<g;p++)if((r=e[p])||0===r)if("object"===S(r))C.merge(h,r.nodeType?[r]:r);else if(be.test(r)){for(o=o||d.appendChild(a.createElement("div")),s=(pe.exec(r)||["",""])[1].toLowerCase(),l=me[s]||me._default,o.innerHTML=l[1]+C.htmlPrefilter(r)+l[2],c=l[0];c--;)o=o.lastChild;C.merge(h,o.childNodes),(o=d.firstChild).textContent=""}else h.push(a.createTextNode(r));for(d.textContent="",p=0;r=h[p++];)if(t&&C.inArray(r,t)>-1)i&&i.push(r);else if(u=C.contains(r.ownerDocument,r),o=fe(d.appendChild(r),"script"),u&&ye(o),n)for(c=0;r=o[c++];)ge.test(r.type||"")&&n.push(r);return d}!function(){var e=o.createDocumentFragment().appendChild(o.createElement("div")),a=o.createElement("input");a.setAttribute("type","radio"),a.setAttribute("checked","checked"),a.setAttribute("name","t"),e.appendChild(a),y.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var _e=o.documentElement,ke=/^key/,Se=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ce=/^([^.]*)(?:\.(.+)|)/;function we(){return!0}function Ae(){return!1}function xe(){try{return o.activeElement}catch(e){}}function Me(e,a,n,t,i,r){var o,s;if("object"==typeof a){for(s in"string"!=typeof n&&(t=t||n,n=void 0),a)Me(e,s,n,t,a[s],r);return e}if(null==t&&null==i?(i=n,t=n=void 0):null==i&&("string"==typeof n?(i=t,t=void 0):(i=t,t=n,n=void 0)),!1===i)i=Ae;else if(!i)return e;return 1===r&&(o=i,(i=function(e){return C().off(e),o.apply(this,arguments)}).guid=o.guid||(o.guid=C.guid++)),e.each(function(){C.event.add(this,a,i,t,n)})}C.event={global:{},add:function(e,a,n,t,i){var r,o,s,l,u,c,d,h,p,g,m,f=$.get(e);if(f)for(n.handler&&(n=(r=n).handler,i=r.selector),i&&C.find.matchesSelector(_e,i),n.guid||(n.guid=C.guid++),(l=f.events)||(l=f.events={}),(o=f.handle)||(o=f.handle=function(a){return void 0!==C&&C.event.triggered!==a.type?C.event.dispatch.apply(e,arguments):void 0}),u=(a=(a||"").match(G)||[""]).length;u--;)p=m=(s=Ce.exec(a[u])||[])[1],g=(s[2]||"").split(".").sort(),p&&(d=C.event.special[p]||{},p=(i?d.delegateType:d.bindType)||p,d=C.event.special[p]||{},c=C.extend({type:p,origType:m,data:t,handler:n,guid:n.guid,selector:i,needsContext:i&&C.expr.match.needsContext.test(i),namespace:g.join(".")},r),(h=l[p])||((h=l[p]=[]).delegateCount=0,d.setup&&!1!==d.setup.call(e,t,g,o)||e.addEventListener&&e.addEventListener(p,o)),d.add&&(d.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),i?h.splice(h.delegateCount++,0,c):h.push(c),C.event.global[p]=!0)},remove:function(e,a,n,t,i){var r,o,s,l,u,c,d,h,p,g,m,f=$.hasData(e)&&$.get(e);if(f&&(l=f.events)){for(u=(a=(a||"").match(G)||[""]).length;u--;)if(p=m=(s=Ce.exec(a[u])||[])[1],g=(s[2]||"").split(".").sort(),p){for(d=C.event.special[p]||{},h=l[p=(t?d.delegateType:d.bindType)||p]||[],s=s[2]&&new RegExp("(^|\\.)"+g.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=r=h.length;r--;)c=h[r],!i&&m!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||t&&t!==c.selector&&("**"!==t||!c.selector)||(h.splice(r,1),c.selector&&h.delegateCount--,d.remove&&d.remove.call(e,c));o&&!h.length&&(d.teardown&&!1!==d.teardown.call(e,g,f.handle)||C.removeEvent(e,p,f.handle),delete l[p])}else for(p in l)C.event.remove(e,p+a[u],n,t,!0);C.isEmptyObject(l)&&$.remove(e,"handle events")}},dispatch:function(e){var a,n,t,i,r,o,s=C.event.fix(e),l=new Array(arguments.length),u=($.get(this,"events")||{})[s.type]||[],c=C.event.special[s.type]||{};for(l[0]=s,a=1;a<arguments.length;a++)l[a]=arguments[a];if(s.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,s)){for(o=C.event.handlers.call(this,s,u),a=0;(i=o[a++])&&!s.isPropagationStopped();)for(s.currentTarget=i.elem,n=0;(r=i.handlers[n++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!s.rnamespace.test(r.namespace)||(s.handleObj=r,s.data=r.data,void 0!==(t=((C.event.special[r.origType]||{}).handle||r.handler).apply(i.elem,l))&&!1===(s.result=t)&&(s.preventDefault(),s.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(e,a){var n,t,i,r,o,s=[],l=a.delegateCount,u=e.target;if(l&&u.nodeType&&!("click"===e.type&&e.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==e.type||!0!==u.disabled)){for(r=[],o={},n=0;n<l;n++)void 0===o[i=(t=a[n]).selector+" "]&&(o[i]=t.needsContext?C(i,this).index(u)>-1:C.find(i,this,null,[u]).length),o[i]&&r.push(t);r.length&&s.push({elem:u,handlers:r})}return u=this,l<a.length&&s.push({elem:u,handlers:a.slice(l)}),s},addProp:function(e,a){Object.defineProperty(C.Event.prototype,e,{enumerable:!0,configurable:!0,get:b(a)?function(){if(this.originalEvent)return a(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(a){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:a})}})},fix:function(e){return e[C.expando]?e:new C.Event(e)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==xe()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===xe()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&P(this,"input"))return this.click(),!1},_default:function(e){return P(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},C.removeEvent=function(e,a,n){e.removeEventListener&&e.removeEventListener(a,n)},C.Event=function(e,a){if(!(this instanceof C.Event))return new C.Event(e,a);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?we:Ae,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,a&&C.extend(this,a),this.timeStamp=e&&e.timeStamp||Date.now(),this[C.expando]=!0},C.Event.prototype={constructor:C.Event,isDefaultPrevented:Ae,isPropagationStopped:Ae,isImmediatePropagationStopped:Ae,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=we,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=we,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=we,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},C.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var a=e.button;return null==e.which&&ke.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==a&&Se.test(e.type)?1&a?1:2&a?3:4&a?2:0:e.which}},C.event.addProp),C.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,a){C.event.special[e]={delegateType:a,bindType:a,handle:function(e){var n,t=e.relatedTarget,i=e.handleObj;return t&&(t===this||C.contains(this,t))||(e.type=i.origType,n=i.handler.apply(this,arguments),e.type=a),n}}}),C.fn.extend({on:function(e,a,n,t){return Me(this,e,a,n,t)},one:function(e,a,n,t){return Me(this,e,a,n,t,1)},off:function(e,a,n){var t,i;if(e&&e.preventDefault&&e.handleObj)return t=e.handleObj,C(e.delegateTarget).off(t.namespace?t.origType+"."+t.namespace:t.origType,t.selector,t.handler),this;if("object"==typeof e){for(i in e)this.off(i,a,e[i]);return this}return!1!==a&&"function"!=typeof a||(n=a,a=void 0),!1===n&&(n=Ae),this.each(function(){C.event.remove(this,e,n,a)})}});var Te=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Oe=/<script|<style|<link/i,Pe=/checked\s*(?:[^=]|=\s*.checked.)/i,Ne=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function ze(e,a){return P(e,"table")&&P(11!==a.nodeType?a:a.firstChild,"tr")&&C(e).children("tbody")[0]||e}function Ke(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Be(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Le(e,a){var n,t,i,r,o,s,l,u;if(1===a.nodeType){if($.hasData(e)&&(r=$.access(e),o=$.set(a,r),u=r.events))for(i in delete o.handle,o.events={},u)for(n=0,t=u[i].length;n<t;n++)C.event.add(a,i,u[i][n]);X.hasData(e)&&(s=X.access(e),l=C.extend({},s),X.set(a,l))}}function Re(e,a){var n=a.nodeName.toLowerCase();"input"===n&&he.test(e.type)?a.checked=e.checked:"input"!==n&&"textarea"!==n||(a.defaultValue=e.defaultValue)}function Ie(e,a,n,t){a=u.apply([],a);var i,r,o,s,l,c,d=0,h=e.length,p=h-1,g=a[0],m=b(g);if(m||h>1&&"string"==typeof g&&!y.checkClone&&Pe.test(g))return e.each(function(i){var r=e.eq(i);m&&(a[0]=g.call(this,i,r.html())),Ie(r,a,n,t)});if(h&&(r=(i=ve(a,e[0].ownerDocument,!1,e,t)).firstChild,1===i.childNodes.length&&(i=r),r||t)){for(s=(o=C.map(fe(i,"script"),Ke)).length;d<h;d++)l=i,d!==p&&(l=C.clone(l,!0,!0),s&&C.merge(o,fe(l,"script"))),n.call(e[d],l,d);if(s)for(c=o[o.length-1].ownerDocument,C.map(o,Be),d=0;d<s;d++)l=o[d],ge.test(l.type||"")&&!$.access(l,"globalEval")&&C.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?C._evalUrl&&C._evalUrl(l.src):k(l.textContent.replace(Ne,""),c,l))}return e}function Ge(e,a,n){for(var t,i=a?C.filter(a,e):e,r=0;null!=(t=i[r]);r++)n||1!==t.nodeType||C.cleanData(fe(t)),t.parentNode&&(n&&C.contains(t.ownerDocument,t)&&ye(fe(t,"script")),t.parentNode.removeChild(t));return e}C.extend({htmlPrefilter:function(e){return e.replace(Te,"<$1></$2>")},clone:function(e,a,n){var t,i,r,o,s=e.cloneNode(!0),l=C.contains(e.ownerDocument,e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||C.isXMLDoc(e)))for(o=fe(s),t=0,i=(r=fe(e)).length;t<i;t++)Re(r[t],o[t]);if(a)if(n)for(r=r||fe(e),o=o||fe(s),t=0,i=r.length;t<i;t++)Le(r[t],o[t]);else Le(e,s);return(o=fe(s,"script")).length>0&&ye(o,!l&&fe(e,"script")),s},cleanData:function(e){for(var a,n,t,i=C.event.special,r=0;void 0!==(n=e[r]);r++)if(Q(n)){if(a=n[$.expando]){if(a.events)for(t in a.events)i[t]?C.event.remove(n,t):C.removeEvent(n,t,a.handle);n[$.expando]=void 0}n[X.expando]&&(n[X.expando]=void 0)}}}),C.fn.extend({detach:function(e){return Ge(this,e,!0)},remove:function(e){return Ge(this,e)},text:function(e){return q(this,function(e){return void 0===e?C.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Ie(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||ze(this,e).appendChild(e)})},prepend:function(){return Ie(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var a=ze(this,e);a.insertBefore(e,a.firstChild)}})},before:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,a=0;null!=(e=this[a]);a++)1===e.nodeType&&(C.cleanData(fe(e,!1)),e.textContent="");return this},clone:function(e,a){return e=null!=e&&e,a=null==a?e:a,this.map(function(){return C.clone(this,e,a)})},html:function(e){return q(this,function(e){var a=this[0]||{},n=0,t=this.length;if(void 0===e&&1===a.nodeType)return a.innerHTML;if("string"==typeof e&&!Oe.test(e)&&!me[(pe.exec(e)||["",""])[1].toLowerCase()]){e=C.htmlPrefilter(e);try{for(;n<t;n++)1===(a=this[n]||{}).nodeType&&(C.cleanData(fe(a,!1)),a.innerHTML=e);a=0}catch(e){}}a&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return Ie(this,arguments,function(a){var n=this.parentNode;C.inArray(this,e)<0&&(C.cleanData(fe(this)),n&&n.replaceChild(a,this))},e)}}),C.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){C.fn[e]=function(e){for(var n,t=[],i=C(e),r=i.length-1,o=0;o<=r;o++)n=o===r?this:this.clone(!0),C(i[o])[a](n),c.apply(t,n.get());return this.pushStack(t)}});var Ee=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),De=function(e){var a=e.ownerDocument.defaultView;return a&&a.opener||(a=n),a.getComputedStyle(e)},je=new RegExp(re.join("|"),"i");function He(e,a,n){var t,i,r,o,s=e.style;return(n=n||De(e))&&(""!==(o=n.getPropertyValue(a)||n[a])||C.contains(e.ownerDocument,e)||(o=C.style(e,a)),!y.pixelBoxStyles()&&Ee.test(o)&&je.test(a)&&(t=s.width,i=s.minWidth,r=s.maxWidth,s.minWidth=s.maxWidth=s.width=o,o=n.width,s.width=t,s.minWidth=i,s.maxWidth=r)),void 0!==o?o+"":o}function Fe(e,a){return{get:function(){if(!e())return(this.get=a).apply(this,arguments);delete this.get}}}!function(){function e(){if(c){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",_e.appendChild(u).appendChild(c);var e=n.getComputedStyle(c);t="1%"!==e.top,l=12===a(e.marginLeft),c.style.right="60%",s=36===a(e.right),i=36===a(e.width),c.style.position="absolute",r=36===c.offsetWidth||"absolute",_e.removeChild(u),c=null}}function a(e){return Math.round(parseFloat(e))}var t,i,r,s,l,u=o.createElement("div"),c=o.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===c.style.backgroundClip,C.extend(y,{boxSizingReliable:function(){return e(),i},pixelBoxStyles:function(){return e(),s},pixelPosition:function(){return e(),t},reliableMarginLeft:function(){return e(),l},scrollboxSize:function(){return e(),r}}))}();var Ue=/^(none|table(?!-c[ea]).+)/,qe=/^--/,We={position:"absolute",visibility:"hidden",display:"block"},Ve={letterSpacing:"0",fontWeight:"400"},Je=["Webkit","Moz","ms"],Ye=o.createElement("div").style;function Qe(e){var a=C.cssProps[e];return a||(a=C.cssProps[e]=function(e){if(e in Ye)return e;for(var a=e[0].toUpperCase()+e.slice(1),n=Je.length;n--;)if((e=Je[n]+a)in Ye)return e}(e)||e),a}function Ze(e,a,n){var t=ie.exec(a);return t?Math.max(0,t[2]-(n||0))+(t[3]||"px"):a}function $e(e,a,n,t,i,r){var o="width"===a?1:0,s=0,l=0;if(n===(t?"border":"content"))return 0;for(;o<4;o+=2)"margin"===n&&(l+=C.css(e,n+re[o],!0,i)),t?("content"===n&&(l-=C.css(e,"padding"+re[o],!0,i)),"margin"!==n&&(l-=C.css(e,"border"+re[o]+"Width",!0,i))):(l+=C.css(e,"padding"+re[o],!0,i),"padding"!==n?l+=C.css(e,"border"+re[o]+"Width",!0,i):s+=C.css(e,"border"+re[o]+"Width",!0,i));return!t&&r>=0&&(l+=Math.max(0,Math.ceil(e["offset"+a[0].toUpperCase()+a.slice(1)]-r-l-s-.5))),l}function Xe(e,a,n){var t=De(e),i=He(e,a,t),r="border-box"===C.css(e,"boxSizing",!1,t),o=r;if(Ee.test(i)){if(!n)return i;i="auto"}return o=o&&(y.boxSizingReliable()||i===e.style[a]),("auto"===i||!parseFloat(i)&&"inline"===C.css(e,"display",!1,t))&&(i=e["offset"+a[0].toUpperCase()+a.slice(1)],o=!0),(i=parseFloat(i)||0)+$e(e,a,n||(r?"border":"content"),o,t,i)+"px"}function ea(e,a,n,t,i){return new ea.prototype.init(e,a,n,t,i)}C.extend({cssHooks:{opacity:{get:function(e,a){if(a){var n=He(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,a,n,t){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,r,o,s=Y(a),l=qe.test(a),u=e.style;if(l||(a=Qe(s)),o=C.cssHooks[a]||C.cssHooks[s],void 0===n)return o&&"get"in o&&void 0!==(i=o.get(e,!1,t))?i:u[a];"string"===(r=typeof n)&&(i=ie.exec(n))&&i[1]&&(n=le(e,a,i),r="number"),null!=n&&n==n&&("number"===r&&(n+=i&&i[3]||(C.cssNumber[s]?"":"px")),y.clearCloneStyle||""!==n||0!==a.indexOf("background")||(u[a]="inherit"),o&&"set"in o&&void 0===(n=o.set(e,n,t))||(l?u.setProperty(a,n):u[a]=n))}},css:function(e,a,n,t){var i,r,o,s=Y(a);return qe.test(a)||(a=Qe(s)),(o=C.cssHooks[a]||C.cssHooks[s])&&"get"in o&&(i=o.get(e,!0,n)),void 0===i&&(i=He(e,a,t)),"normal"===i&&a in Ve&&(i=Ve[a]),""===n||n?(r=parseFloat(i),!0===n||isFinite(r)?r||0:i):i}}),C.each(["height","width"],function(e,a){C.cssHooks[a]={get:function(e,n,t){if(n)return!Ue.test(C.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?Xe(e,a,t):se(e,We,function(){return Xe(e,a,t)})},set:function(e,n,t){var i,r=De(e),o="border-box"===C.css(e,"boxSizing",!1,r),s=t&&$e(e,a,t,o,r);return o&&y.scrollboxSize()===r.position&&(s-=Math.ceil(e["offset"+a[0].toUpperCase()+a.slice(1)]-parseFloat(r[a])-$e(e,a,"border",!1,r)-.5)),s&&(i=ie.exec(n))&&"px"!==(i[3]||"px")&&(e.style[a]=n,n=C.css(e,a)),Ze(0,n,s)}}}),C.cssHooks.marginLeft=Fe(y.reliableMarginLeft,function(e,a){if(a)return(parseFloat(He(e,"marginLeft"))||e.getBoundingClientRect().left-se(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),C.each({margin:"",padding:"",border:"Width"},function(e,a){C.cssHooks[e+a]={expand:function(n){for(var t=0,i={},r="string"==typeof n?n.split(" "):[n];t<4;t++)i[e+re[t]+a]=r[t]||r[t-2]||r[0];return i}},"margin"!==e&&(C.cssHooks[e+a].set=Ze)}),C.fn.extend({css:function(e,a){return q(this,function(e,a,n){var t,i,r={},o=0;if(Array.isArray(a)){for(t=De(e),i=a.length;o<i;o++)r[a[o]]=C.css(e,a[o],!1,t);return r}return void 0!==n?C.style(e,a,n):C.css(e,a)},e,a,arguments.length>1)}}),C.Tween=ea,ea.prototype={constructor:ea,init:function(e,a,n,t,i,r){this.elem=e,this.prop=n,this.easing=i||C.easing._default,this.options=a,this.start=this.now=this.cur(),this.end=t,this.unit=r||(C.cssNumber[n]?"":"px")},cur:function(){var e=ea.propHooks[this.prop];return e&&e.get?e.get(this):ea.propHooks._default.get(this)},run:function(e){var a,n=ea.propHooks[this.prop];return this.options.duration?this.pos=a=C.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=a=e,this.now=(this.end-this.start)*a+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):ea.propHooks._default.set(this),this}},ea.prototype.init.prototype=ea.prototype,ea.propHooks={_default:{get:function(e){var a;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(a=C.css(e.elem,e.prop,""))&&"auto"!==a?a:0},set:function(e){C.fx.step[e.prop]?C.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[C.cssProps[e.prop]]&&!C.cssHooks[e.prop]?e.elem[e.prop]=e.now:C.style(e.elem,e.prop,e.now+e.unit)}}},ea.propHooks.scrollTop=ea.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},C.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},C.fx=ea.prototype.init,C.fx.step={};var aa,na,ta=/^(?:toggle|show|hide)$/,ia=/queueHooks$/;function ra(){na&&(!1===o.hidden&&n.requestAnimationFrame?n.requestAnimationFrame(ra):n.setTimeout(ra,C.fx.interval),C.fx.tick())}function oa(){return n.setTimeout(function(){aa=void 0}),aa=Date.now()}function sa(e,a){var n,t=0,i={height:e};for(a=a?1:0;t<4;t+=2-a)i["margin"+(n=re[t])]=i["padding"+n]=e;return a&&(i.opacity=i.width=e),i}function la(e,a,n){for(var t,i=(ua.tweeners[a]||[]).concat(ua.tweeners["*"]),r=0,o=i.length;r<o;r++)if(t=i[r].call(n,a,e))return t}function ua(e,a,n){var t,i,r=0,o=ua.prefilters.length,s=C.Deferred().always(function(){delete l.elem}),l=function(){if(i)return!1;for(var a=aa||oa(),n=Math.max(0,u.startTime+u.duration-a),t=1-(n/u.duration||0),r=0,o=u.tweens.length;r<o;r++)u.tweens[r].run(t);return s.notifyWith(e,[u,t,n]),t<1&&o?n:(o||s.notifyWith(e,[u,1,0]),s.resolveWith(e,[u]),!1)},u=s.promise({elem:e,props:C.extend({},a),opts:C.extend(!0,{specialEasing:{},easing:C.easing._default},n),originalProperties:a,originalOptions:n,startTime:aa||oa(),duration:n.duration,tweens:[],createTween:function(a,n){var t=C.Tween(e,u.opts,a,n,u.opts.specialEasing[a]||u.opts.easing);return u.tweens.push(t),t},stop:function(a){var n=0,t=a?u.tweens.length:0;if(i)return this;for(i=!0;n<t;n++)u.tweens[n].run(1);return a?(s.notifyWith(e,[u,1,0]),s.resolveWith(e,[u,a])):s.rejectWith(e,[u,a]),this}}),c=u.props;for(!function(e,a){var n,t,i,r,o;for(n in e)if(i=a[t=Y(n)],r=e[n],Array.isArray(r)&&(i=r[1],r=e[n]=r[0]),n!==t&&(e[t]=r,delete e[n]),(o=C.cssHooks[t])&&"expand"in o)for(n in r=o.expand(r),delete e[t],r)n in e||(e[n]=r[n],a[n]=i);else a[t]=i}(c,u.opts.specialEasing);r<o;r++)if(t=ua.prefilters[r].call(u,e,c,u.opts))return b(t.stop)&&(C._queueHooks(u.elem,u.opts.queue).stop=t.stop.bind(t)),t;return C.map(c,la,u),b(u.opts.start)&&u.opts.start.call(e,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),C.fx.timer(C.extend(l,{elem:e,anim:u,queue:u.opts.queue})),u}C.Animation=C.extend(ua,{tweeners:{"*":[function(e,a){var n=this.createTween(e,a);return le(n.elem,e,ie.exec(a),n),n}]},tweener:function(e,a){b(e)?(a=e,e=["*"]):e=e.match(G);for(var n,t=0,i=e.length;t<i;t++)n=e[t],ua.tweeners[n]=ua.tweeners[n]||[],ua.tweeners[n].unshift(a)},prefilters:[function(e,a,n){var t,i,r,o,s,l,u,c,d="width"in a||"height"in a,h=this,p={},g=e.style,m=e.nodeType&&oe(e),f=$.get(e,"fxshow");for(t in n.queue||(null==(o=C._queueHooks(e,"fx")).unqueued&&(o.unqueued=0,s=o.empty.fire,o.empty.fire=function(){o.unqueued||s()}),o.unqueued++,h.always(function(){h.always(function(){o.unqueued--,C.queue(e,"fx").length||o.empty.fire()})})),a)if(i=a[t],ta.test(i)){if(delete a[t],r=r||"toggle"===i,i===(m?"hide":"show")){if("show"!==i||!f||void 0===f[t])continue;m=!0}p[t]=f&&f[t]||C.style(e,t)}if((l=!C.isEmptyObject(a))||!C.isEmptyObject(p))for(t in d&&1===e.nodeType&&(n.overflow=[g.overflow,g.overflowX,g.overflowY],null==(u=f&&f.display)&&(u=$.get(e,"display")),"none"===(c=C.css(e,"display"))&&(u?c=u:(de([e],!0),u=e.style.display||u,c=C.css(e,"display"),de([e]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===C.css(e,"float")&&(l||(h.done(function(){g.display=u}),null==u&&(c=g.display,u="none"===c?"":c)),g.display="inline-block")),n.overflow&&(g.overflow="hidden",h.always(function(){g.overflow=n.overflow[0],g.overflowX=n.overflow[1],g.overflowY=n.overflow[2]})),l=!1,p)l||(f?"hidden"in f&&(m=f.hidden):f=$.access(e,"fxshow",{display:u}),r&&(f.hidden=!m),m&&de([e],!0),h.done(function(){for(t in m||de([e]),$.remove(e,"fxshow"),p)C.style(e,t,p[t])})),l=la(m?f[t]:0,t,h),t in f||(f[t]=l.start,m&&(l.end=l.start,l.start=0))}],prefilter:function(e,a){a?ua.prefilters.unshift(e):ua.prefilters.push(e)}}),C.speed=function(e,a,n){var t=e&&"object"==typeof e?C.extend({},e):{complete:n||!n&&a||b(e)&&e,duration:e,easing:n&&a||a&&!b(a)&&a};return C.fx.off?t.duration=0:"number"!=typeof t.duration&&(t.duration in C.fx.speeds?t.duration=C.fx.speeds[t.duration]:t.duration=C.fx.speeds._default),null!=t.queue&&!0!==t.queue||(t.queue="fx"),t.old=t.complete,t.complete=function(){b(t.old)&&t.old.call(this),t.queue&&C.dequeue(this,t.queue)},t},C.fn.extend({fadeTo:function(e,a,n,t){return this.filter(oe).css("opacity",0).show().end().animate({opacity:a},e,n,t)},animate:function(e,a,n,t){var i=C.isEmptyObject(e),r=C.speed(a,n,t),o=function(){var a=ua(this,C.extend({},e),r);(i||$.get(this,"finish"))&&a.stop(!0)};return o.finish=o,i||!1===r.queue?this.each(o):this.queue(r.queue,o)},stop:function(e,a,n){var t=function(e){var a=e.stop;delete e.stop,a(n)};return"string"!=typeof e&&(n=a,a=e,e=void 0),a&&!1!==e&&this.queue(e||"fx",[]),this.each(function(){var a=!0,i=null!=e&&e+"queueHooks",r=C.timers,o=$.get(this);if(i)o[i]&&o[i].stop&&t(o[i]);else for(i in o)o[i]&&o[i].stop&&ia.test(i)&&t(o[i]);for(i=r.length;i--;)r[i].elem!==this||null!=e&&r[i].queue!==e||(r[i].anim.stop(n),a=!1,r.splice(i,1));!a&&n||C.dequeue(this,e)})},finish:function(e){return!1!==e&&(e=e||"fx"),this.each(function(){var a,n=$.get(this),t=n[e+"queue"],i=n[e+"queueHooks"],r=C.timers,o=t?t.length:0;for(n.finish=!0,C.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),a=r.length;a--;)r[a].elem===this&&r[a].queue===e&&(r[a].anim.stop(!0),r.splice(a,1));for(a=0;a<o;a++)t[a]&&t[a].finish&&t[a].finish.call(this);delete n.finish})}}),C.each(["toggle","show","hide"],function(e,a){var n=C.fn[a];C.fn[a]=function(e,t,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(sa(a,!0),e,t,i)}}),C.each({slideDown:sa("show"),slideUp:sa("hide"),slideToggle:sa("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,a){C.fn[e]=function(e,n,t){return this.animate(a,e,n,t)}}),C.timers=[],C.fx.tick=function(){var e,a=0,n=C.timers;for(aa=Date.now();a<n.length;a++)(e=n[a])()||n[a]!==e||n.splice(a--,1);n.length||C.fx.stop(),aa=void 0},C.fx.timer=function(e){C.timers.push(e),C.fx.start()},C.fx.interval=13,C.fx.start=function(){na||(na=!0,ra())},C.fx.stop=function(){na=null},C.fx.speeds={slow:600,fast:200,_default:400},C.fn.delay=function(e,a){return e=C.fx&&C.fx.speeds[e]||e,a=a||"fx",this.queue(a,function(a,t){var i=n.setTimeout(a,e);t.stop=function(){n.clearTimeout(i)}})},function(){var e=o.createElement("input"),a=o.createElement("select").appendChild(o.createElement("option"));e.type="checkbox",y.checkOn=""!==e.value,y.optSelected=a.selected,(e=o.createElement("input")).value="t",e.type="radio",y.radioValue="t"===e.value}();var ca,da=C.expr.attrHandle;C.fn.extend({attr:function(e,a){return q(this,C.attr,e,a,arguments.length>1)},removeAttr:function(e){return this.each(function(){C.removeAttr(this,e)})}}),C.extend({attr:function(e,a,n){var t,i,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return void 0===e.getAttribute?C.prop(e,a,n):(1===r&&C.isXMLDoc(e)||(i=C.attrHooks[a.toLowerCase()]||(C.expr.match.bool.test(a)?ca:void 0)),void 0!==n?null===n?void C.removeAttr(e,a):i&&"set"in i&&void 0!==(t=i.set(e,n,a))?t:(e.setAttribute(a,n+""),n):i&&"get"in i&&null!==(t=i.get(e,a))?t:null==(t=C.find.attr(e,a))?void 0:t)},attrHooks:{type:{set:function(e,a){if(!y.radioValue&&"radio"===a&&P(e,"input")){var n=e.value;return e.setAttribute("type",a),n&&(e.value=n),a}}}},removeAttr:function(e,a){var n,t=0,i=a&&a.match(G);if(i&&1===e.nodeType)for(;n=i[t++];)e.removeAttribute(n)}}),ca={set:function(e,a,n){return!1===a?C.removeAttr(e,n):e.setAttribute(n,n),n}},C.each(C.expr.match.bool.source.match(/\w+/g),function(e,a){var n=da[a]||C.find.attr;da[a]=function(e,a,t){var i,r,o=a.toLowerCase();return t||(r=da[o],da[o]=i,i=null!=n(e,a,t)?o:null,da[o]=r),i}});var ha=/^(?:input|select|textarea|button)$/i,pa=/^(?:a|area)$/i;function ga(e){return(e.match(G)||[]).join(" ")}function ma(e){return e.getAttribute&&e.getAttribute("class")||""}function fa(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(G)||[]}C.fn.extend({prop:function(e,a){return q(this,C.prop,e,a,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[C.propFix[e]||e]})}}),C.extend({prop:function(e,a,n){var t,i,r=e.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&C.isXMLDoc(e)||(a=C.propFix[a]||a,i=C.propHooks[a]),void 0!==n?i&&"set"in i&&void 0!==(t=i.set(e,n,a))?t:e[a]=n:i&&"get"in i&&null!==(t=i.get(e,a))?t:e[a]},propHooks:{tabIndex:{get:function(e){var a=C.find.attr(e,"tabindex");return a?parseInt(a,10):ha.test(e.nodeName)||pa.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),y.optSelected||(C.propHooks.selected={get:function(e){var a=e.parentNode;return a&&a.parentNode&&a.parentNode.selectedIndex,null},set:function(e){var a=e.parentNode;a&&(a.selectedIndex,a.parentNode&&a.parentNode.selectedIndex)}}),C.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){C.propFix[this.toLowerCase()]=this}),C.fn.extend({addClass:function(e){var a,n,t,i,r,o,s,l=0;if(b(e))return this.each(function(a){C(this).addClass(e.call(this,a,ma(this)))});if((a=fa(e)).length)for(;n=this[l++];)if(i=ma(n),t=1===n.nodeType&&" "+ga(i)+" "){for(o=0;r=a[o++];)t.indexOf(" "+r+" ")<0&&(t+=r+" ");i!==(s=ga(t))&&n.setAttribute("class",s)}return this},removeClass:function(e){var a,n,t,i,r,o,s,l=0;if(b(e))return this.each(function(a){C(this).removeClass(e.call(this,a,ma(this)))});if(!arguments.length)return this.attr("class","");if((a=fa(e)).length)for(;n=this[l++];)if(i=ma(n),t=1===n.nodeType&&" "+ga(i)+" "){for(o=0;r=a[o++];)for(;t.indexOf(" "+r+" ")>-1;)t=t.replace(" "+r+" "," ");i!==(s=ga(t))&&n.setAttribute("class",s)}return this},toggleClass:function(e,a){var n=typeof e,t="string"===n||Array.isArray(e);return"boolean"==typeof a&&t?a?this.addClass(e):this.removeClass(e):b(e)?this.each(function(n){C(this).toggleClass(e.call(this,n,ma(this),a),a)}):this.each(function(){var a,i,r,o;if(t)for(i=0,r=C(this),o=fa(e);a=o[i++];)r.hasClass(a)?r.removeClass(a):r.addClass(a);else void 0!==e&&"boolean"!==n||((a=ma(this))&&$.set(this,"__className__",a),this.setAttribute&&this.setAttribute("class",a||!1===e?"":$.get(this,"__className__")||""))})},hasClass:function(e){var a,n,t=0;for(a=" "+e+" ";n=this[t++];)if(1===n.nodeType&&(" "+ga(ma(n))+" ").indexOf(a)>-1)return!0;return!1}});var ya=/\r/g;C.fn.extend({val:function(e){var a,n,t,i=this[0];return arguments.length?(t=b(e),this.each(function(n){var i;1===this.nodeType&&(null==(i=t?e.call(this,n,C(this).val()):e)?i="":"number"==typeof i?i+="":Array.isArray(i)&&(i=C.map(i,function(e){return null==e?"":e+""})),(a=C.valHooks[this.type]||C.valHooks[this.nodeName.toLowerCase()])&&"set"in a&&void 0!==a.set(this,i,"value")||(this.value=i))})):i?(a=C.valHooks[i.type]||C.valHooks[i.nodeName.toLowerCase()])&&"get"in a&&void 0!==(n=a.get(i,"value"))?n:"string"==typeof(n=i.value)?n.replace(ya,""):null==n?"":n:void 0}}),C.extend({valHooks:{option:{get:function(e){var a=C.find.attr(e,"value");return null!=a?a:ga(C.text(e))}},select:{get:function(e){var a,n,t,i=e.options,r=e.selectedIndex,o="select-one"===e.type,s=o?null:[],l=o?r+1:i.length;for(t=r<0?l:o?r:0;t<l;t++)if(((n=i[t]).selected||t===r)&&!n.disabled&&(!n.parentNode.disabled||!P(n.parentNode,"optgroup"))){if(a=C(n).val(),o)return a;s.push(a)}return s},set:function(e,a){for(var n,t,i=e.options,r=C.makeArray(a),o=i.length;o--;)((t=i[o]).selected=C.inArray(C.valHooks.option.get(t),r)>-1)&&(n=!0);return n||(e.selectedIndex=-1),r}}}}),C.each(["radio","checkbox"],function(){C.valHooks[this]={set:function(e,a){if(Array.isArray(a))return e.checked=C.inArray(C(e).val(),a)>-1}},y.checkOn||(C.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in n;var ba=/^(?:focusinfocus|focusoutblur)$/,va=function(e){e.stopPropagation()};C.extend(C.event,{trigger:function(e,a,t,i){var r,s,l,u,c,d,h,p,m=[t||o],f=g.call(e,"type")?e.type:e,y=g.call(e,"namespace")?e.namespace.split("."):[];if(s=p=l=t=t||o,3!==t.nodeType&&8!==t.nodeType&&!ba.test(f+C.event.triggered)&&(f.indexOf(".")>-1&&(f=(y=f.split(".")).shift(),y.sort()),c=f.indexOf(":")<0&&"on"+f,(e=e[C.expando]?e:new C.Event(f,"object"==typeof e&&e)).isTrigger=i?2:3,e.namespace=y.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+y.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=t),a=null==a?[e]:C.makeArray(a,[e]),h=C.event.special[f]||{},i||!h.trigger||!1!==h.trigger.apply(t,a))){if(!i&&!h.noBubble&&!v(t)){for(u=h.delegateType||f,ba.test(u+f)||(s=s.parentNode);s;s=s.parentNode)m.push(s),l=s;l===(t.ownerDocument||o)&&m.push(l.defaultView||l.parentWindow||n)}for(r=0;(s=m[r++])&&!e.isPropagationStopped();)p=s,e.type=r>1?u:h.bindType||f,(d=($.get(s,"events")||{})[e.type]&&$.get(s,"handle"))&&d.apply(s,a),(d=c&&s[c])&&d.apply&&Q(s)&&(e.result=d.apply(s,a),!1===e.result&&e.preventDefault());return e.type=f,i||e.isDefaultPrevented()||h._default&&!1!==h._default.apply(m.pop(),a)||!Q(t)||c&&b(t[f])&&!v(t)&&((l=t[c])&&(t[c]=null),C.event.triggered=f,e.isPropagationStopped()&&p.addEventListener(f,va),t[f](),e.isPropagationStopped()&&p.removeEventListener(f,va),C.event.triggered=void 0,l&&(t[c]=l)),e.result}},simulate:function(e,a,n){var t=C.extend(new C.Event,n,{type:e,isSimulated:!0});C.event.trigger(t,null,a)}}),C.fn.extend({trigger:function(e,a){return this.each(function(){C.event.trigger(e,a,this)})},triggerHandler:function(e,a){var n=this[0];if(n)return C.event.trigger(e,a,n,!0)}}),y.focusin||C.each({focus:"focusin",blur:"focusout"},function(e,a){var n=function(e){C.event.simulate(a,e.target,C.event.fix(e))};C.event.special[a]={setup:function(){var t=this.ownerDocument||this,i=$.access(t,a);i||t.addEventListener(e,n,!0),$.access(t,a,(i||0)+1)},teardown:function(){var t=this.ownerDocument||this,i=$.access(t,a)-1;i?$.access(t,a,i):(t.removeEventListener(e,n,!0),$.remove(t,a))}}});var _a=n.location,ka=Date.now(),Sa=/\?/;C.parseXML=function(e){var a;if(!e||"string"!=typeof e)return null;try{a=(new n.DOMParser).parseFromString(e,"text/xml")}catch(e){a=void 0}return a&&!a.getElementsByTagName("parsererror").length||C.error("Invalid XML: "+e),a};var Ca=/\[\]$/,wa=/\r?\n/g,Aa=/^(?:submit|button|image|reset|file)$/i,xa=/^(?:input|select|textarea|keygen)/i;function Ma(e,a,n,t){var i;if(Array.isArray(a))C.each(a,function(a,i){n||Ca.test(e)?t(e,i):Ma(e+"["+("object"==typeof i&&null!=i?a:"")+"]",i,n,t)});else if(n||"object"!==S(a))t(e,a);else for(i in a)Ma(e+"["+i+"]",a[i],n,t)}C.param=function(e,a){var n,t=[],i=function(e,a){var n=b(a)?a():a;t[t.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(e)||e.jquery&&!C.isPlainObject(e))C.each(e,function(){i(this.name,this.value)});else for(n in e)Ma(n,e[n],a,i);return t.join("&")},C.fn.extend({serialize:function(){return C.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=C.prop(this,"elements");return e?C.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!C(this).is(":disabled")&&xa.test(this.nodeName)&&!Aa.test(e)&&(this.checked||!he.test(e))}).map(function(e,a){var n=C(this).val();return null==n?null:Array.isArray(n)?C.map(n,function(e){return{name:a.name,value:e.replace(wa,"\r\n")}}):{name:a.name,value:n.replace(wa,"\r\n")}}).get()}});var Ta=/%20/g,Oa=/#.*$/,Pa=/([?&])_=[^&]*/,Na=/^(.*?):[ \t]*([^\r\n]*)$/gm,za=/^(?:GET|HEAD)$/,Ka=/^\/\//,Ba={},La={},Ra="*/".concat("*"),Ia=o.createElement("a");function Ga(e){return function(a,n){"string"!=typeof a&&(n=a,a="*");var t,i=0,r=a.toLowerCase().match(G)||[];if(b(n))for(;t=r[i++];)"+"===t[0]?(t=t.slice(1)||"*",(e[t]=e[t]||[]).unshift(n)):(e[t]=e[t]||[]).push(n)}}function Ea(e,a,n,t){var i={},r=e===La;function o(s){var l;return i[s]=!0,C.each(e[s]||[],function(e,s){var u=s(a,n,t);return"string"!=typeof u||r||i[u]?r?!(l=u):void 0:(a.dataTypes.unshift(u),o(u),!1)}),l}return o(a.dataTypes[0])||!i["*"]&&o("*")}function Da(e,a){var n,t,i=C.ajaxSettings.flatOptions||{};for(n in a)void 0!==a[n]&&((i[n]?e:t||(t={}))[n]=a[n]);return t&&C.extend(!0,e,t),e}Ia.href=_a.href,C.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:_a.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(_a.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ra,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":C.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,a){return a?Da(Da(e,C.ajaxSettings),a):Da(C.ajaxSettings,e)},ajaxPrefilter:Ga(Ba),ajaxTransport:Ga(La),ajax:function(e,a){"object"==typeof e&&(a=e,e=void 0),a=a||{};var t,i,r,s,l,u,c,d,h,p,g=C.ajaxSetup({},a),m=g.context||g,f=g.context&&(m.nodeType||m.jquery)?C(m):C.event,y=C.Deferred(),b=C.Callbacks("once memory"),v=g.statusCode||{},_={},k={},S="canceled",w={readyState:0,getResponseHeader:function(e){var a;if(c){if(!s)for(s={};a=Na.exec(r);)s[a[1].toLowerCase()]=a[2];a=s[e.toLowerCase()]}return null==a?null:a},getAllResponseHeaders:function(){return c?r:null},setRequestHeader:function(e,a){return null==c&&(e=k[e.toLowerCase()]=k[e.toLowerCase()]||e,_[e]=a),this},overrideMimeType:function(e){return null==c&&(g.mimeType=e),this},statusCode:function(e){var a;if(e)if(c)w.always(e[w.status]);else for(a in e)v[a]=[v[a],e[a]];return this},abort:function(e){var a=e||S;return t&&t.abort(a),A(0,a),this}};if(y.promise(w),g.url=((e||g.url||_a.href)+"").replace(Ka,_a.protocol+"//"),g.type=a.method||a.type||g.method||g.type,g.dataTypes=(g.dataType||"*").toLowerCase().match(G)||[""],null==g.crossDomain){u=o.createElement("a");try{u.href=g.url,u.href=u.href,g.crossDomain=Ia.protocol+"//"+Ia.host!=u.protocol+"//"+u.host}catch(e){g.crossDomain=!0}}if(g.data&&g.processData&&"string"!=typeof g.data&&(g.data=C.param(g.data,g.traditional)),Ea(Ba,g,a,w),c)return w;for(h in(d=C.event&&g.global)&&0==C.active++&&C.event.trigger("ajaxStart"),g.type=g.type.toUpperCase(),g.hasContent=!za.test(g.type),i=g.url.replace(Oa,""),g.hasContent?g.data&&g.processData&&0===(g.contentType||"").indexOf("application/x-www-form-urlencoded")&&(g.data=g.data.replace(Ta,"+")):(p=g.url.slice(i.length),g.data&&(g.processData||"string"==typeof g.data)&&(i+=(Sa.test(i)?"&":"?")+g.data,delete g.data),!1===g.cache&&(i=i.replace(Pa,"$1"),p=(Sa.test(i)?"&":"?")+"_="+ka+++p),g.url=i+p),g.ifModified&&(C.lastModified[i]&&w.setRequestHeader("If-Modified-Since",C.lastModified[i]),C.etag[i]&&w.setRequestHeader("If-None-Match",C.etag[i])),(g.data&&g.hasContent&&!1!==g.contentType||a.contentType)&&w.setRequestHeader("Content-Type",g.contentType),w.setRequestHeader("Accept",g.dataTypes[0]&&g.accepts[g.dataTypes[0]]?g.accepts[g.dataTypes[0]]+("*"!==g.dataTypes[0]?", "+Ra+"; q=0.01":""):g.accepts["*"]),g.headers)w.setRequestHeader(h,g.headers[h]);if(g.beforeSend&&(!1===g.beforeSend.call(m,w,g)||c))return w.abort();if(S="abort",b.add(g.complete),w.done(g.success),w.fail(g.error),t=Ea(La,g,a,w)){if(w.readyState=1,d&&f.trigger("ajaxSend",[w,g]),c)return w;g.async&&g.timeout>0&&(l=n.setTimeout(function(){w.abort("timeout")},g.timeout));try{c=!1,t.send(_,A)}catch(e){if(c)throw e;A(-1,e)}}else A(-1,"No Transport");function A(e,a,o,s){var u,h,p,_,k,S=a;c||(c=!0,l&&n.clearTimeout(l),t=void 0,r=s||"",w.readyState=e>0?4:0,u=e>=200&&e<300||304===e,o&&(_=function(e,a,n){for(var t,i,r,o,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===t&&(t=e.mimeType||a.getResponseHeader("Content-Type"));if(t)for(i in s)if(s[i]&&s[i].test(t)){l.unshift(i);break}if(l[0]in n)r=l[0];else{for(i in n){if(!l[0]||e.converters[i+" "+l[0]]){r=i;break}o||(o=i)}r=r||o}if(r)return r!==l[0]&&l.unshift(r),n[r]}(g,w,o)),_=function(e,a,n,t){var i,r,o,s,l,u={},c=e.dataTypes.slice();if(c[1])for(o in e.converters)u[o.toLowerCase()]=e.converters[o];for(r=c.shift();r;)if(e.responseFields[r]&&(n[e.responseFields[r]]=a),!l&&t&&e.dataFilter&&(a=e.dataFilter(a,e.dataType)),l=r,r=c.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(!(o=u[l+" "+r]||u["* "+r]))for(i in u)if((s=i.split(" "))[1]===r&&(o=u[l+" "+s[0]]||u["* "+s[0]])){!0===o?o=u[i]:!0!==u[i]&&(r=s[0],c.unshift(s[1]));break}if(!0!==o)if(o&&e.throws)a=o(a);else try{a=o(a)}catch(e){return{state:"parsererror",error:o?e:"No conversion from "+l+" to "+r}}}return{state:"success",data:a}}(g,_,w,u),u?(g.ifModified&&((k=w.getResponseHeader("Last-Modified"))&&(C.lastModified[i]=k),(k=w.getResponseHeader("etag"))&&(C.etag[i]=k)),204===e||"HEAD"===g.type?S="nocontent":304===e?S="notmodified":(S=_.state,h=_.data,u=!(p=_.error))):(p=S,!e&&S||(S="error",e<0&&(e=0))),w.status=e,w.statusText=(a||S)+"",u?y.resolveWith(m,[h,S,w]):y.rejectWith(m,[w,S,p]),w.statusCode(v),v=void 0,d&&f.trigger(u?"ajaxSuccess":"ajaxError",[w,g,u?h:p]),b.fireWith(m,[w,S]),d&&(f.trigger("ajaxComplete",[w,g]),--C.active||C.event.trigger("ajaxStop")))}return w},getJSON:function(e,a,n){return C.get(e,a,n,"json")},getScript:function(e,a){return C.get(e,void 0,a,"script")}}),C.each(["get","post"],function(e,a){C[a]=function(e,n,t,i){return b(n)&&(i=i||t,t=n,n=void 0),C.ajax(C.extend({url:e,type:a,dataType:i,data:n,success:t},C.isPlainObject(e)&&e))}}),C._evalUrl=function(e){return C.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},C.fn.extend({wrapAll:function(e){var a;return this[0]&&(b(e)&&(e=e.call(this[0])),a=C(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&a.insertBefore(this[0]),a.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(e){return b(e)?this.each(function(a){C(this).wrapInner(e.call(this,a))}):this.each(function(){var a=C(this),n=a.contents();n.length?n.wrapAll(e):a.append(e)})},wrap:function(e){var a=b(e);return this.each(function(n){C(this).wrapAll(a?e.call(this,n):e)})},unwrap:function(e){return this.parent(e).not("body").each(function(){C(this).replaceWith(this.childNodes)}),this}}),C.expr.pseudos.hidden=function(e){return!C.expr.pseudos.visible(e)},C.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},C.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(e){}};var ja={0:200,1223:204},Ha=C.ajaxSettings.xhr();y.cors=!!Ha&&"withCredentials"in Ha,y.ajax=Ha=!!Ha,C.ajaxTransport(function(e){var a,t;if(y.cors||Ha&&!e.crossDomain)return{send:function(i,r){var o,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(o in e.xhrFields)s[o]=e.xhrFields[o];for(o in e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||i["X-Requested-With"]||(i["X-Requested-With"]="XMLHttpRequest"),i)s.setRequestHeader(o,i[o]);a=function(e){return function(){a&&(a=t=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?r(0,"error"):r(s.status,s.statusText):r(ja[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=a(),t=s.onerror=s.ontimeout=a("error"),void 0!==s.onabort?s.onabort=t:s.onreadystatechange=function(){4===s.readyState&&n.setTimeout(function(){a&&t()})},a=a("abort");try{s.send(e.hasContent&&e.data||null)}catch(e){if(a)throw e}},abort:function(){a&&a()}}}),C.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),C.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return C.globalEval(e),e}}}),C.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),C.ajaxTransport("script",function(e){var a,n;if(e.crossDomain)return{send:function(t,i){a=C("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){a.remove(),n=null,e&&i("error"===e.type?404:200,e.type)}),o.head.appendChild(a[0])},abort:function(){n&&n()}}});var Fa=[],Ua=/(=)\?(?=&|$)|\?\?/;C.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Fa.pop()||C.expando+"_"+ka++;return this[e]=!0,e}}),C.ajaxPrefilter("json jsonp",function(e,a,t){var i,r,o,s=!1!==e.jsonp&&(Ua.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ua.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return i=e.jsonpCallback=b(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Ua,"$1"+i):!1!==e.jsonp&&(e.url+=(Sa.test(e.url)?"&":"?")+e.jsonp+"="+i),e.converters["script json"]=function(){return o||C.error(i+" was not called"),o[0]},e.dataTypes[0]="json",r=n[i],n[i]=function(){o=arguments},t.always(function(){void 0===r?C(n).removeProp(i):n[i]=r,e[i]&&(e.jsonpCallback=a.jsonpCallback,Fa.push(i)),o&&b(r)&&r(o[0]),o=r=void 0}),"script"}),y.createHTMLDocument=function(){var e=o.implementation.createHTMLDocument("").body;return e.innerHTML="<form></form><form></form>",2===e.childNodes.length}(),C.parseHTML=function(e,a,n){return"string"!=typeof e?[]:("boolean"==typeof a&&(n=a,a=!1),a||(y.createHTMLDocument?((t=(a=o.implementation.createHTMLDocument("")).createElement("base")).href=o.location.href,a.head.appendChild(t)):a=o),i=N.exec(e),r=!n&&[],i?[a.createElement(i[1])]:(i=ve([e],a,r),r&&r.length&&C(r).remove(),C.merge([],i.childNodes)));var t,i,r},C.fn.load=function(e,a,n){var t,i,r,o=this,s=e.indexOf(" ");return s>-1&&(t=ga(e.slice(s)),e=e.slice(0,s)),b(a)?(n=a,a=void 0):a&&"object"==typeof a&&(i="POST"),o.length>0&&C.ajax({url:e,type:i||"GET",dataType:"html",data:a}).done(function(e){r=arguments,o.html(t?C("<div>").append(C.parseHTML(e)).find(t):e)}).always(n&&function(e,a){o.each(function(){n.apply(this,r||[e.responseText,a,e])})}),this},C.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,a){C.fn[a]=function(e){return this.on(a,e)}}),C.expr.pseudos.animated=function(e){return C.grep(C.timers,function(a){return e===a.elem}).length},C.offset={setOffset:function(e,a,n){var t,i,r,o,s,l,u=C.css(e,"position"),c=C(e),d={};"static"===u&&(e.style.position="relative"),s=c.offset(),r=C.css(e,"top"),l=C.css(e,"left"),("absolute"===u||"fixed"===u)&&(r+l).indexOf("auto")>-1?(o=(t=c.position()).top,i=t.left):(o=parseFloat(r)||0,i=parseFloat(l)||0),b(a)&&(a=a.call(e,n,C.extend({},s))),null!=a.top&&(d.top=a.top-s.top+o),null!=a.left&&(d.left=a.left-s.left+i),"using"in a?a.using.call(e,d):c.css(d)}},C.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(a){C.offset.setOffset(this,e,a)});var a,n,t=this[0];return t?t.getClientRects().length?(a=t.getBoundingClientRect(),n=t.ownerDocument.defaultView,{top:a.top+n.pageYOffset,left:a.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,a,n,t=this[0],i={top:0,left:0};if("fixed"===C.css(t,"position"))a=t.getBoundingClientRect();else{for(a=this.offset(),n=t.ownerDocument,e=t.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===C.css(e,"position");)e=e.parentNode;e&&e!==t&&1===e.nodeType&&((i=C(e).offset()).top+=C.css(e,"borderTopWidth",!0),i.left+=C.css(e,"borderLeftWidth",!0))}return{top:a.top-i.top-C.css(t,"marginTop",!0),left:a.left-i.left-C.css(t,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===C.css(e,"position");)e=e.offsetParent;return e||_e})}}),C.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,a){var n="pageYOffset"===a;C.fn[e]=function(t){return q(this,function(e,t,i){var r;if(v(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===i)return r?r[a]:e[t];r?r.scrollTo(n?r.pageXOffset:i,n?i:r.pageYOffset):e[t]=i},e,t,arguments.length)}}),C.each(["top","left"],function(e,a){C.cssHooks[a]=Fe(y.pixelPosition,function(e,n){if(n)return n=He(e,a),Ee.test(n)?C(e).position()[a]+"px":n})}),C.each({Height:"height",Width:"width"},function(e,a){C.each({padding:"inner"+e,content:a,"":"outer"+e},function(n,t){C.fn[t]=function(i,r){var o=arguments.length&&(n||"boolean"!=typeof i),s=n||(!0===i||!0===r?"margin":"border");return q(this,function(a,n,i){var r;return v(a)?0===t.indexOf("outer")?a["inner"+e]:a.document.documentElement["client"+e]:9===a.nodeType?(r=a.documentElement,Math.max(a.body["scroll"+e],r["scroll"+e],a.body["offset"+e],r["offset"+e],r["client"+e])):void 0===i?C.css(a,n,s):C.style(a,n,i,s)},a,o?i:void 0,o)}})}),C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,a){C.fn[a]=function(e,n){return arguments.length>0?this.on(a,null,e,n):this.trigger(a)}}),C.fn.extend({hover:function(e,a){return this.mouseenter(e).mouseleave(a||e)}}),C.fn.extend({bind:function(e,a,n){return this.on(e,null,a,n)},unbind:function(e,a){return this.off(e,null,a)},delegate:function(e,a,n,t){return this.on(a,e,n,t)},undelegate:function(e,a,n){return 1===arguments.length?this.off(e,"**"):this.off(a,e||"**",n)}}),C.proxy=function(e,a){var n,t,i;if("string"==typeof a&&(n=e[a],a=e,e=n),b(e))return t=l.call(arguments,2),(i=function(){return e.apply(a||this,t.concat(l.call(arguments)))}).guid=e.guid=e.guid||C.guid++,i},C.holdReady=function(e){e?C.readyWait++:C.ready(!0)},C.isArray=Array.isArray,C.parseJSON=JSON.parse,C.nodeName=P,C.isFunction=b,C.isWindow=v,C.camelCase=Y,C.type=S,C.now=Date.now,C.isNumeric=function(e){var a=C.type(e);return("number"===a||"string"===a)&&!isNaN(e-parseFloat(e))},void 0===(t=function(){return C}.apply(a,[]))||(e.exports=t);var qa=n.jQuery,Wa=n.$;return C.noConflict=function(e){return n.$===C&&(n.$=Wa),e&&n.jQuery===C&&(n.jQuery=qa),C},i||(n.jQuery=n.$=C),C})},function(e,a,n){(function(e,t){var i;/*! https://mths.be/punycode v1.4.0 by @mathias */!function(r){"object"==typeof a&&a&&a.nodeType,"object"==typeof e&&e&&e.nodeType;var o="object"==typeof t&&t;o.global!==o&&o.window!==o&&o.self;var s,l=2147483647,u=36,c=1,d=26,h=38,p=700,g=72,m=128,f="-",y=/^xn--/,b=/[^\x20-\x7E]/,v=/[\x2E\u3002\uFF0E\uFF61]/g,_={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},k=u-c,S=Math.floor,C=String.fromCharCode;function w(e){throw new RangeError(_[e])}function A(e,a){for(var n=e.length,t=[];n--;)t[n]=a(e[n]);return t}function x(e,a){var n=e.split("@"),t="";return n.length>1&&(t=n[0]+"@",e=n[1]),t+A((e=e.replace(v,".")).split("."),a).join(".")}function M(e){for(var a,n,t=[],i=0,r=e.length;i<r;)(a=e.charCodeAt(i++))>=55296&&a<=56319&&i<r?56320==(64512&(n=e.charCodeAt(i++)))?t.push(((1023&a)<<10)+(1023&n)+65536):(t.push(a),i--):t.push(a);return t}function T(e){return A(e,function(e){var a="";return e>65535&&(a+=C((e-=65536)>>>10&1023|55296),e=56320|1023&e),a+=C(e)}).join("")}function O(e){return e-48<10?e-22:e-65<26?e-65:e-97<26?e-97:u}function P(e,a){return e+22+75*(e<26)-((0!=a)<<5)}function N(e,a,n){var t=0;for(e=n?S(e/p):e>>1,e+=S(e/a);e>k*d>>1;t+=u)e=S(e/k);return S(t+(k+1)*e/(e+h))}function z(e){var a,n,t,i,r,o,s,h,p,y,b=[],v=e.length,_=0,k=m,C=g;for((n=e.lastIndexOf(f))<0&&(n=0),t=0;t<n;++t)e.charCodeAt(t)>=128&&w("not-basic"),b.push(e.charCodeAt(t));for(i=n>0?n+1:0;i<v;){for(r=_,o=1,s=u;i>=v&&w("invalid-input"),((h=O(e.charCodeAt(i++)))>=u||h>S((l-_)/o))&&w("overflow"),_+=h*o,!(h<(p=s<=C?c:s>=C+d?d:s-C));s+=u)o>S(l/(y=u-p))&&w("overflow"),o*=y;C=N(_-r,a=b.length+1,0==r),S(_/a)>l-k&&w("overflow"),k+=S(_/a),_%=a,b.splice(_++,0,k)}return T(b)}function K(e){var a,n,t,i,r,o,s,h,p,y,b,v,_,k,A,x=[];for(v=(e=M(e)).length,a=m,n=0,r=g,o=0;o<v;++o)(b=e[o])<128&&x.push(C(b));for(t=i=x.length,i&&x.push(f);t<v;){for(s=l,o=0;o<v;++o)(b=e[o])>=a&&b<s&&(s=b);for(s-a>S((l-n)/(_=t+1))&&w("overflow"),n+=(s-a)*_,a=s,o=0;o<v;++o)if((b=e[o])<a&&++n>l&&w("overflow"),b==a){for(h=n,p=u;!(h<(y=p<=r?c:p>=r+d?d:p-r));p+=u)A=h-y,k=u-y,x.push(C(P(y+A%k,0))),h=S(A/k);x.push(C(P(h,0))),r=N(n,_,t==i),n=0,++t}++n,++a}return x.join("")}s={version:"1.3.2",ucs2:{decode:M,encode:T},decode:z,encode:K,toASCII:function(e){return x(e,function(e){return b.test(e)?"xn--"+K(e):e})},toUnicode:function(e){return x(e,function(e){return y.test(e)?z(e.slice(4).toLowerCase()):e})}},void 0===(i=function(){return s}.call(a,n,a,e))||(e.exports=i)}()}).call(this,n(8)(e),n(9))},function(e,a,n){var t,i;
/*!
 * URI.js - Mutating URLs
 * IPv6 Support
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
/*!
 * URI.js - Mutating URLs
 * IPv6 Support
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
!function(r,o){"use strict";"object"==typeof e&&e.exports?e.exports=o():void 0===(i="function"==typeof(t=o)?t.call(a,n,a,e):t)||(e.exports=i)}(0,function(e){"use strict";var a=e&&e.IPv6;return{best:function(e){var a,n,t=e.toLowerCase().split(":"),i=t.length,r=8;for(""===t[0]&&""===t[1]&&""===t[2]?(t.shift(),t.shift()):""===t[0]&&""===t[1]?t.shift():""===t[i-1]&&""===t[i-2]&&t.pop(),-1!==t[(i=t.length)-1].indexOf(".")&&(r=7),a=0;a<i&&""!==t[a];a++);if(a<r)for(t.splice(a,1,"0000");t.length<r;)t.splice(a,0,"0000");for(var o=0;o<r;o++){n=t[o].split("");for(var s=0;s<3&&"0"===n[0]&&n.length>1;s++)n.splice(0,1);t[o]=n.join("")}var l=-1,u=0,c=0,d=-1,h=!1;for(o=0;o<r;o++)h?"0"===t[o]?c+=1:(h=!1,c>u&&(l=d,u=c)):"0"===t[o]&&(h=!0,d=o,c=1);c>u&&(l=d,u=c),u>1&&t.splice(l,u,""),i=t.length;var p="";for(""===t[0]&&(p=":"),o=0;o<i&&(p+=t[o],o!==i-1);o++)p+=":";return""===t[i-1]&&(p+=":"),p},noConflict:function(){return e.IPv6===this&&(e.IPv6=a),this}}})},function(e,a,n){var t,i;
/*!
 * URI.js - Mutating URLs
 * Second Level Domain (SLD) Support
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
/*!
 * URI.js - Mutating URLs
 * Second Level Domain (SLD) Support
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
!function(r,o){"use strict";"object"==typeof e&&e.exports?e.exports=o():void 0===(i="function"==typeof(t=o)?t.call(a,n,a,e):t)||(e.exports=i)}(0,function(e){"use strict";var a=e&&e.SecondLevelDomains,n={list:{ac:" com gov mil net org ",ae:" ac co gov mil name net org pro sch ",af:" com edu gov net org ",al:" com edu gov mil net org ",ao:" co ed gv it og pb ",ar:" com edu gob gov int mil net org tur ",at:" ac co gv or ",au:" asn com csiro edu gov id net org ",ba:" co com edu gov mil net org rs unbi unmo unsa untz unze ",bb:" biz co com edu gov info net org store tv ",bh:" biz cc com edu gov info net org ",bn:" com edu gov net org ",bo:" com edu gob gov int mil net org tv ",br:" adm adv agr am arq art ato b bio blog bmd cim cng cnt com coop ecn edu eng esp etc eti far flog fm fnd fot fst g12 ggf gov imb ind inf jor jus lel mat med mil mus net nom not ntr odo org ppg pro psc psi qsl rec slg srv tmp trd tur tv vet vlog wiki zlg ",bs:" com edu gov net org ",bz:" du et om ov rg ",ca:" ab bc mb nb nf nl ns nt nu on pe qc sk yk ",ck:" biz co edu gen gov info net org ",cn:" ac ah bj com cq edu fj gd gov gs gx gz ha hb he hi hl hn jl js jx ln mil net nm nx org qh sc sd sh sn sx tj tw xj xz yn zj ",co:" com edu gov mil net nom org ",cr:" ac c co ed fi go or sa ",cy:" ac biz com ekloges gov ltd name net org parliament press pro tm ",do:" art com edu gob gov mil net org sld web ",dz:" art asso com edu gov net org pol ",ec:" com edu fin gov info med mil net org pro ",eg:" com edu eun gov mil name net org sci ",er:" com edu gov ind mil net org rochest w ",es:" com edu gob nom org ",et:" biz com edu gov info name net org ",fj:" ac biz com info mil name net org pro ",fk:" ac co gov net nom org ",fr:" asso com f gouv nom prd presse tm ",gg:" co net org ",gh:" com edu gov mil org ",gn:" ac com gov net org ",gr:" com edu gov mil net org ",gt:" com edu gob ind mil net org ",gu:" com edu gov net org ",hk:" com edu gov idv net org ",hu:" 2000 agrar bolt casino city co erotica erotika film forum games hotel info ingatlan jogasz konyvelo lakas media news org priv reklam sex shop sport suli szex tm tozsde utazas video ",id:" ac co go mil net or sch web ",il:" ac co gov idf k12 muni net org ",in:" ac co edu ernet firm gen gov i ind mil net nic org res ",iq:" com edu gov i mil net org ",ir:" ac co dnssec gov i id net org sch ",it:" edu gov ",je:" co net org ",jo:" com edu gov mil name net org sch ",jp:" ac ad co ed go gr lg ne or ",ke:" ac co go info me mobi ne or sc ",kh:" com edu gov mil net org per ",ki:" biz com de edu gov info mob net org tel ",km:" asso com coop edu gouv k medecin mil nom notaires pharmaciens presse tm veterinaire ",kn:" edu gov net org ",kr:" ac busan chungbuk chungnam co daegu daejeon es gangwon go gwangju gyeongbuk gyeonggi gyeongnam hs incheon jeju jeonbuk jeonnam k kg mil ms ne or pe re sc seoul ulsan ",kw:" com edu gov net org ",ky:" com edu gov net org ",kz:" com edu gov mil net org ",lb:" com edu gov net org ",lk:" assn com edu gov grp hotel int ltd net ngo org sch soc web ",lr:" com edu gov net org ",lv:" asn com conf edu gov id mil net org ",ly:" com edu gov id med net org plc sch ",ma:" ac co gov m net org press ",mc:" asso tm ",me:" ac co edu gov its net org priv ",mg:" com edu gov mil nom org prd tm ",mk:" com edu gov inf name net org pro ",ml:" com edu gov net org presse ",mn:" edu gov org ",mo:" com edu gov net org ",mt:" com edu gov net org ",mv:" aero biz com coop edu gov info int mil museum name net org pro ",mw:" ac co com coop edu gov int museum net org ",mx:" com edu gob net org ",my:" com edu gov mil name net org sch ",nf:" arts com firm info net other per rec store web ",ng:" biz com edu gov mil mobi name net org sch ",ni:" ac co com edu gob mil net nom org ",np:" com edu gov mil net org ",nr:" biz com edu gov info net org ",om:" ac biz co com edu gov med mil museum net org pro sch ",pe:" com edu gob mil net nom org sld ",ph:" com edu gov i mil net ngo org ",pk:" biz com edu fam gob gok gon gop gos gov net org web ",pl:" art bialystok biz com edu gda gdansk gorzow gov info katowice krakow lodz lublin mil net ngo olsztyn org poznan pwr radom slupsk szczecin torun warszawa waw wroc wroclaw zgora ",pr:" ac biz com edu est gov info isla name net org pro prof ",ps:" com edu gov net org plo sec ",pw:" belau co ed go ne or ",ro:" arts com firm info nom nt org rec store tm www ",rs:" ac co edu gov in org ",sb:" com edu gov net org ",sc:" com edu gov net org ",sh:" co com edu gov net nom org ",sl:" com edu gov net org ",st:" co com consulado edu embaixada gov mil net org principe saotome store ",sv:" com edu gob org red ",sz:" ac co org ",tr:" av bbs bel biz com dr edu gen gov info k12 name net org pol tel tsk tv web ",tt:" aero biz cat co com coop edu gov info int jobs mil mobi museum name net org pro tel travel ",tw:" club com ebiz edu game gov idv mil net org ",mu:" ac co com gov net or org ",mz:" ac co edu gov org ",na:" co com ",nz:" ac co cri geek gen govt health iwi maori mil net org parliament school ",pa:" abo ac com edu gob ing med net nom org sld ",pt:" com edu gov int net nome org publ ",py:" com edu gov mil net org ",qa:" com edu gov mil net org ",re:" asso com nom ",ru:" ac adygeya altai amur arkhangelsk astrakhan bashkiria belgorod bir bryansk buryatia cbg chel chelyabinsk chita chukotka chuvashia com dagestan e-burg edu gov grozny int irkutsk ivanovo izhevsk jar joshkar-ola kalmykia kaluga kamchatka karelia kazan kchr kemerovo khabarovsk khakassia khv kirov koenig komi kostroma kranoyarsk kuban kurgan kursk lipetsk magadan mari mari-el marine mil mordovia mosreg msk murmansk nalchik net nnov nov novosibirsk nsk omsk orenburg org oryol penza perm pp pskov ptz rnd ryazan sakhalin samara saratov simbirsk smolensk spb stavropol stv surgut tambov tatarstan tom tomsk tsaritsyn tsk tula tuva tver tyumen udm udmurtia ulan-ude vladikavkaz vladimir vladivostok volgograd vologda voronezh vrn vyatka yakutia yamal yekaterinburg yuzhno-sakhalinsk ",rw:" ac co com edu gouv gov int mil net ",sa:" com edu gov med net org pub sch ",sd:" com edu gov info med net org tv ",se:" a ac b bd c d e f g h i k l m n o org p parti pp press r s t tm u w x y z ",sg:" com edu gov idn net org per ",sn:" art com edu gouv org perso univ ",sy:" com edu gov mil net news org ",th:" ac co go in mi net or ",tj:" ac biz co com edu go gov info int mil name net nic org test web ",tn:" agrinet com defense edunet ens fin gov ind info intl mincom nat net org perso rnrt rns rnu tourism ",tz:" ac co go ne or ",ua:" biz cherkassy chernigov chernovtsy ck cn co com crimea cv dn dnepropetrovsk donetsk dp edu gov if in ivano-frankivsk kh kharkov kherson khmelnitskiy kiev kirovograd km kr ks kv lg lugansk lutsk lviv me mk net nikolaev od odessa org pl poltava pp rovno rv sebastopol sumy te ternopil uzhgorod vinnica vn zaporizhzhe zhitomir zp zt ",ug:" ac co go ne or org sc ",uk:" ac bl british-library co cym gov govt icnet jet lea ltd me mil mod national-library-scotland nel net nhs nic nls org orgn parliament plc police sch scot soc ",us:" dni fed isa kids nsn ",uy:" com edu gub mil net org ",ve:" co com edu gob info mil net org web ",vi:" co com k12 net org ",vn:" ac biz com edu gov health info int name net org pro ",ye:" co com gov ltd me net org plc ",yu:" ac co edu gov org ",za:" ac agric alt bourse city co cybernet db edu gov grondar iaccess imt inca landesign law mil net ngo nis nom olivetti org pix school tm web ",zm:" ac co com edu gov net org sch ",com:"ar br cn de eu gb gr hu jpn kr no qc ru sa se uk us uy za ",net:"gb jp se uk ",org:"ae",de:"com "},has:function(e){var a=e.lastIndexOf(".");if(a<=0||a>=e.length-1)return!1;var t=e.lastIndexOf(".",a-1);if(t<=0||t>=a-1)return!1;var i=n.list[e.slice(a+1)];return!!i&&i.indexOf(" "+e.slice(t+1,a)+" ")>=0},is:function(e){var a=e.lastIndexOf(".");if(a<=0||a>=e.length-1)return!1;if(e.lastIndexOf(".",a-1)>=0)return!1;var t=n.list[e.slice(a+1)];return!!t&&t.indexOf(" "+e.slice(0,a)+" ")>=0},get:function(e){var a=e.lastIndexOf(".");if(a<=0||a>=e.length-1)return null;var t=e.lastIndexOf(".",a-1);if(t<=0||t>=a-1)return null;var i=n.list[e.slice(a+1)];return i?i.indexOf(" "+e.slice(t+1,a)+" ")<0?null:e.slice(t+1):null},noConflict:function(){return e.SecondLevelDomains===this&&(e.SecondLevelDomains=a),this}};return n})},function(e,a){function n(e){return Math.floor(e*(Math.random()%1))}Array.prototype.swap=function(e,a){var n=this[e];this[e]=this[a],this[a]=n},Object.assign(a,{shuffle:function(e){for(let a=e.length-1;a>0;a--)e.swap(a,n(a+1));return e},choice:function(e){return e[n(e.length)]},sample:function(e,a){for(let a=0;a<e.length;a++)e.swap(a,n(e.length));return e.slice(0,a)}})},function(e,a,n){const t=n(0);var{first_question:i,game_page_bottom_message:r}=n(6);t(document).ready(function(){i()}),document.write(r())},function(e,a,n){const t=n(0),i=n(7),{borders:r,build_question:o,neighbors:s,unused_quiz_modes:l}=n(10),u=n(4),c=n(13),d="AIzaSyBg5esZrKJYIXrvFfgu1TIApJupbEPmcTk",h="/borders-quiz/css/borders-quiz.css",p=n(14),g=n(15),m=document.getElementById("game-container"),f=Date.now();var y={correct:0,wrong:0};Array.prototype.contains=function(e){return this.indexOf(e)>=0};const b=Object.freeze(new i(window.location.href).search(!0));function v(){return p}function _(e){for(var a in r())if(void 0!=r()[a][e])return a;return"countries"}function k(e){return void 0!=g.recenter_map[e]?e=g.recenter_map[e]:e+=v()[_(e)].geocode_append,function(e){var a={};return t.ajax({url:"https://maps.googleapis.com/maps/api/geocode/json",data:{key:d,address:e},async:!1,success:function(e){a=e}}),a}(e).results[0].geometry.location}function S(e){var a=new i(v()[_(e)].map_embed_base_url),n=k(e);return a.addSearch({lat:n.lat,lng:n.lng,z:function(e){return void 0!=g.custom_zoom_levels[e]?g.custom_zoom_levels[e]:v()[_(e)].default_zoom_level}(e)}).toString()}function C(e){return A()&&void 0!=g.truncations_for_mobile[e]?g.truncations_for_mobile[e]:e}function w(e,a){return function(e,a){var n=a?"The ":"the ";return g.should_prepend_the.contains(e)?n:""}(e,a)+(e=(e=C(e)).replace(/_/g,"").replace(/\s/g,"&nbsp;").replace(/-/g,"&#8209;"))}function A(){return t(document).width()<=760}function x(e){m.srcdoc="<html><head><link rel='stylesheet' href='"+h+"'/></head><body>"+e+"</body></html>"}function M(e){var a=e.chosen==e.answer?e.chosen:e.territory,n="<iframe id='"+(A()?"map-mobile":"map")+"' scrolling='no' frameborder=0 src='"+S(a)+"'></iframe>",t="<div id='"+(A()?"map-container-mobile":"map-container")+"'>";t+="<center>",t+="<p>"+function(e){return e.chosen==e.answer?"Correct! "+w(e.chosen,!0)+" does not border "+w(e.territory,!1)+"!":"Sorry! "+w(e.territory,!0)+" does border "+w(e.chosen,!1)+"!"}(e)+"</p>",t+=n,t+="<p>"+function(e){var a=s(e);g.dont_sort_neighbors.contains(e)||a.sort(),a=a.map(e=>w(e,!1));var n=w(e,!0)+" borders ";if(0==a.length)n+="nothing!";else if(1==a.length)n+="only "+a[0]+".";else if(2==a.length)n+=a[0]+" and "+a[1]+".";else{var t=a.pop();a.forEach(e=>n+=e+", "),n+="and "+t+"."}return n}(a)+"</p>",t+="<button id='next'></button>",A()||(t+="<p id='click-message'>"+v()[_(a)].click_message+"</p>"),t+="</center>",x(t+="</div>"),function a(){var n=m.contentWindow.document.getElementById("next");void 0==n?window.requestAnimationFrame(a):e.chosen==e.answer?(y.correct+=1,n.innerHTML="Next",n.onclick=function(){T()}):(y.wrong+=1,n.innerHTML="Try Again",n.onclick=function(){T(e)})}()}function T(e=o(b)){!function(e){var a=u.shuffle(e.wrong_answers.concat(e.answer)),n="<div id='"+(A()?"question-container-mobile":"question-container")+"'>";n+="<div id='quiz_title'>"+C(v()[_(e.territory)].title)+"</div>",n+="<div id='"+(A()?"question-text-mobile":"question-text")+"'>",n+="<p>Which of these does not border "+w(e.territory,!1)+"?</p>",n+="<form>";for(let e=0;e<a.length;e++){var t=a[e];n+="<input type='radio' id=\""+t+'" value="'+t+"\" name='choice'>",n+='<label for="'+t+'">&emsp;'+String.fromCharCode(e+65)+". "+w(t,!0)+"</label><br>"}n+="</form>",n+="</div>",n+="<p id='score_and_timer'>",n+="<i id='score'>",n+="Correct: "+y.correct+"&nbsp;&nbsp;Wrong: "+y.wrong,n+="</i><br>",n+="<span id='timer'>"+c.time_elapsed(f)+"</span>",n+="</p>",x(n+="</div>"),function e(){var a=m.contentWindow.document.getElementById("timer");void 0==a?window.requestAnimationFrame(e):c.start_timer(f,a)}(),function a(){var n=m.contentWindow.document.getElementsByName("choice");if(void 0==n[0])window.requestAnimationFrame(a);else for(let a=0;a<n.length;a++)n[a].onclick=function(){e.chosen=this.id,M(e)}}()}(e)}Object.assign(a,{first_question:function(){T(),function(){const e=b["custom-map"];void 0!=e&&(y.correct-=1,M({territory:e,answer:e,wrong_answers:[],chosen:e}))}()},game_page_bottom_message:function(){var e="<p>You can also try these quiz modes!</p>";return e+="<ul>",l(b).forEach(function(a){e+="<li>",e+="<a target='_self' href='?"+a+"'>",e+=v()[a].anthem,e+="</a>&nbsp;",e+=v()[a].description,e+="</li>"}),e+="</ul>"}})},function(e,a,n){var t,i,r;
/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
/*!
 * URI.js - Mutating URLs
 *
 * Version: 1.19.1
 *
 * Author: Rodney Rehm
 * Web: http://medialize.github.io/URI.js/
 *
 * Licensed under
 *   MIT License http://www.opensource.org/licenses/mit-license
 *
 */
!function(o,s){"use strict";"object"==typeof e&&e.exports?e.exports=s(n(1),n(2),n(3)):(i=[n(1),n(2),n(3)],void 0===(r="function"==typeof(t=s)?t.apply(a,i):t)||(e.exports=r))}(0,function(e,a,n,t){"use strict";var i=t&&t.URI;function r(e,a){var n=arguments.length>=1,t=arguments.length>=2;if(!(this instanceof r))return n?t?new r(e,a):new r(e):new r;if(void 0===e){if(n)throw new TypeError("undefined is not a valid argument for URI");e="undefined"!=typeof location?location.href+"":""}if(null===e&&n)throw new TypeError("null is not a valid argument for URI");return this.href(e),void 0!==a?this.absoluteTo(a):this}r.version="1.19.1";var o=r.prototype,s=Object.prototype.hasOwnProperty;function l(e){return e.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}function u(e){return void 0===e?"Undefined":String(Object.prototype.toString.call(e)).slice(8,-1)}function c(e){return"Array"===u(e)}function d(e,a){var n,t,i={};if("RegExp"===u(a))i=null;else if(c(a))for(n=0,t=a.length;n<t;n++)i[a[n]]=!0;else i[a]=!0;for(n=0,t=e.length;n<t;n++){(i&&void 0!==i[e[n]]||!i&&a.test(e[n]))&&(e.splice(n,1),t--,n--)}return e}function h(e,a){var n,t;if(c(a)){for(n=0,t=a.length;n<t;n++)if(!h(e,a[n]))return!1;return!0}var i=u(a);for(n=0,t=e.length;n<t;n++)if("RegExp"===i){if("string"==typeof e[n]&&e[n].match(a))return!0}else if(e[n]===a)return!0;return!1}function p(e,a){if(!c(e)||!c(a))return!1;if(e.length!==a.length)return!1;e.sort(),a.sort();for(var n=0,t=e.length;n<t;n++)if(e[n]!==a[n])return!1;return!0}function g(e){return e.replace(/^\/+|\/+$/g,"")}function m(e){return escape(e)}function f(e){return encodeURIComponent(e).replace(/[!'()*]/g,m).replace(/\*/g,"%2A")}r._parts=function(){return{protocol:null,username:null,password:null,hostname:null,urn:null,port:null,path:null,query:null,fragment:null,preventInvalidHostname:r.preventInvalidHostname,duplicateQueryParameters:r.duplicateQueryParameters,escapeQuerySpace:r.escapeQuerySpace}},r.preventInvalidHostname=!1,r.duplicateQueryParameters=!1,r.escapeQuerySpace=!0,r.protocol_expression=/^[a-z][a-z0-9.+-]*$/i,r.idn_expression=/[^a-z0-9\._-]/i,r.punycode_expression=/(xn--)/i,r.ip4_expression=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,r.ip6_expression=/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/,r.find_uri_expression=/\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?Â«Â»ââââ]))/gi,r.findUri={start:/\b(?:([a-z][a-z0-9.+-]*:\/\/)|www\.)/gi,end:/[\s\r\n]|$/,trim:/[`!()\[\]{};:'".,<>?Â«Â»âââââ]+$/,parens:/(\([^\)]*\)|\[[^\]]*\]|\{[^}]*\}|<[^>]*>)/g},r.defaultPorts={http:"80",https:"443",ftp:"21",gopher:"70",ws:"80",wss:"443"},r.hostProtocols=["http","https"],r.invalid_hostname_characters=/[^a-zA-Z0-9\.\-:_]/,r.domAttributes={a:"href",blockquote:"cite",link:"href",base:"href",script:"src",form:"action",img:"src",area:"href",iframe:"src",embed:"src",source:"src",track:"src",input:"src",audio:"src",video:"src"},r.getDomAttribute=function(e){if(e&&e.nodeName){var a=e.nodeName.toLowerCase();if("input"!==a||"image"===e.type)return r.domAttributes[a]}},r.encode=f,r.decode=decodeURIComponent,r.iso8859=function(){r.encode=escape,r.decode=unescape},r.unicode=function(){r.encode=f,r.decode=decodeURIComponent},r.characters={pathname:{encode:{expression:/%(24|26|2B|2C|3B|3D|3A|40)/gi,map:{"%24":"$","%26":"&","%2B":"+","%2C":",","%3B":";","%3D":"=","%3A":":","%40":"@"}},decode:{expression:/[\/\?#]/g,map:{"/":"%2F","?":"%3F","#":"%23"}}},reserved:{encode:{expression:/%(21|23|24|26|27|28|29|2A|2B|2C|2F|3A|3B|3D|3F|40|5B|5D)/gi,map:{"%3A":":","%2F":"/","%3F":"?","%23":"#","%5B":"[","%5D":"]","%40":"@","%21":"!","%24":"$","%26":"&","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",","%3B":";","%3D":"="}}},urnpath:{encode:{expression:/%(21|24|27|28|29|2A|2B|2C|3B|3D|40)/gi,map:{"%21":"!","%24":"$","%27":"'","%28":"(","%29":")","%2A":"*","%2B":"+","%2C":",","%3B":";","%3D":"=","%40":"@"}},decode:{expression:/[\/\?#:]/g,map:{"/":"%2F","?":"%3F","#":"%23",":":"%3A"}}}},r.encodeQuery=function(e,a){var n=r.encode(e+"");return void 0===a&&(a=r.escapeQuerySpace),a?n.replace(/%20/g,"+"):n},r.decodeQuery=function(e,a){e+="",void 0===a&&(a=r.escapeQuerySpace);try{return r.decode(a?e.replace(/\+/g,"%20"):e)}catch(a){return e}};var y,b={encode:"encode",decode:"decode"},v=function(e,a){return function(n){try{return r[a](n+"").replace(r.characters[e][a].expression,function(n){return r.characters[e][a].map[n]})}catch(e){return n}}};for(y in b)r[y+"PathSegment"]=v("pathname",b[y]),r[y+"UrnPathSegment"]=v("urnpath",b[y]);var _=function(e,a,n){return function(t){var i;i=n?function(e){return r[a](r[n](e))}:r[a];for(var o=(t+"").split(e),s=0,l=o.length;s<l;s++)o[s]=i(o[s]);return o.join(e)}};function k(e){return function(a,n){return void 0===a?this._parts[e]||"":(this._parts[e]=a||null,this.build(!n),this)}}function S(e,a){return function(n,t){return void 0===n?this._parts[e]||"":(null!==n&&(n+="").charAt(0)===a&&(n=n.substring(1)),this._parts[e]=n,this.build(!t),this)}}r.decodePath=_("/","decodePathSegment"),r.decodeUrnPath=_(":","decodeUrnPathSegment"),r.recodePath=_("/","encodePathSegment","decode"),r.recodeUrnPath=_(":","encodeUrnPathSegment","decode"),r.encodeReserved=v("reserved","encode"),r.parse=function(e,a){var n;return a||(a={preventInvalidHostname:r.preventInvalidHostname}),(n=e.indexOf("#"))>-1&&(a.fragment=e.substring(n+1)||null,e=e.substring(0,n)),(n=e.indexOf("?"))>-1&&(a.query=e.substring(n+1)||null,e=e.substring(0,n)),"//"===e.substring(0,2)?(a.protocol=null,e=e.substring(2),e=r.parseAuthority(e,a)):(n=e.indexOf(":"))>-1&&(a.protocol=e.substring(0,n)||null,a.protocol&&!a.protocol.match(r.protocol_expression)?a.protocol=void 0:"//"===e.substring(n+1,n+3)?(e=e.substring(n+3),e=r.parseAuthority(e,a)):(e=e.substring(n+1),a.urn=!0)),a.path=e,a},r.parseHost=function(e,a){e||(e="");var n,t,i=(e=e.replace(/\\/g,"/")).indexOf("/");if(-1===i&&(i=e.length),"["===e.charAt(0))n=e.indexOf("]"),a.hostname=e.substring(1,n)||null,a.port=e.substring(n+2,i)||null,"/"===a.port&&(a.port=null);else{var o=e.indexOf(":"),s=e.indexOf("/"),l=e.indexOf(":",o+1);-1!==l&&(-1===s||l<s)?(a.hostname=e.substring(0,i)||null,a.port=null):(t=e.substring(0,i).split(":"),a.hostname=t[0]||null,a.port=t[1]||null)}return a.hostname&&"/"!==e.substring(i).charAt(0)&&(i++,e="/"+e),a.preventInvalidHostname&&r.ensureValidHostname(a.hostname,a.protocol),a.port&&r.ensureValidPort(a.port),e.substring(i)||"/"},r.parseAuthority=function(e,a){return e=r.parseUserinfo(e,a),r.parseHost(e,a)},r.parseUserinfo=function(e,a){var n,t=e.indexOf("/"),i=e.lastIndexOf("@",t>-1?t:e.length-1);return i>-1&&(-1===t||i<t)?(n=e.substring(0,i).split(":"),a.username=n[0]?r.decode(n[0]):null,n.shift(),a.password=n[0]?r.decode(n.join(":")):null,e=e.substring(i+1)):(a.username=null,a.password=null),e},r.parseQuery=function(e,a){if(!e)return{};if(!(e=e.replace(/&+/g,"&").replace(/^\?*&*|&+$/g,"")))return{};for(var n,t,i,o={},l=e.split("&"),u=l.length,c=0;c<u;c++)n=l[c].split("="),t=r.decodeQuery(n.shift(),a),i=n.length?r.decodeQuery(n.join("="),a):null,s.call(o,t)?("string"!=typeof o[t]&&null!==o[t]||(o[t]=[o[t]]),o[t].push(i)):o[t]=i;return o},r.build=function(e){var a="";return e.protocol&&(a+=e.protocol+":"),e.urn||!a&&!e.hostname||(a+="//"),a+=r.buildAuthority(e)||"","string"==typeof e.path&&("/"!==e.path.charAt(0)&&"string"==typeof e.hostname&&(a+="/"),a+=e.path),"string"==typeof e.query&&e.query&&(a+="?"+e.query),"string"==typeof e.fragment&&e.fragment&&(a+="#"+e.fragment),a},r.buildHost=function(e){var a="";return e.hostname?(r.ip6_expression.test(e.hostname)?a+="["+e.hostname+"]":a+=e.hostname,e.port&&(a+=":"+e.port),a):""},r.buildAuthority=function(e){return r.buildUserinfo(e)+r.buildHost(e)},r.buildUserinfo=function(e){var a="";return e.username&&(a+=r.encode(e.username)),e.password&&(a+=":"+r.encode(e.password)),a&&(a+="@"),a},r.buildQuery=function(e,a,n){var t,i,o,l,u="";for(i in e)if(s.call(e,i)&&i)if(c(e[i]))for(t={},o=0,l=e[i].length;o<l;o++)void 0!==e[i][o]&&void 0===t[e[i][o]+""]&&(u+="&"+r.buildQueryParameter(i,e[i][o],n),!0!==a&&(t[e[i][o]+""]=!0));else void 0!==e[i]&&(u+="&"+r.buildQueryParameter(i,e[i],n));return u.substring(1)},r.buildQueryParameter=function(e,a,n){return r.encodeQuery(e,n)+(null!==a?"="+r.encodeQuery(a,n):"")},r.addQuery=function(e,a,n){if("object"==typeof a)for(var t in a)s.call(a,t)&&r.addQuery(e,t,a[t]);else{if("string"!=typeof a)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");if(void 0===e[a])return void(e[a]=n);"string"==typeof e[a]&&(e[a]=[e[a]]),c(n)||(n=[n]),e[a]=(e[a]||[]).concat(n)}},r.setQuery=function(e,a,n){if("object"==typeof a)for(var t in a)s.call(a,t)&&r.setQuery(e,t,a[t]);else{if("string"!=typeof a)throw new TypeError("URI.setQuery() accepts an object, string as the name parameter");e[a]=void 0===n?null:n}},r.removeQuery=function(e,a,n){var t,i,o;if(c(a))for(t=0,i=a.length;t<i;t++)e[a[t]]=void 0;else if("RegExp"===u(a))for(o in e)a.test(o)&&(e[o]=void 0);else if("object"==typeof a)for(o in a)s.call(a,o)&&r.removeQuery(e,o,a[o]);else{if("string"!=typeof a)throw new TypeError("URI.removeQuery() accepts an object, string, RegExp as the first parameter");void 0!==n?"RegExp"===u(n)?!c(e[a])&&n.test(e[a])?e[a]=void 0:e[a]=d(e[a],n):e[a]!==String(n)||c(n)&&1!==n.length?c(e[a])&&(e[a]=d(e[a],n)):e[a]=void 0:e[a]=void 0}},r.hasQuery=function(e,a,n,t){switch(u(a)){case"String":break;case"RegExp":for(var i in e)if(s.call(e,i)&&a.test(i)&&(void 0===n||r.hasQuery(e,i,n)))return!0;return!1;case"Object":for(var o in a)if(s.call(a,o)&&!r.hasQuery(e,o,a[o]))return!1;return!0;default:throw new TypeError("URI.hasQuery() accepts a string, regular expression or object as the name parameter")}switch(u(n)){case"Undefined":return a in e;case"Boolean":return n===Boolean(c(e[a])?e[a].length:e[a]);case"Function":return!!n(e[a],a,e);case"Array":return!!c(e[a])&&(t?h:p)(e[a],n);case"RegExp":return c(e[a])?!!t&&h(e[a],n):Boolean(e[a]&&e[a].match(n));case"Number":n=String(n);case"String":return c(e[a])?!!t&&h(e[a],n):e[a]===n;default:throw new TypeError("URI.hasQuery() accepts undefined, boolean, string, number, RegExp, Function as the value parameter")}},r.joinPaths=function(){for(var e=[],a=[],n=0,t=0;t<arguments.length;t++){var i=new r(arguments[t]);e.push(i);for(var o=i.segment(),s=0;s<o.length;s++)"string"==typeof o[s]&&a.push(o[s]),o[s]&&n++}if(!a.length||!n)return new r("");var l=new r("").segment(a);return""!==e[0].path()&&"/"!==e[0].path().slice(0,1)||l.path("/"+l.path()),l.normalize()},r.commonPath=function(e,a){var n,t=Math.min(e.length,a.length);for(n=0;n<t;n++)if(e.charAt(n)!==a.charAt(n)){n--;break}return n<1?e.charAt(0)===a.charAt(0)&&"/"===e.charAt(0)?"/":"":("/"===e.charAt(n)&&"/"===a.charAt(n)||(n=e.substring(0,n).lastIndexOf("/")),e.substring(0,n+1))},r.withinString=function(e,a,n){n||(n={});var t=n.start||r.findUri.start,i=n.end||r.findUri.end,o=n.trim||r.findUri.trim,s=n.parens||r.findUri.parens,l=/[a-z0-9-]=["']?$/i;for(t.lastIndex=0;;){var u=t.exec(e);if(!u)break;var c=u.index;if(n.ignoreHtml){var d=e.slice(Math.max(c-3,0),c);if(d&&l.test(d))continue}for(var h=c+e.slice(c).search(i),p=e.slice(c,h),g=-1;;){var m=s.exec(p);if(!m)break;var f=m.index+m[0].length;g=Math.max(g,f)}if(!((p=g>-1?p.slice(0,g)+p.slice(g).replace(o,""):p.replace(o,"")).length<=u[0].length||n.ignore&&n.ignore.test(p))){var y=a(p,c,h=c+p.length,e);void 0!==y?(y=String(y),e=e.slice(0,c)+y+e.slice(h),t.lastIndex=c+y.length):t.lastIndex=h}}return t.lastIndex=0,e},r.ensureValidHostname=function(a,n){var t=!!a,i=!1;if(!!n&&(i=h(r.hostProtocols,n)),i&&!t)throw new TypeError("Hostname cannot be empty, if protocol is "+n);if(a&&a.match(r.invalid_hostname_characters)){if(!e)throw new TypeError('Hostname "'+a+'" contains characters other than [A-Z0-9.-:_] and Punycode.js is not available');if(e.toASCII(a).match(r.invalid_hostname_characters))throw new TypeError('Hostname "'+a+'" contains characters other than [A-Z0-9.-:_]')}},r.ensureValidPort=function(e){if(e){var a=Number(e);if(!(function(e){return/^[0-9]+$/.test(e)}(a)&&a>0&&a<65536))throw new TypeError('Port "'+e+'" is not a valid port')}},r.noConflict=function(e){if(e){var a={URI:this.noConflict()};return t.URITemplate&&"function"==typeof t.URITemplate.noConflict&&(a.URITemplate=t.URITemplate.noConflict()),t.IPv6&&"function"==typeof t.IPv6.noConflict&&(a.IPv6=t.IPv6.noConflict()),t.SecondLevelDomains&&"function"==typeof t.SecondLevelDomains.noConflict&&(a.SecondLevelDomains=t.SecondLevelDomains.noConflict()),a}return t.URI===this&&(t.URI=i),this},o.build=function(e){return!0===e?this._deferred_build=!0:(void 0===e||this._deferred_build)&&(this._string=r.build(this._parts),this._deferred_build=!1),this},o.clone=function(){return new r(this)},o.valueOf=o.toString=function(){return this.build(!1)._string},o.protocol=k("protocol"),o.username=k("username"),o.password=k("password"),o.hostname=k("hostname"),o.port=k("port"),o.query=S("query","?"),o.fragment=S("fragment","#"),o.search=function(e,a){var n=this.query(e,a);return"string"==typeof n&&n.length?"?"+n:n},o.hash=function(e,a){var n=this.fragment(e,a);return"string"==typeof n&&n.length?"#"+n:n},o.pathname=function(e,a){if(void 0===e||!0===e){var n=this._parts.path||(this._parts.hostname?"/":"");return e?(this._parts.urn?r.decodeUrnPath:r.decodePath)(n):n}return this._parts.urn?this._parts.path=e?r.recodeUrnPath(e):"":this._parts.path=e?r.recodePath(e):"/",this.build(!a),this},o.path=o.pathname,o.href=function(e,a){var n;if(void 0===e)return this.toString();this._string="",this._parts=r._parts();var t=e instanceof r,i="object"==typeof e&&(e.hostname||e.path||e.pathname);e.nodeName&&(e=e[r.getDomAttribute(e)]||"",i=!1);if(!t&&i&&void 0!==e.pathname&&(e=e.toString()),"string"==typeof e||e instanceof String)this._parts=r.parse(String(e),this._parts);else{if(!t&&!i)throw new TypeError("invalid input");var o=t?e._parts:e;for(n in o)"query"!==n&&s.call(this._parts,n)&&(this._parts[n]=o[n]);o.query&&this.query(o.query,!1)}return this.build(!a),this},o.is=function(e){var a=!1,t=!1,i=!1,o=!1,s=!1,l=!1,u=!1,c=!this._parts.urn;switch(this._parts.hostname&&(c=!1,t=r.ip4_expression.test(this._parts.hostname),i=r.ip6_expression.test(this._parts.hostname),s=(o=!(a=t||i))&&n&&n.has(this._parts.hostname),l=o&&r.idn_expression.test(this._parts.hostname),u=o&&r.punycode_expression.test(this._parts.hostname)),e.toLowerCase()){case"relative":return c;case"absolute":return!c;case"domain":case"name":return o;case"sld":return s;case"ip":return a;case"ip4":case"ipv4":case"inet4":return t;case"ip6":case"ipv6":case"inet6":return i;case"idn":return l;case"url":return!this._parts.urn;case"urn":return!!this._parts.urn;case"punycode":return u}return null};var C=o.protocol,w=o.port,A=o.hostname;o.protocol=function(e,a){if(e&&!(e=e.replace(/:(\/\/)?$/,"")).match(r.protocol_expression))throw new TypeError('Protocol "'+e+"\" contains characters other than [A-Z0-9.+-] or doesn't start with [A-Z]");return C.call(this,e,a)},o.scheme=o.protocol,o.port=function(e,a){return this._parts.urn?void 0===e?"":this:(void 0!==e&&(0===e&&(e=null),e&&(":"===(e+="").charAt(0)&&(e=e.substring(1)),r.ensureValidPort(e))),w.call(this,e,a))},o.hostname=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0!==e){var n={preventInvalidHostname:this._parts.preventInvalidHostname};if("/"!==r.parseHost(e,n))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');e=n.hostname,this._parts.preventInvalidHostname&&r.ensureValidHostname(e,this._parts.protocol)}return A.call(this,e,a)},o.origin=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0===e){var n=this.protocol();return this.authority()?(n?n+"://":"")+this.authority():""}var t=r(e);return this.protocol(t.protocol()).authority(t.authority()).build(!a),this},o.host=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0===e)return this._parts.hostname?r.buildHost(this._parts):"";if("/"!==r.parseHost(e,this._parts))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.build(!a),this},o.authority=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0===e)return this._parts.hostname?r.buildAuthority(this._parts):"";if("/"!==r.parseAuthority(e,this._parts))throw new TypeError('Hostname "'+e+'" contains characters other than [A-Z0-9.-]');return this.build(!a),this},o.userinfo=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0===e){var n=r.buildUserinfo(this._parts);return n?n.substring(0,n.length-1):n}return"@"!==e[e.length-1]&&(e+="@"),r.parseUserinfo(e,this._parts),this.build(!a),this},o.resource=function(e,a){var n;return void 0===e?this.path()+this.search()+this.hash():(n=r.parse(e),this._parts.path=n.path,this._parts.query=n.query,this._parts.fragment=n.fragment,this.build(!a),this)},o.subdomain=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0===e){if(!this._parts.hostname||this.is("IP"))return"";var n=this._parts.hostname.length-this.domain().length-1;return this._parts.hostname.substring(0,n)||""}var t=this._parts.hostname.length-this.domain().length,i=this._parts.hostname.substring(0,t),o=new RegExp("^"+l(i));if(e&&"."!==e.charAt(e.length-1)&&(e+="."),-1!==e.indexOf(":"))throw new TypeError("Domains cannot contain colons");return e&&r.ensureValidHostname(e,this._parts.protocol),this._parts.hostname=this._parts.hostname.replace(o,e),this.build(!a),this},o.domain=function(e,a){if(this._parts.urn)return void 0===e?"":this;if("boolean"==typeof e&&(a=e,e=void 0),void 0===e){if(!this._parts.hostname||this.is("IP"))return"";var n=this._parts.hostname.match(/\./g);if(n&&n.length<2)return this._parts.hostname;var t=this._parts.hostname.length-this.tld(a).length-1;return t=this._parts.hostname.lastIndexOf(".",t-1)+1,this._parts.hostname.substring(t)||""}if(!e)throw new TypeError("cannot set domain empty");if(-1!==e.indexOf(":"))throw new TypeError("Domains cannot contain colons");if(r.ensureValidHostname(e,this._parts.protocol),!this._parts.hostname||this.is("IP"))this._parts.hostname=e;else{var i=new RegExp(l(this.domain())+"$");this._parts.hostname=this._parts.hostname.replace(i,e)}return this.build(!a),this},o.tld=function(e,a){if(this._parts.urn)return void 0===e?"":this;if("boolean"==typeof e&&(a=e,e=void 0),void 0===e){if(!this._parts.hostname||this.is("IP"))return"";var t=this._parts.hostname.lastIndexOf("."),i=this._parts.hostname.substring(t+1);return!0!==a&&n&&n.list[i.toLowerCase()]&&n.get(this._parts.hostname)||i}var r;if(!e)throw new TypeError("cannot set TLD empty");if(e.match(/[^a-zA-Z0-9-]/)){if(!n||!n.is(e))throw new TypeError('TLD "'+e+'" contains characters other than [A-Z0-9]');r=new RegExp(l(this.tld())+"$"),this._parts.hostname=this._parts.hostname.replace(r,e)}else{if(!this._parts.hostname||this.is("IP"))throw new ReferenceError("cannot set TLD on non-domain host");r=new RegExp(l(this.tld())+"$"),this._parts.hostname=this._parts.hostname.replace(r,e)}return this.build(!a),this},o.directory=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this._parts.path&&!this._parts.hostname)return"";if("/"===this._parts.path)return"/";var n=this._parts.path.length-this.filename().length-1,t=this._parts.path.substring(0,n)||(this._parts.hostname?"/":"");return e?r.decodePath(t):t}var i=this._parts.path.length-this.filename().length,o=this._parts.path.substring(0,i),s=new RegExp("^"+l(o));return this.is("relative")||(e||(e="/"),"/"!==e.charAt(0)&&(e="/"+e)),e&&"/"!==e.charAt(e.length-1)&&(e+="/"),e=r.recodePath(e),this._parts.path=this._parts.path.replace(s,e),this.build(!a),this},o.filename=function(e,a){if(this._parts.urn)return void 0===e?"":this;if("string"!=typeof e){if(!this._parts.path||"/"===this._parts.path)return"";var n=this._parts.path.lastIndexOf("/"),t=this._parts.path.substring(n+1);return e?r.decodePathSegment(t):t}var i=!1;"/"===e.charAt(0)&&(e=e.substring(1)),e.match(/\.?\//)&&(i=!0);var o=new RegExp(l(this.filename())+"$");return e=r.recodePath(e),this._parts.path=this._parts.path.replace(o,e),i?this.normalizePath(a):this.build(!a),this},o.suffix=function(e,a){if(this._parts.urn)return void 0===e?"":this;if(void 0===e||!0===e){if(!this._parts.path||"/"===this._parts.path)return"";var n,t,i=this.filename(),o=i.lastIndexOf(".");return-1===o?"":(n=i.substring(o+1),t=/^[a-z0-9%]+$/i.test(n)?n:"",e?r.decodePathSegment(t):t)}"."===e.charAt(0)&&(e=e.substring(1));var s,u=this.suffix();if(u)s=e?new RegExp(l(u)+"$"):new RegExp(l("."+u)+"$");else{if(!e)return this;this._parts.path+="."+r.recodePath(e)}return s&&(e=r.recodePath(e),this._parts.path=this._parts.path.replace(s,e)),this.build(!a),this},o.segment=function(e,a,n){var t=this._parts.urn?":":"/",i=this.path(),r="/"===i.substring(0,1),o=i.split(t);if(void 0!==e&&"number"!=typeof e&&(n=a,a=e,e=void 0),void 0!==e&&"number"!=typeof e)throw new Error('Bad segment "'+e+'", must be 0-based integer');if(r&&o.shift(),e<0&&(e=Math.max(o.length+e,0)),void 0===a)return void 0===e?o:o[e];if(null===e||void 0===o[e])if(c(a)){o=[];for(var s=0,l=a.length;s<l;s++)(a[s].length||o.length&&o[o.length-1].length)&&(o.length&&!o[o.length-1].length&&o.pop(),o.push(g(a[s])))}else(a||"string"==typeof a)&&(a=g(a),""===o[o.length-1]?o[o.length-1]=a:o.push(a));else a?o[e]=g(a):o.splice(e,1);return r&&o.unshift(""),this.path(o.join(t),n)},o.segmentCoded=function(e,a,n){var t,i,o;if("number"!=typeof e&&(n=a,a=e,e=void 0),void 0===a){if(c(t=this.segment(e,a,n)))for(i=0,o=t.length;i<o;i++)t[i]=r.decode(t[i]);else t=void 0!==t?r.decode(t):void 0;return t}if(c(a))for(i=0,o=a.length;i<o;i++)a[i]=r.encode(a[i]);else a="string"==typeof a||a instanceof String?r.encode(a):a;return this.segment(e,a,n)};var x=o.query;return o.query=function(e,a){if(!0===e)return r.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if("function"==typeof e){var n=r.parseQuery(this._parts.query,this._parts.escapeQuerySpace),t=e.call(this,n);return this._parts.query=r.buildQuery(t||n,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),this.build(!a),this}return void 0!==e&&"string"!=typeof e?(this._parts.query=r.buildQuery(e,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),this.build(!a),this):x.call(this,e,a)},o.setQuery=function(e,a,n){var t=r.parseQuery(this._parts.query,this._parts.escapeQuerySpace);if("string"==typeof e||e instanceof String)t[e]=void 0!==a?a:null;else{if("object"!=typeof e)throw new TypeError("URI.addQuery() accepts an object, string as the name parameter");for(var i in e)s.call(e,i)&&(t[i]=e[i])}return this._parts.query=r.buildQuery(t,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),"string"!=typeof e&&(n=a),this.build(!n),this},o.addQuery=function(e,a,n){var t=r.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return r.addQuery(t,e,void 0===a?null:a),this._parts.query=r.buildQuery(t,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),"string"!=typeof e&&(n=a),this.build(!n),this},o.removeQuery=function(e,a,n){var t=r.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return r.removeQuery(t,e,a),this._parts.query=r.buildQuery(t,this._parts.duplicateQueryParameters,this._parts.escapeQuerySpace),"string"!=typeof e&&(n=a),this.build(!n),this},o.hasQuery=function(e,a,n){var t=r.parseQuery(this._parts.query,this._parts.escapeQuerySpace);return r.hasQuery(t,e,a,n)},o.setSearch=o.setQuery,o.addSearch=o.addQuery,o.removeSearch=o.removeQuery,o.hasSearch=o.hasQuery,o.normalize=function(){return this._parts.urn?this.normalizeProtocol(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build():this.normalizeProtocol(!1).normalizeHostname(!1).normalizePort(!1).normalizePath(!1).normalizeQuery(!1).normalizeFragment(!1).build()},o.normalizeProtocol=function(e){return"string"==typeof this._parts.protocol&&(this._parts.protocol=this._parts.protocol.toLowerCase(),this.build(!e)),this},o.normalizeHostname=function(n){return this._parts.hostname&&(this.is("IDN")&&e?this._parts.hostname=e.toASCII(this._parts.hostname):this.is("IPv6")&&a&&(this._parts.hostname=a.best(this._parts.hostname)),this._parts.hostname=this._parts.hostname.toLowerCase(),this.build(!n)),this},o.normalizePort=function(e){return"string"==typeof this._parts.protocol&&this._parts.port===r.defaultPorts[this._parts.protocol]&&(this._parts.port=null,this.build(!e)),this},o.normalizePath=function(e){var a,n=this._parts.path;if(!n)return this;if(this._parts.urn)return this._parts.path=r.recodeUrnPath(this._parts.path),this.build(!e),this;if("/"===this._parts.path)return this;var t,i,o="";for("/"!==(n=r.recodePath(n)).charAt(0)&&(a=!0,n="/"+n),"/.."!==n.slice(-3)&&"/."!==n.slice(-2)||(n+="/"),n=n.replace(/(\/(\.\/)+)|(\/\.$)/g,"/").replace(/\/{2,}/g,"/"),a&&(o=n.substring(1).match(/^(\.\.\/)+/)||"")&&(o=o[0]);-1!==(t=n.search(/\/\.\.(\/|$)/));)0!==t?(-1===(i=n.substring(0,t).lastIndexOf("/"))&&(i=t),n=n.substring(0,i)+n.substring(t+3)):n=n.substring(3);return a&&this.is("relative")&&(n=o+n.substring(1)),this._parts.path=n,this.build(!e),this},o.normalizePathname=o.normalizePath,o.normalizeQuery=function(e){return"string"==typeof this._parts.query&&(this._parts.query.length?this.query(r.parseQuery(this._parts.query,this._parts.escapeQuerySpace)):this._parts.query=null,this.build(!e)),this},o.normalizeFragment=function(e){return this._parts.fragment||(this._parts.fragment=null,this.build(!e)),this},o.normalizeSearch=o.normalizeQuery,o.normalizeHash=o.normalizeFragment,o.iso8859=function(){var e=r.encode,a=r.decode;r.encode=escape,r.decode=decodeURIComponent;try{this.normalize()}finally{r.encode=e,r.decode=a}return this},o.unicode=function(){var e=r.encode,a=r.decode;r.encode=f,r.decode=unescape;try{this.normalize()}finally{r.encode=e,r.decode=a}return this},o.readable=function(){var a=this.clone();a.username("").password("").normalize();var n="";if(a._parts.protocol&&(n+=a._parts.protocol+"://"),a._parts.hostname&&(a.is("punycode")&&e?(n+=e.toUnicode(a._parts.hostname),a._parts.port&&(n+=":"+a._parts.port)):n+=a.host()),a._parts.hostname&&a._parts.path&&"/"!==a._parts.path.charAt(0)&&(n+="/"),n+=a.path(!0),a._parts.query){for(var t="",i=0,o=a._parts.query.split("&"),s=o.length;i<s;i++){var l=(o[i]||"").split("=");t+="&"+r.decodeQuery(l[0],this._parts.escapeQuerySpace).replace(/&/g,"%26"),void 0!==l[1]&&(t+="="+r.decodeQuery(l[1],this._parts.escapeQuerySpace).replace(/&/g,"%26"))}n+="?"+t.substring(1)}return n+=r.decodeQuery(a.hash(),!0)},o.absoluteTo=function(e){var a,n,t,i=this.clone(),o=["protocol","username","password","hostname","port"];if(this._parts.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e instanceof r||(e=new r(e)),i._parts.protocol)return i;if(i._parts.protocol=e._parts.protocol,this._parts.hostname)return i;for(n=0;t=o[n];n++)i._parts[t]=e._parts[t];return i._parts.path?(".."===i._parts.path.substring(-2)&&(i._parts.path+="/"),"/"!==i.path().charAt(0)&&(a=(a=e.directory())||(0===e.path().indexOf("/")?"/":""),i._parts.path=(a?a+"/":"")+i._parts.path,i.normalizePath())):(i._parts.path=e._parts.path,i._parts.query||(i._parts.query=e._parts.query)),i.build(),i},o.relativeTo=function(e){var a,n,t,i,o,s=this.clone().normalize();if(s._parts.urn)throw new Error("URNs do not have any generally defined hierarchical components");if(e=new r(e).normalize(),a=s._parts,n=e._parts,i=s.path(),o=e.path(),"/"!==i.charAt(0))throw new Error("URI is already relative");if("/"!==o.charAt(0))throw new Error("Cannot calculate a URI relative to another relative URI");if(a.protocol===n.protocol&&(a.protocol=null),a.username!==n.username||a.password!==n.password)return s.build();if(null!==a.protocol||null!==a.username||null!==a.password)return s.build();if(a.hostname!==n.hostname||a.port!==n.port)return s.build();if(a.hostname=null,a.port=null,i===o)return a.path="",s.build();if(!(t=r.commonPath(i,o)))return s.build();var l=n.path.substring(t.length).replace(/[^\/]*$/,"").replace(/.*?\//g,"../");return a.path=l+a.path.substring(t.length)||"./",s.build()},o.equals=function(e){var a,n,t,i,o,l=this.clone(),u=new r(e),d={};if(l.normalize(),u.normalize(),l.toString()===u.toString())return!0;if(t=l.query(),i=u.query(),l.query(""),u.query(""),l.toString()!==u.toString())return!1;if(t.length!==i.length)return!1;for(o in a=r.parseQuery(t,this._parts.escapeQuerySpace),n=r.parseQuery(i,this._parts.escapeQuerySpace),a)if(s.call(a,o)){if(c(a[o])){if(!p(a[o],n[o]))return!1}else if(a[o]!==n[o])return!1;d[o]=!0}for(o in n)if(s.call(n,o)&&!d[o])return!1;return!0},o.preventInvalidHostname=function(e){return this._parts.preventInvalidHostname=!!e,this},o.duplicateQueryParameters=function(e){return this._parts.duplicateQueryParameters=!!e,this},o.escapeQuerySpace=function(e){return this._parts.escapeQuerySpace=!!e,this},r})},function(e,a){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,a){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,a,n){const t=n(4),i=n(11),r=n(12);function o(){return i}function s(e){for(var a in o())if(void 0!=o()[a][e])return o()[a][e].slice();return[]}function l(e){return s(e).length>0}function u(){return Object.keys(o())}function c(e){var a=u().filter(a=>void 0!==e[a]);return 0==a.length?["countries"]:a}function d(e){return c(e).map(e=>Object.keys(o()[e])).reduce((e,a)=>e.concat(a)).filter(l)}Array.prototype.contains=function(e){return this.indexOf(e)>=0};var h=[];function p(e){return 0==h.length&&(0==(h=function(e){if(void 0!=e.custom){var a=new RegExp(e.custom),n=d(e).filter(e=>null!=a.exec(e));if(console.log(n),n.length>0)return n}return[]}(e)).length&&(h=function(e){if(l(e.start)){var a=isNaN(e.depth)?1:e.depth,n=void 0!=e["exclude-paths-through"]?e["exclude-paths-through"].split(";"):[],t=n.length>0;return Object.keys(m(e.start,a,t,n))}return[]}(e)),0==h.length&&(h=d(e))),h}function g(e,a,n=[]){return n.length>0?n.contains(a):r.remove_paths_through.contains(a)&&!r.unless_started_from.contains(e)}function m(e,a,n=!0,t=[]){for(var i={[e]:0},r=[e];r.length>0;){var o=r.shift();if(i[o]==a)return i;s(o).forEach(function(a){void 0==i[a]&&(i[a]=i[o]+1,n&&g(e,a,t)||r.push(a))})}return i}Object.assign(a,{unused_quiz_modes:function(e){return u().filter(a=>!c(e).contains(a))},build_question:function(e){const a=t.choice(p(e)),n=function(e){var a=e["num-choices"];return isNaN(a)||a<2?4:a}(e)-1;var i=m(a,2),o=Object.keys(i).filter(e=>2==i[e]);return void 0!=r.replace_possible_answers[a]?o=r.replace_possible_answers[a]:void 0!=r.add_possible_answers[a]&&(o=o.concat(r.add_possible_answers[a])),{territory:a,answer:t.choice(o),wrong_answers:t.sample(s(a),n)}},borders:o,neighbors:s})},function(e){e.exports={"usa-states":{Alabama:["Florida","Georgia_","Mississippi","Tennessee"],Alaska:["Canada_"],Arizona:["California","Colorado","Mexico_","Nevada","New Mexico","Utah"],Arkansas:["Louisiana","Mississippi","Missouri","Oklahoma","Tennessee","Texas"],"Atlantic Ocean_":["Canada_","Maine","New Hampshire","Massachusetts","Rhode Island","Connecticut","New York","New Jersey","Delaware","Maryland","Virginia","North Carolina","South Carolina","Georgia_","Florida","Alabama","Mississippi","Louisiana","Texas","Mexico_"],California:["Arizona","Mexico_","Nevada","Oregon"],Canada_:["Alaska","Washington","Idaho","Montana","North Dakota","Minnesota","Michigan","New York","Vermont","New Hampshire","Maine"],"Chesapeake Bay":["Maryland","Virginia"],Colorado:["Arizona","Kansas","Nebraska","New Mexico","Oklahoma","Utah","Wyoming"],"Colorado River":["Nevada","Arizona","California","Mexico_"],Connecticut:["Massachusetts","New York","Rhode Island"],Delaware:["Maryland","New Jersey","Pennsylvania"],"Delaware River":["New York","Pennsylvania","New Jersey","Delaware"],Florida:["Alabama","Georgia_"],Georgia_:["Alabama","Florida","North Carolina","South Carolina","Tennessee"],"Gulf of Mexico_":["Mexico_","Texas","Louisiana","Mississippi","Alabama","Florida"],Hawaii:[],Idaho:["Canada_","Montana","Nevada","Oregon","Utah","Washington","Wyoming"],Illinois:["Indiana","Iowa","Kentucky","Missouri","Wisconsin"],Indiana:["Illinois","Kentucky","Michigan","Ohio"],Iowa:["Illinois","Minnesota","Missouri","Nebraska","South Dakota","Wisconsin"],Kansas:["Colorado","Missouri","Nebraska","Oklahoma"],Kentucky:["Illinois","Indiana","Missouri","Ohio","Tennessee","Virginia","West Virginia"],"Lake Erie":["Canada_","Michigan","New York","Ohio","Pennsylvania"],"Lake Huron":["Canada_","Michigan"],"Lake Michigan":["Illinois","Indiana","Michigan","Wisconsin"],"Lake Ontario":["Canada_","New York"],"Lake Superior":["Canada_","Michigan","Minnesota","Wisconsin"],Louisiana:["Arkansas","Mississippi","Texas"],Maine:["Canada_","New Hampshire"],Maryland:["Delaware","Pennsylvania","Virginia","Washington, D.C.","West Virginia"],"Mason-Dixon Line":["West Virginia","Pennsylvania","Maryland","Delaware"],Massachusetts:["Connecticut","New Hampshire","New York","Rhode Island","Vermont"],Mexico_:["California","Arizona","New Mexico","Texas"],Michigan:["Canada_","Indiana","Ohio","Wisconsin"],Minnesota:["Canada_","Iowa","North Dakota","South Dakota","Wisconsin"],Mississippi:["Alabama","Arkansas","Louisiana","Tennessee"],"Mississippi River":["Minnesota","Wisconsin","Iowa","Illinois","Missouri","Kentucky","Tennessee","Arkansas","Mississippi","Louisiana"],Missouri:["Arkansas","Illinois","Iowa","Kansas","Kentucky","Nebraska","Oklahoma","Tennessee"],"Missouri River":["South Dakota","Nebraska","Iowa","Missouri","Kansas"],Montana:["Canada_","Idaho","North Dakota","South Dakota","Wyoming"],Nebraska:["Colorado","Iowa","Kansas","Missouri","South Dakota","Wyoming"],Nevada:["Arizona","California","Idaho","Oregon","Utah"],"New Hampshire":["Canada_","Maine","Massachusetts","Vermont"],"New Jersey":["Delaware","New York","Pennsylvania"],"New Mexico":["Arizona","Colorado","Mexico_","Oklahoma","Texas","Utah"],"New York":["Canada_","Connecticut","Massachusetts","New Jersey","Pennsylvania","Vermont"],"North Carolina":["Georgia_","South Carolina","Tennessee","Virginia"],"North Dakota":["Canada_","Minnesota","South Dakota","Montana"],Ohio:["Indiana","Kentucky","Michigan","Pennsylvania","West Virginia"],"Ohio River":["Illinois","Kentucky","Indiana","Ohio","West Virginia"],Oklahoma:["Arkansas","Colorado","Kansas","Missouri","New Mexico","Texas"],Oregon:["California","Idaho","Nevada","Washington"],"Pacific Ocean_":["Alaska","Canada_","Washington","Oregon","California","Mexico_","Hawaii"],Pennsylvania:["Delaware","Maryland","New Jersey","New York","Ohio","West Virginia"],"Rio Grande":["New Mexico","Texas","Mexico_"],"Rhode Island":["Connecticut","Massachusetts"],"South Carolina":["Georgia_","North Carolina"],"South Dakota":["Iowa","Minnesota","Montana","Nebraska","North Dakota","Wyoming"],Tennessee:["Alabama","Arkansas","Georgia_","Kentucky","Mississippi","Missouri","North Carolina","Virginia"],Texas:["Arkansas","Louisiana","Mexico_","New Mexico","Oklahoma"],Utah:["Arizona","Colorado","Idaho","Nevada","New Mexico","Wyoming"],Vermont:["Canada_","Massachusetts","New Hampshire","New York"],Virginia:["Kentucky","Maryland","North Carolina","Tennessee","Washington, D.C.","West Virginia"],Washington:["Canada_","Idaho","Oregon"],"Washington, D.C.":["Maryland","Virginia"],"West Virginia":["Kentucky","Maryland","Ohio","Pennsylvania","Virginia"],Wisconsin:["Illinois","Iowa","Michigan","Minnesota"],Wyoming:["Colorado","Idaho","Montana","Nebraska","South Dakota","Utah"]},"california-counties":{Alameda:["Contra Costa","San Francisco","San Joaquin","San Mateo","Santa Clara","Stanislaus"],Alpine:["Amador","Calaveras","El Dorado","Mono","Nevada_","Tuolumne"],Amador:["Alpine","Calaveras","El Dorado","Sacramento","San Joaquin"],Arizona__:["Mexico__","Imperial","Riverside","San Bernardino","Nevada_"],Butte:["Colusa","Glenn","Plumas","Sutter","Tehama","Yuba"],Calaveras:["Alpine","Amador","San Joaquin","Stanislaus","Tuolumne"],Colusa:["Butte","Glenn","Lake","Sutter","Yolo"],"Contra Costa":["Alameda","Marin","Sacramento","San Francisco","San Joaquin","Solano","Sonoma"],"Del Norte":["Humboldt","Oregon_","Siskiyou"],"El Dorado":["Alpine","Amador","Nevada_","Placer","Sacramento"],Fresno:["Inyo","Kings","Madera","Merced","Mono","Monterey","San Benito","Tulare"],Glenn:["Butte","Colusa","Lake","Mendocino","Tehama"],Humboldt:["Del Norte","Mendocino","Siskiyou","Trinity"],Imperial:["Arizona__","Mexico__","Riverside","San Diego"],Inyo:["Fresno","Kern","Mono","Nevada_","San Bernardino","Tulare"],Kern:["Inyo","Kings","Los Angeles","San Bernardino","San Luis Obispo","Santa Barbara","Tulare","Ventura"],Kings:["Fresno","Kern","Monterey","San Luis Obispo","Tulare"],Lake:["Colusa","Glenn","Mendocino","Napa","Sonoma","Yolo"],Lassen:["Modoc","Nevada_","Plumas","Shasta","Sierra"],"Los Angeles":["Kern","Orange","San Bernardino","Ventura"],Madera:["Fresno","Mariposa","Merced","Mono","Tuolumne"],Marin:["Contra Costa","San Francisco","Solano","Sonoma"],Mariposa:["Madera","Merced","Stanislaus","Tuolumne"],Mendocino:["Glenn","Humboldt","Lake","Sonoma","Tehama","Trinity"],Merced:["Fresno","Madera","Mariposa","San Benito","Santa Clara","Stanislaus"],Mexico__:["Arizona__","Imperial","San Diego"],Modoc:["Lassen","Nevada_","Oregon_","Shasta","Siskiyou"],Mono:["Alpine","Fresno","Inyo","Madera","Nevada_","Tuolumne"],Monterey:["Fresno","Kings","San Benito","San Luis Obispo","Santa Cruz"],Napa:["Lake","Solano","Sonoma","Yolo"],Nevada_:["Oregon_","Modoc","Lassen","Sierra","Nevada County","Placer","El Dorado","Alpine","Mono","Inyo","San Bernardino","Arizona__"],"Nevada County":["Nevada_","Placer","Sierra","Yuba"],Orange:["Los Angeles","Riverside","San Bernardino","San Diego"],Oregon_:["Del Norte","Siskiyou","Modoc","Nevada_"],"Pacific Ocean":["Oregon_","Del Norte","Humboldt","Mendocino","Sonoma","Marin","San Francisco","San Mateo","Santa Cruz","Monterey","San Luis Obispo","Santa Barbara","Ventura","Los Angeles","Orange","San Diego","Mexico__"],Placer:["El Dorado","Nevada_","Nevada County","Sacramento","Sutter","Yuba"],Plumas:["Butte","Lassen","Shasta","Sierra","Tehama","Yuba"],Riverside:["Arizona__","Imperial","Orange","San Bernardino","San Diego"],Sacramento:["Amador","Contra Costa","El Dorado","Placer","San Joaquin","Solano","Sutter","Yolo"],"San Benito":["Fresno","Merced","Monterey","Santa Clara","Santa Cruz"],"San Bernardino":["Arizona__","Inyo","Kern","Los Angeles","Nevada_","Orange","Riverside"],"San Diego":["Imperial","Mexico__","Orange","Riverside"],"San Francisco":["Alameda","Contra Costa","Marin","San Mateo"],"San Francisco Bay":["San Francisco","Marin","Sonoma","Napa","Solano","Contra Costa","Alameda","Santa Clara","San Mateo"],"San Joaquin":["Alameda","Amador","Calaveras","Contra Costa","Sacramento","Stanislaus"],"San Luis Obispo":["Kern","Kings","Monterey","Santa Barbara"],"San Mateo":["Alameda","San Francisco","Santa Clara","Santa Cruz"],"Santa Barbara":["Kern","San Luis Obispo","Ventura"],"Santa Clara":["Alameda","Merced","San Benito","San Mateo","Santa Cruz","Stanislaus"],"Santa Cruz":["Monterey","San Benito","Santa Clara","San Mateo"],Shasta:["Lassen","Modoc","Plumas","Siskiyou","Tehama","Trinity"],Sierra:["Lassen","Nevada_","Nevada County","Plumas","Yuba"],Siskiyou:["Del Norte","Humboldt","Modoc","Oregon_","Shasta","Trinity"],Solano:["Contra Costa","Marin","Napa","Sacramento","Sonoma","Yolo"],Sonoma:["Contra Costa","Lake","Marin","Mendocino","Napa","Solano"],Stanislaus:["Alameda","Calaveras","Mariposa","Merced","San Joaquin","Santa Clara","Tuolumne"],Sutter:["Butte","Colusa","Placer","Sacramento","Yolo","Yuba"],Tehama:["Butte","Glenn","Mendocino","Plumas","Shasta","Trinity"],Trinity:["Humboldt","Mendocino","Shasta","Siskiyou","Tehama"],Tulare:["Fresno","Inyo","Kern","Kings"],Tuolumne:["Alpine","Calaveras","Madera","Mariposa","Mono","Stanislaus"],Ventura:["Los Angeles","Kern","Santa Barbara"],Yolo:["Colusa","Lake","Napa","Sacramento","Solano","Sutter"],Yuba:["Butte","Nevada County","Placer","Plumas","Sierra","Sutter"]},"mexico-states":{Aguascalientes:["Jalisco","Zacatecas"],"Baja California Sur":["Baja California"],"Baja California":["Baja California Sur","United States__","Sonora"],Belize_:["Campeche","Quintana Roo","Guatemala_"],Campeche:["Belize_","Guatemala_","Quintana Roo","Tabasco","YucatÃ¡n"],Chiapas:["Guatemala_","Oaxaca","Tabasco","Veracruz"],Chihuahua:["Coahuila","Durango","Sinaloa","Sonora","United States__"],Coahuila:["Chihuahua","Durango","Nuevo LeÃ³n","United States__","Zacatecas"],Colima:["Jalisco","MichoacÃ¡n"],Durango:["Chihuahua","Coahuila","Nayarit","Sinaloa","Zacatecas"],Guanajuato:["Jalisco","MichoacÃ¡n","QuerÃ©taro","San Luis PotosÃ­","Zacatecas"],Guatemala_:["Campeche","Chiapas","Tabasco","Belize_"],Guerrero:["State of Mexico","MichoacÃ¡n","Morelos","Oaxaca","Puebla"],"Gulf of California":["Baja California Sur","Baja California","Sonora","Sinaloa"],Hidalgo:["State of Mexico","Puebla","QuerÃ©taro","San Luis PotosÃ­","Tlaxcala","Veracruz"],Jalisco:["Aguascalientes","Colima","Guanajuato","MichoacÃ¡n","Nayarit","San Luis PotosÃ­","Zacatecas"],"State of Mexico":["Guerrero","Hidalgo","Mexico City","MichoacÃ¡n","Morelos","Puebla","QuerÃ©taro","Tlaxcala"],"Mexico City":["State of Mexico","Morelos"],"MichoacÃ¡n":["Colima","Guerrero","Guanajuato","Jalisco","State of Mexico","QuerÃ©taro"],Morelos:["Guerrero","State of Mexico","Mexico City","Puebla"],Nayarit:["Durango","Jalisco","Sinaloa","Zacatecas"],"Nuevo LeÃ³n":["Coahuila","San Luis PotosÃ­","Tamaulipas","United States__","Zacatecas"],Oaxaca:["Chiapas","Guerrero","Puebla","Veracruz"],Puebla:["Guerrero","Hidalgo","State of Mexico","Morelos","Oaxaca","Tlaxcala","Veracruz"],"QuerÃ©taro":["Guanajuato","Hidalgo","State of Mexico","MichoacÃ¡n","San Luis PotosÃ­"],"Quintana Roo":["Belize_","Campeche","YucatÃ¡n"],"San Luis PotosÃ­":["Guanajuato","Hidalgo","Jalisco","Nuevo LeÃ³n","QuerÃ©taro","Tamaulipas","Veracruz","Zacatecas"],Sinaloa:["Chihuahua","Durango","Nayarit","Sonora"],Sonora:["Baja California","Chihuahua","United States__","Sinaloa"],Tabasco:["Campeche","Chiapas","Guatemala_","Veracruz"],Tamaulipas:["Nuevo LeÃ³n","San Luis PotosÃ­","United States__","Veracruz"],Tlaxcala:["Hidalgo","State of Mexico","Puebla"],"United States__":["Baja California","Sonora","Chihuahua","Coahuila","Nuevo LeÃ³n","Tamaulipas"],Veracruz:["Chiapas","Hidalgo","Oaxaca","Puebla","San Luis PotosÃ­","Tabasco","Tamaulipas"],"YucatÃ¡n":["Campeche","Quintana Roo"],Zacatecas:["Aguascalientes","Coahuila","Durango","Guanajuato","Jalisco","Nayarit","Nuevo LeÃ³n","San Luis PotosÃ­"]},"canada-provinces":{Alberta:["British Columbia","Saskatchewan","Northwest Territories","United States_"],"British Columbia":["United States_","Alberta","Northwest Territories","Yukon Territory"],"Hudson Bay":["Nunavut","Manitoba","Ontario","Quebec"],Manitoba:["Northwest Territories","Nunavut","Ontario","Saskatchewan","United States_"],"New Brunswick":["Nova Scotia","Quebec","United States_"],"Newfoundland and Labrador":["Quebec"],"Northwest Territories":["Alberta","British Columbia","Manitoba","Nunavut","Saskatchewan","Yukon Territory"],"Nova Scotia":["New Brunswick"],Nunavut:["Manitoba","Northwest Territories","Saskatchewan"],Ontario:["Manitoba","Quebec","United States_"],"Prince Edward Island":[],Quebec:["Ontario","New Brunswick","Newfoundland and Labrador","United States_"],Saskatchewan:["Alberta","Manitoba","Northwest Territories","Nunavut","United States_"],"United States_":["Yukon Territory","British Columbia","Alberta","Saskatchewan","Manitoba","Ontario","Quebec","New Brunswick"],"Yukon Territory":["United States_","British Columbia","Northwest Territories"]},"brazil-states":{Acre:["Amazonas","Rondonia","Bolivia_","Peru_"],Alagoas:["Pernambuco","Sergipe","Bahia"],"AmapÃ¡":["ParÃ¡","French Guiana_","Suriname_"],Amazonas:["Roraima","ParÃ¡","Mato Grosso","Rondonia","Acre","Peru_","Colombia_","Venezuela_"],Argentina_:["Parana","Santa Catarina","Rio Grande do Sul","Uruguay_","Paraguay_","Bolivia_"],Bahia:["Sergipe","Alagoas","Pernambuco","Piaui","Tocantins","Goias","Minas Gerais","Espirito Santo"],Bolivia_:["Acre","Rondonia","Mato Grosso","Mato Grosso do Sul","Paraguay_","Argentina_","Peru_"],Ceara:["Piaui","Rio Grande do Norte","Paraiba","Pernambuco"],Colombia_:["Amazonas","Peru_","Venezuela_"],"Distrito Federal":["Goias","Minas Gerais"],"Espirito Santo":["Bahia","Minas Gerais","Rio de Janeiro"],"French Guiana_":["AmapÃ¡","Suriname_"],Goias:["Tocantins","Bahia","Minas Gerais","Distrito Federal","Mato Grosso do Sul","Mato Grosso"],Guyana_:["Roraima","ParÃ¡","Venezuela_","Suriname_"],Maranhao:["Piaui","Tocantins","ParÃ¡"],"Mato Grosso":["ParÃ¡","Tocantins","Goias","Mato Grosso do Sul","Bolivia_","Rondonia","Amazonas"],"Mato Grosso do Sul":["Mato Grosso","Goias","Minas Gerais","Sao Paulo","Parana","Paraguay_","Bolivia_"],"Minas Gerais":["Bahia","Espirito Santo","Rio de Janeiro","Sao Paulo","Mato Grosso do Sul","Goias","Distrito Federal"],"ParÃ¡":["Maranhao","Tocantins","Mato Grosso","Amazonas","Roraima","AmapÃ¡","Suriname_","Guyana_"],Paraguay_:["Mato Grosso do Sul","Parana","Argentina_","Bolivia_"],Paraiba:["Rio Grande do Norte","Ceara","Pernambuco"],Parana:["Mato Grosso do Sul","Sao Paulo","Santa Catarina","Paraguay_","Argentina_"],Pernambuco:["Paraiba","Ceara","Piaui","Bahia","Alagoas"],Peru_:["Acre","Amazonas","Bolivia_","Colombia_"],Piaui:["Ceara","Pernambuco","Bahia","Tocantins","Maranhao"],"Rio de Janeiro":["Espirito Santo","Minas Gerais","Sao Paulo"],"Rio Grande do Norte":["Paraiba","Ceara"],"Rio Grande do Sul":["Santa Catarina","Argentina_","Uruguay_"],Rondonia:["Amazonas","Mato Grosso","Acre","Bolivia_"],Roraima:["ParÃ¡","Amazonas","Guyana_","Venezuela_"],"Santa Catarina":["Parana","Rio Grande do Sul","Argentina_"],"Sao Paulo":["Minas Gerais","Rio de Janeiro","Parana","Mato Grosso do Sul"],Sergipe:["Alagoas","Bahia"],Suriname_:["AmapÃ¡","ParÃ¡","Guyana_","French Guiana_"],Tocantins:["ParÃ¡","Maranhao","Piaui","Bahia","Goias","Mato Grosso"],Uruguay_:["Rio Grande do Sul","Argentina_"],Venezuela_:["Roraima","Amazonas","Colombia_","Guyana_"]},"nigeria-states":{Abia:["Cross River","Akwa Ibom","Rivers","Imo","Anambra","Enugu","Ebonyi"],Adamawa:["Cameroon_","Borno","Gombe","Taraba"],"Akwa Ibom":["Cross River","Abia","Rivers"],Anambra:["Rivers","Delta","Edo","Kogi","Enugu","Abia","Imo"],Bauchi:["Kano","Jigawa","Yobe","Gombe","Taraba","Plateau","Kaduna"],Bayelsa:["Delta","Rivers"],Benin_:["Kebbi","Niger State","Kwara","Oyo","Ogun","Lagos"],Benue:["Enugu","Kogi","Nasarawa","Taraba","Cameroon_","Cross River","Ebonyi"],Borno:["Yobe","Gombe","Adamawa","Niger_","Chad_","Cameroon_"],Cameroon_:["Borno","Adamawa","Taraba","Benue","Cross River"],Chad_:["Borno"],"Cross River":["Benue","Ebonyi","Abia","Akwa Ibom","Cameroon_"],Delta:["Ondo","Edo","Kogi","Anambra","Rivers","Bayelsa"],Ebonyi:["Benue","Cross River","Abia","Enugu"],Edo:["Delta","Ondo","Kogi","Anambra"],Ekiti:["Kogi","Ondo","Osun","Kwara"],Enugu:["Kogi","Benue","Ebonyi","Abia","Anambra"],"Federal Capital Territory":["Kaduna","Nasarawa","Kogi","Niger State"],Gombe:["Yobe","Borno","Adamawa","Taraba","Bauchi"],Imo:["Anambra","Abia","Rivers"],Jigawa:["Yobe","Bauchi","Kano","Katsina","Niger_"],Kaduna:["Federal Capital Territory","Niger State","Zamfara","Katsina","Kano","Bauchi","Plateau","Nasarawa"],Kano:["Jigawa","Bauchi","Kaduna","Katsina"],Katsina:["Niger_","Jigawa","Kano","Kaduna","Zamfara"],Kebbi:["Sokoto","Zamfara","Niger State","Benin_","Niger_"],Kogi:["Federal Capital Territory","Nasarawa","Benue","Enugu","Anambra","Edo","Ondo","Ekiti","Kwara","Niger State","Delta"],Kwara:["Niger State","Kogi","Ekiti","Osun","Oyo","Benin_"],Lagos:["Benin_","Ogun"],Nasarawa:["Kaduna","Plateau","Taraba","Benue","Kogi","Federal Capital Territory"],Niger_:["Kebbi","Sokoto","Zamfara","Katsina","Jigawa","Yobe","Borno"],"Niger State":["Kebbi","Zamfara","Kaduna","Federal Capital Territory","Kogi","Kwara","Benin_"],Ogun:["Ondo","Lagos","Benin_","Oyo","Osun"],Ondo:["Ogun","Osun","Ekiti","Kogi","Edo","Delta"],Osun:["Kwara","Ekiti","Ondo","Ogun","Oyo"],Oyo:["Kwara","Osun","Ogun","Benin_"],Plateau:["Bauchi","Taraba","Nasarawa","Kaduna"],Rivers:["Akwa Ibom","Abia","Imo","Anambra","Delta","Bayelsa"],Sokoto:["Kebbi","Niger_","Zamfara"],Taraba:["Cameroon_","Benue","Nasarawa","Plateau","Bauchi","Gombe","Adamawa"],Yobe:["Borno","Gombe","Bauchi","Jigawa","Niger_"],Zamfara:["Katsina","Kaduna","Kebbi","Sokoto","Niger State","Niger_"]},"india-states":{"Andhra Pradesh":["Karnataka","Odisha","Tamil Nadu","Telangana"],"Arunachal Pradesh":["Assam","Bhutan_","China_","Myanmar_","Nagaland"],Assam:["Arunachal Pradesh","Bangladesh_","Bhutan_","Manipur","Meghalaya","Mizoram","Nagaland","Tripura","West Bengal"],Bangladesh_:["Assam","Meghalaya","Mizoram","Myanmar_","Tripura","West Bengal"],Bhutan_:["Arunachal Pradesh","Assam","China_","Sikkim","West Bengal"],Bihar:["Jharkhand","Nepal_","Uttar Pradesh","West Bengal"],Chandigarh:["Haryana","Punjab"],Chattisgarh:["Jharkhand","Madhya Pradesh","Maharashtra","Odisha","Telangana","Uttar Pradesh"],China_:["Arunachal Pradesh","Bhutan_","Himachal Pradesh","Jammu and Kashmir","Myanmar_","Nepal_","Pakistan_","Sikkim","Uttarakhand"],Delhi:["Haryana","Uttar Pradesh"],Goa:["Karnataka","Maharashtra"],Gujarat:["Madhya Pradesh","Maharashtra","Pakistan_","Rajasthan"],Haryana:["Chandigarh","Delhi","Himachal Pradesh","Punjab","Rajasthan","Uttar Pradesh"],"Himachal Pradesh":["China_","Haryana","Jammu and Kashmir","Punjab","Uttarakhand","Uttar Pradesh"],"Jammu and Kashmir":["China_","Himachal Pradesh","Pakistan_","Punjab"],Jharkhand:["Bihar","Chattisgarh","Odisha","Uttar Pradesh","West Bengal"],Karnataka:["Andhra Pradesh","Goa","Kerala","Maharashtra","Tamil Nadu","Telangana"],Kerala:["Karnataka","Tamil Nadu"],"Madhya Pradesh":["Chattisgarh","Gujarat","Maharashtra","Rajasthan","Uttar Pradesh"],Maharashtra:["Chattisgarh","Gujarat","Goa","Karnataka","Madhya Pradesh","Telangana"],Manipur:["Assam","Mizoram","Myanmar_","Nagaland"],Meghalaya:["Assam","Bangladesh_"],Mizoram:["Assam","Bangladesh_","Manipur","Myanmar_","Tripura"],Myanmar_:["Arunachal Pradesh","Bangladesh_","China_","Manipur","Mizoram","Nagaland"],Nagaland:["Arunachal Pradesh","Assam","Manipur","Myanmar_"],Nepal_:["Bihar","China_","Sikkim","Uttar Pradesh","Uttarakhand","West Bengal"],Odisha:["Andhra Pradesh","Chattisgarh","Jharkhand","Telangana","West Bengal"],Pakistan_:["China_","Jammu and Kashmir","Punjab","Rajasthan","Gujarat"],Punjab:["Chandigarh","Haryana","Himachal Pradesh","Jammu and Kashmir","Pakistan_","Rajasthan"],Rajasthan:["Gujarat","Haryana","Madhya Pradesh","Pakistan_","Punjab","Uttar Pradesh"],Sikkim:["Bhutan_","China_","Nepal_","West Bengal"],"Tamil Nadu":["Andhra Pradesh","Karnataka","Kerala"],Telangana:["Andhra Pradesh","Chattisgarh","Karnataka","Maharashtra","Odisha"],Tripura:["Assam","Bangladesh_","Mizoram"],"Uttar Pradesh":["Bihar","Chattisgarh","Delhi","Haryana","Himachal Pradesh","Jharkhand","Madhya Pradesh","Nepal_","Rajasthan","Uttarakhand"],Uttarakhand:["China_","Himachal Pradesh","Nepal_","Uttar Pradesh"],"West Bengal":["Assam","Bangladesh_","Bhutan_","Bihar","Jharkhand","Nepal_","Odisha","Sikkim"]},"pakistan-provinces":{Afghanistan_:["China__","Gilgit-Baltistan","Khyber Pakhtunkhwa","Federally Administered Tribal Areas","Balochistan","Iran_"],"Azad Jammu and Kashmir":["Gilgit-Baltistan","India_","Khyber Pakhtunkhwa","Punjab_"],Balochistan:["Afghanistan_","Federally Administered Tribal Areas","Iran_","Punjab_","Sindh"],China__:["Afghanistan_","India_","Gilgit-Baltistan"],"Federally Administered Tribal Areas":["Afghanistan_","Balochistan","Khyber Pakhtunkhwa","Punjab_"],"Gilgit-Baltistan":["Afghanistan_","Azad Jammu and Kashmir","China__","India_","Khyber Pakhtunkhwa"],India_:["Azad Jammu and Kashmir","China__","Gilgit-Baltistan","Punjab_","Sindh"],Iran_:["Afghanistan_","Balochistan"],"Islamabad Capital Territory":["Khyber Pakhtunkhwa","Punjab_"],"Khyber Pakhtunkhwa":["Afghanistan_","Azad Jammu and Kashmir","Federally Administered Tribal Areas","Gilgit-Baltistan","Islamabad Capital Territory","Punjab_"],Punjab_:["Azad Jammu and Kashmir","Balochistan","Federally Administered Tribal Areas","India_","Islamabad Capital Territory","Khyber Pakhtunkhwa","Sindh"],Sindh:["Balochistan","India_","Punjab_"]},"china-provinces":{Afghanistan__:["Pakistan__","Tajikistan_","Xinjiang"],Anhui:["Henan","Hubei","Jiangsu","Jiangxi","Shandong","Zhejiang"],Beijing:["Hebei","Tianjin"],Bhutan__:["India__","Xizang"],Chongqing:["Guizhou","Hubei","Hunan","Shaanxi","Sichuan"],Fujian:["Guangdong","Jiangxi","Zhejiang"],Gansu:["Nei Mongol","Mongolia_","Ningxia","Sichuan","Shaanxi","Qinghai","Xinjiang"],Guangdong:["Fujian","Guangxi","Hunan","Jiangxi"],Guangxi:["Guangdong","Guizhou","Hunan","Vietnam_","Yunnan"],Guizhou:["Chongqing","Guangxi","Hunan","Sichuan","Yunnan"],Hebei:["Beijing","Henan","Liaoning","Nei Mongol","Shandong","Shanxi","Tianjin"],Heilongjiang:["Jilin","Nei Mongol","Russia_"],Henan:["Anhui","Hebei","Hubei","Jiangsu","Shaanxi","Shandong","Shanxi"],Hubei:["Anhui","Chongqing","Henan","Hunan","Jiangxi","Shaanxi"],Hunan:["Chongqing","Guangdong","Guangxi","Guizhou","Hubei","Jiangxi"],India__:["Bhutan__","Myanmar__","Nepal__","Pakistan__","Xinjiang","Xizang"],Jiangsu:["Anhui","Henan","Shandong","Shanghai","Zhejiang"],Jiangxi:["Anhui","Fujian","Guangdong","Hubei","Hunan","Zhejiang"],Jilin:["Heilongjiang","Liaoning","Nei Mongol","North Korea__","Russia_"],Kazakhstan_:["Kyrgyzstan_","Russia_","Xinjiang"],Kyrgyzstan_:["Kazakhstan_","Tajikistan_","Xinjiang"],Laos_:["Myanmar__","Vietnam_","Yunnan"],Liaoning:["Hebei","Jilin","Nei Mongol","North Korea__"],Mongolia_:["Gansu","Nei Mongol","Russia_","Xinjiang"],Myanmar__:["India__","Laos_","Xizang","Yunnan"],"Nei Mongol":["Gansu","Ningxia","Shaanxi","Shanxi","Hebei","Liaoning","Jilin","Heilongjiang","Russia_","Mongolia_"],Nepal__:["India__","Xizang"],"North Korea__":["Jilin","Liaoning","Russia_"],Ningxia:["Gansu","Nei Mongol","Shaanxi"],Pakistan__:["Afghanistan__","India__","Xinjiang"],Qinghai:["Gansu","Sichuan","Xinjiang","Xizang"],Russia_:["Heilongjiang","Jilin","Kazakhstan_","Mongolia_","Nei Mongol","North Korea__","Xinjiang"],Shaanxi:["Chongqing","Gansu","Henan","Hubei","Nei Mongol","Ningxia","Shanxi","Sichuan"],Shandong:["Anhui","Hebei","Henan","Jiangsu"],Shanghai:["Jiangsu","Zhejiang"],Shanxi:["Hebei","Henan","Nei Mongol","Shaanxi"],Sichuan:["Chongqing","Gansu","Guizhou","Qinghai","Shaanxi","Xizang","Yunnan"],Tajikistan_:["Afghanistan__","Kyrgyzstan_","Xinjiang"],Tianjin:["Beijing","Hebei"],Vietnam_:["Guangxi","Laos_","Yunnan"],Xinjiang:["India__","Pakistan__","Afghanistan__","Tajikistan_","Kyrgyzstan_","Kazakhstan_","Russia_","Mongolia_","Gansu","Qinghai","Xizang"],Xizang:["India__","Nepal__","Bhutan__","Myanmar__","Yunnan","Sichuan","Qinghai","Xinjiang"],Yunnan:["Guangxi","Guizhou","Laos_","Myanmar__","Sichuan","Vietnam_","Xizang"],Zhejiang:["Anhui","Fujian","Jiangsu","Jiangxi","Shanghai"]},"taiwan-counties":{"Changhua County":["Taichung City","Nantou County","Yunlin County"],"Chiayi City":["Chiayi County"],"Chiayi County":["Chiayi City","Yunlin County","Nantou County","Kaohsiung City","Tainan City"],"Hsinchu City":["Hsinchu County","Miaoli County"],"Hsinchu County":["Hsinchu City","Taoyuan City","Yilan County","Taichung City","Miaoli County"],"Hualien County":["Yilan County","Taichung City","Nantou County","Kaohsiung City","Taitung County"],"Kaohsiung City":["Nantou County","Hualien County","Taitung County","Pingtung County","Tainan City","Chiayi County"],"Keelung City":["New Taipei City"],"Kinmen County":[],"Lienchiang County":[],"Miaoli County":["Hsinchu City","Hsinchu County","Taichung City"],"Nantou County":["Hualien County","Taichung City","Changhua County","Yunlin County","Chiayi County","Kaohsiung City"],"New Taipei City":["Taoyuan City","Yilan County","Taipei City","Keelung City"],"Penghu County":[],"Pingtung County":["Taitung County","Kaohsiung City"],"Taichung City":["Miaoli County","Hsinchu County","Yilan County","Hualien County","Nantou County","Changhua County"],"Tainan City":["Chiayi County","Kaohsiung City"],"Taipei City":["New Taipei City"],"Taitung County":["Hualien County","Kaohsiung City","Pingtung County"],"Taoyuan City":["New Taipei City","Yilan County","Hsinchu County"],"Yilan County":["New Taipei City","Taoyuan City","Hsinchu County","Taichung City","Hualien County"],"Yunlin County":["Changhua County","Nantou County","Chiayi County"]},"south-korea-provinces":{Busan:["Gyeongsangnam-do","Ulsan"],"Chungcheongbuk-do":["Chungcheongnam-do","Daejeon","Gangwon-do","Gyeonggi-do","Gyeongsangbuk-do","Jeollabuk-do"],"Chungcheongnam-do":["Chungcheongbuk-do","Daejeon","Gyeonggi-do","Jeollabuk-do"],Daegu:["Gyeongsangbuk-do","Gyeongsangnam-do"],Daejeon:["Chungcheongbuk-do","Chungcheongnam-do"],"Gangwon-do":["Chungcheongbuk-do","Gyeonggi-do","Gyeongsangbuk-do","North Korea_"],Gwangju:["Jeollanam-do"],"Gyeonggi-do":["Chungcheongbuk-do","Chungcheongnam-do","Gangwon-do","North Korea_","Incheon","Seoul"],"Gyeongsangbuk-do":["Chungcheongbuk-do","Daegu","Gangwon-do","Gyeongsangnam-do","Jeollabuk-do","Ulsan"],"Gyeongsangnam-do":["Busan","Daegu","Gyeongsangbuk-do","Jeollanam-do","Jeollabuk-do","Ulsan"],Incheon:["Gyeonggi-do","Seoul"],"Jeollanam-do":["Gwangju","Gyeongsangnam-do","Jeollabuk-do"],"Jeollabuk-do":["Chungcheongbuk-do","Chungcheongnam-do","Gyeongsangbuk-do","Gyeongsangnam-do","Jeollanam-do"],"North Korea_":["Gangwon-do","Gyeonggi-do"],Seoul:["Gyeonggi-do","Incheon"],Ulsan:["Busan","Gyeongsangbuk-do","Gyeongsangnam-do"]},"japan-prefectures":{Aichi:["Gifu","Mie","Nagano","Shizuoka"],Akita:["Aomori","Iwate","Miyagi","Yamagata"],Aomori:["Akita","Iwate"],Chiba:["Ibaraki","Saitama","Tokyo"],Ehime:["Kagawa","Kochi","Tokushima"],Fukui:["Gifu","Ishikawa","Kyoto","Shiga"],Fukuoka:["Kumamoto","Oita","Saga"],Fukushima:["Gunma","Ibaraki","Miyagi","Nigata","Tochigi","Yamagata"],Gifu:["Aichi","Fukui","Ishikawa","Mie","Nagano","Shiga","Toyama"],Gunma:["Fukushima","Ibaraki","Nagano","Nigata","Saitama","Tochigi","Yamanashi"],Hiroshima:["Okayama","Shimane","Tottori","Yamaguchi"],Hokkaido:[],Hyogo:["Kyoto","Okayama","Osaka","Tottori"],Ibaraki:["Chiba","Fukushima","Gunma","Saitama","Tochigi"],Ishikawa:["Fukui","Gifu","Toyama"],Iwate:["Akita","Aomori","Miyagi"],Kagawa:["Ehime","Tokushima"],Kagoshima:["Kumamoto","Miyazaki"],Kanagawa:["Shizuoka","Tokyo","Yamanashi"],Kochi:["Ehime","Tokushima"],Kumamoto:["Fukuoka","Kagoshima","Miyazaki","Oita"],Kyoto:["Fukui","Hyogo","Nara","Osaka","Shiga"],Mie:["Aichi","Gifu","Nara","Shiga","Wakayama"],Miyagi:["Akita","Fukushima","Iwate","Yamagata"],Miyazaki:["Kagoshima","Kumamoto","Oita"],Nagano:["Aichi","Gifu","Gunma","Nigata","Saitama","Shizuoka","Toyama","Yamanashi"],Nagasaki:["Saga"],Nara:["Kyoto","Mie","Osaka","Wakayama"],Nigata:["Fukushima","Gunma","Nagano","Toyama","Yamagata"],Oita:["Fukuoka","Kumamoto","Miyazaki"],Okayama:["Hiroshima","Hyogo","Tottori"],Okinawa:[],Osaka:["Hyogo","Kyoto","Nara","Wakayama"],Saga:["Fukuoka","Nagasaki"],Saitama:["Chiba","Gunma","Ibaraki","Nagano","Tokyo","Yamanashi"],Shiga:["Fukui","Gifu","Kyoto","Mie"],Shimane:["Hiroshima","Tottori","Yamaguchi"],Shizuoka:["Aichi","Kanagawa","Nagano","Yamanashi"],Tochigi:["Fukushima","Gunma","Ibaraki"],Tokushima:["Ehime","Kagawa","Kochi"],Tokyo:["Chiba","Kanagawa","Saitama","Yamanashi"],Tottori:["Hiroshima","Hyogo","Okayama","Shimane"],Toyama:["Gifu","Ishikawa","Nagano","Nigata"],Wakayama:["Mie","Nara","Osaka"],Yamagata:["Akita","Fukushima","Miyagi","Nigata"],Yamaguchi:["Hiroshima","Shimane"],Yamanashi:["Gunma","Kanagawa","Nagano","Saitama","Shizuoka","Tokyo"]},"malaysia-states":{Brunei_:["Sarawak"],Indonesia_:["Sabah","Sarawak"],Johor:["Malacca","Negeri Sembilan","Pahang"],Labuan:[],Kedah:["Perak","Penang","Perlis","Thailand_"],Kelantan:["Thailand_","Perak","Terengganu","Pahang"],"Kuala Lumpur":["Selangor"],Malacca:["Negeri Sembilan","Johor"],"Negeri Sembilan":["Pahang","Johor","Malacca","Selangor"],Pahang:["Terengganu","Kelantan","Perak","Selangor","Negeri Sembilan","Johor"],Perak:["Thailand_","Kelantan","Pahang","Selangor","Kedah","Penang"],Perlis:["Thailand_","Kedah"],Penang:["Kedah","Perak"],Putrajaya:["Selangor"],Sabah:["Sarawak","Indonesia_"],Sarawak:["Sabah","Brunei_","Indonesia_"],Selangor:["Kuala Lumpur","Putrajaya","Negeri Sembilan","Pahang","Perak"],Singapore_:[],Terengganu:["Kelantan","Pahang"],Thailand_:["Perlis","Kedah","Perak","Kelantan"]},"indonesia-provinces":{Aceh:["Sumatera Utara"],Bali:[],"Bangka Belitung":[],Banten:["Jakarta","Jawa Barat"],Bengkulu:["Sumatera Barat","Jambi","Sumatera Selatan","Lampung"],Gorontalo:["Sulawesi Utara","Sulawesi Tengah"],Jakarta:["Banten","Jawa Barat"],Jambi:["Riau","Sumatera Barat","Bengkulu","Sumatera Selatan"],"Jawa Barat":["Jakarta","Banten","Jawa Tengah"],"Jawa Tengah":["Jawa Barat","Yogyakarta","Jawa Timur"],"Jawa Timur":["Jawa Tengah"],"Kalimantan Barat":["Malaysia_","Kalimantan Timur","Kalimantan Tengah"],"Kalimantan Selatan":["Kalimantan Timur","Kalimantan Tengah"],"Kalimantan Tengah":["Kalimantan Barat","Kalimantan Timur","Kalimantan Selatan"],"Kalimantan Timur":["Malaysia_","Kalimantan Barat","Kalimantan Tengah","Kalimantan Selatan"],"Kepulauan Riau":[],Lampung:["Sumatera Selatan","Bengkulu"],Malaysia_:["Kalimantan Barat","Kalimantan Timur"],"Maluku Utara":[],Maluku:[],"Nusa Tenggara Barat":[],"Nusa Tenggara Timur":["Timor-Leste_"],"Papua Barat":["Papua"],"Papua New Guinea_":["Papua"],Papua:["Papua Barat","Papua New Guinea_"],Riau:["Sumatera Utara","Sumatera Barat","Jambi"],"Sulawesi Barat":["Sulawesi Tengah","Sulawesi Selatan"],"Sulawesi Selatan":["Sulawesi Barat","Sulawesi Tengah","Sulawesi Tenggara"],"Sulawesi Tengah":["Gorontalo","Sulawesi Barat","Sulawesi Selatan","Sulawesi Tenggara"],"Sulawesi Tenggara":["Sulawesi Tengah","Sulawesi Selatan"],"Sulawesi Utara":["Gorontalo"],"Sumatera Barat":["Riau","Sumatera Utara","Jambi","Bengkulu"],"Sumatera Selatan":["Jambi","Bengkulu","Lampung"],"Sumatera Utara":["Riau","Aceh","Sumatera Barat"],"Timor-Leste_":["Nusa Tenggara Timur"],Yogyakarta:["Jawa Tengah"]},"australia-states":{"Australian Capital Territory":["New South Wales"],"Bass Strait":["Tasmania","Victoria"],"Great Australian Bight":["Western Australia","South Australia"],"New South Wales":["Australian Capital Territory","Queensland","South Australia","Victoria"],"Northern Territory":["Queensland","South Australia","Western Australia"],Queensland:["New South Wales","Northern Territory","South Australia"],"South Australia":["New South Wales","Northern Territory","Queensland","Victoria","Western Australia"],Tasmania:[],Victoria:["New South Wales","South Australia"],"Western Australia":["Northern Territory","South Australia"]},"russia-federal-subjects":{Adygea:["Krasnodar Krai"],"Altai Krai":["Altai Republic","Kazakhstan__","Kemerovo Oblast","Novosibirsk Oblast"],"Altai Republic":["Altai Krai","China___","Kazakhstan__","Kemerovo Oblast","Khakas Autonomous Oblast","Mongolia__","Tuva"],"Amur Oblast":["China___","Jewish Autonomous Oblast","Khabarovsk Krai","Sakha Republic","Zabaykalsky Krai"],"Arkhangelsk Oblast":["Kirov Oblast","Komi Republic","Nenets Autonomous Okrug","Republic of Karelia","Vologda Oblast"],"Astrakhan Oblast":["Kalmykia","Kazakhstan__","Volgograd Oblast"],Azerbaijan_:["Dagestan","Georgia__"],Bashkortostan:["Chelyabinsk Oblast","Orenburg Oblast","Perm Krai","Sverdlovskaya Oblast","Tatarstan","Udmurtia"],Belarus_:["Bryansk Oblast","Latvia_","Lithuania_","Poland_","Pskov Oblast","Smolensk Oblast","Ukraine_"],"Belgorod Oblast":["Kursk Oblast","Ukraine_","Voronezh Oblast"],"Bryansk Oblast":["Belarus_","Kaluga Oblast","Kursk Oblast","Oryol Oblast","Smolensk Oblast","Ukraine_"],Buryatia:["Irkutsk Oblast","Mongolia__","Tuva","Zabaykalsky Krai"],Chechnya:["Dagestan","Georgia__","Ingushetia","North Ossetia-Alania","Stavropol Krai"],"Chelyabinsk Oblast":["Bashkortostan","Kazakhstan__","Kurgan Oblast","Orenburg Oblast","Sverdlovskaya Oblast"],China___:["Altai Republic","Kazakhstan__","North Korea___","Zabaykalsky Krai","Amur Oblast","Jewish Autonomous Oblast","Khabarovsk Krai","Mongolia__","Primorsky Krai"],"Chukotka Autonomous Okrug":["Kamchatka Krai","Magadan Oblast","Sakha Republic"],Chuvashia:["Mari El","Mordovia","Nizhny Novgorod Oblast","Tatarstan","Ulyanovsk Oblast"],Dagestan:["Azerbaijan_","Chechnya","Georgia__","Kalmykia","Stavropol Krai"],Estonia_:["Latvia_","Leningrad Oblast","Pskov Oblast"],Finland_:["Leningrad Oblast","Murmansk Oblast","Norway_","Republic of Karelia"],Georgia__:["Azerbaijan_","Krasnodar Krai","Karachay-Cherkessia","Kabardino-Balkaria","North Ossetia-Alania","Ingushetia","Chechnya","Dagestan"],Ingushetia:["Chechnya","Georgia__","North Ossetia-Alania"],"Irkutsk Oblast":["Buryatia","Krasnoyarsk Krai","Sakha Republic","Tuva","Zabaykalsky Krai"],"Ivanovo Oblast":["Kostroma Oblast","Nizhny Novgorod Oblast","Vladimir Oblast","Yaroslavl Oblast"],"Jewish Autonomous Oblast":["Amur Oblast","China___","Khabarovsk Krai"],"Kabardino-Balkaria":["Georgia__","Karachay-Cherkessia","North Ossetia-Alania","Stavropol Krai"],"Kaliningrad Oblast":["Lithuania_","Poland_"],Kalmykia:["Astrakhan Oblast","Dagestan","Rostov Oblast","Stavropol Krai","Volgograd Oblast"],"Kaluga Oblast":["Bryansk Oblast","Moscow Oblast","Oryol Oblast","Smolensk Oblast","Tula Oblast"],"Kamchatka Krai":["Chukotka Autonomous Okrug","Magadan Oblast"],"Karachay-Cherkessia":["Georgia__","Kabardino-Balkaria","Krasnodar Krai","Stavropol Krai"],Kazakhstan__:["Astrakhan Oblast","China___","Volgograd Oblast","Saratov Oblast","Orenburg Oblast","Chelyabinsk Oblast","Kurgan Oblast","Tyumen Oblast","Omsk Oblast","Novosibirsk Oblast","Altai Krai","Altai Republic"],"Kemerovo Oblast":["Altai Krai","Altai Republic","Khakas Autonomous Oblast","Krasnoyarsk Krai","Novosibirsk Oblast","Tomsk Oblast"],"Khabarovsk Krai":["Amur Oblast","China___","Jewish Autonomous Oblast","Magadan Oblast","Primorsky Krai","Sakha Republic"],"Khakas Autonomous Oblast":["Altai Republic","Kemerovo Oblast","Krasnoyarsk Krai","Tuva"],"Khanty-Mansi Autonomous Okrug":["Komi Republic","Krasnoyarsk Krai","Sverdlovskaya Oblast","Tomsk Oblast","Tyumen Oblast","Yamalo-Nenets Autonomous Okrug"],"Kirov Oblast":["Arkhangelsk Oblast","Komi Republic","Kostroma Oblast","Mari El","Nizhny Novgorod Oblast","Perm Krai","Tatarstan","Udmurtia","Vologda Oblast"],"Komi Republic":["Arkhangelsk Oblast","Khanty-Mansi Autonomous Okrug","Kirov Oblast","Nenets Autonomous Okrug","Perm Krai","Sverdlovskaya Oblast","Yamalo-Nenets Autonomous Okrug"],"Kostroma Oblast":["Ivanovo Oblast","Kirov Oblast","Nizhny Novgorod Oblast","Vologda Oblast","Yaroslavl Oblast"],"Krasnodar Krai":["Adygea","Georgia__","Karachay-Cherkessia","Rostov Oblast","Stavropol Krai","Ukraine_"],"Krasnoyarsk Krai":["Irkutsk Oblast","Kemerovo Oblast","Khakas Autonomous Oblast","Khanty-Mansi Autonomous Okrug","Sakha Republic","Tomsk Oblast","Tuva","Yamalo-Nenets Autonomous Okrug"],"Kurgan Oblast":["Chelyabinsk Oblast","Kazakhstan__","Sverdlovskaya Oblast","Tyumen Oblast"],"Kursk Oblast":["Belgorod Oblast","Bryansk Oblast","Lipetsk Oblast","Oryol Oblast","Ukraine_","Voronezh Oblast"],Latvia_:["Belarus_","Estonia_","Lithuania_","Pskov Oblast"],"Leningrad Oblast":["Estonia_","Finland_","Novgorod Oblast","Pskov Oblast","Republic of Karelia","Saint Petersburg","Vologda Oblast"],"Lipetsk Oblast":["Kursk Oblast","Oryol Oblast","Ryazan Oblast","Tambov Oblast","Tula Oblast","Voronezh Oblast"],Lithuania_:["Belarus_","Kaliningrad Oblast","Latvia_","Poland_"],"Magadan Oblast":["Chukotka Autonomous Okrug","Kamchatka Krai","Khabarovsk Krai","Sakha Republic"],"Mari El":["Chuvashia","Kirov Oblast","Nizhny Novgorod Oblast","Tatarstan"],Mongolia__:["Altai Republic","China___","Tuva","Buryatia","Zabaykalsky Krai"],Mordovia:["Chuvashia","Nizhny Novgorod Oblast","Penza Oblast","Ryazan Oblast","Ulyanovsk Oblast"],"Moscow Oblast":["Kaluga Oblast","Ryazan Oblast","Smolensk Oblast","Tula Oblast","Tver Oblast","Vladimir Oblast","Yaroslavl Oblast"],"Murmansk Oblast":["Finland_","Norway_","Republic of Karelia"],"Nenets Autonomous Okrug":["Arkhangelsk Oblast","Komi Republic","Yamalo-Nenets Autonomous Okrug"],"Nizhny Novgorod Oblast":["Chuvashia","Ivanovo Oblast","Kirov Oblast","Kostroma Oblast","Mari El","Mordovia","Ryazan Oblast","Vladimir Oblast"],"North Korea___":["China___","Primorsky Krai"],"North Ossetia-Alania":["Chechnya","Georgia__","Ingushetia","Kabardino-Balkaria","Stavropol Krai"],Norway_:["Finland_","Murmansk Oblast"],"Novgorod Oblast":["Leningrad Oblast","Pskov Oblast","Tver Oblast","Vologda Oblast"],"Novosibirsk Oblast":["Altai Krai","Kazakhstan__","Kemerovo Oblast","Omsk Oblast","Tomsk Oblast"],"Omsk Oblast":["Kazakhstan__","Novosibirsk Oblast","Tomsk Oblast","Tyumen Oblast"],"Orenburg Oblast":["Bashkortostan","Chelyabinsk Oblast","Kazakhstan__","Samara Oblast","Saratov Oblast","Tatarstan"],"Oryol Oblast":["Bryansk Oblast","Kaluga Oblast","Kursk Oblast","Lipetsk Oblast","Tula Oblast"],"Penza Oblast":["Mordovia","Ryazan Oblast","Saratov Oblast","Tambov Oblast","Ulyanovsk Oblast"],"Perm Krai":["Bashkortostan","Kirov Oblast","Komi Republic","Sverdlovskaya Oblast","Udmurtia"],Poland_:["Belarus_","Lithuania_","Kaliningrad Oblast","Ukraine_"],"Primorsky Krai":["China___","Khabarovsk Krai","North Korea___"],"Pskov Oblast":["Belarus_","Estonia_","Latvia_","Leningrad Oblast","Novgorod Oblast","Smolensk Oblast","Tver Oblast"],"Republic of Karelia":["Arkhangelsk Oblast","Finland_","Leningrad Oblast","Murmansk Oblast","Vologda Oblast"],"Rostov Oblast":["Kalmykia","Krasnodar Krai","Stavropol Krai","Ukraine_","Volgograd Oblast","Voronezh Oblast"],"Ryazan Oblast":["Lipetsk Oblast","Mordovia","Moscow Oblast","Nizhny Novgorod Oblast","Penza Oblast","Tambov Oblast","Tula Oblast","Vladimir Oblast"],"Sakha Republic":["Amur Oblast","Chukotka Autonomous Okrug","Irkutsk Oblast","Khabarovsk Krai","Krasnoyarsk Krai","Magadan Oblast","Zabaykalsky Krai"],"Sakhalin Oblast":[],"Saint Petersburg":["Leningrad Oblast"],"Samara Oblast":["Orenburg Oblast","Saratov Oblast","Tatarstan","Ulyanovsk Oblast"],"Saratov Oblast":["Kazakhstan__","Orenburg Oblast","Penza Oblast","Samara Oblast","Tambov Oblast","Ulyanovsk Oblast","Volgograd Oblast","Voronezh Oblast"],"Smolensk Oblast":["Belarus_","Bryansk Oblast","Kaluga Oblast","Moscow Oblast","Pskov Oblast","Tver Oblast"],"Stavropol Krai":["Chechnya","Dagestan","Kabardino-Balkaria","Kalmykia","Karachay-Cherkessia","Krasnodar Krai","North Ossetia-Alania","Rostov Oblast"],"Sverdlovskaya Oblast":["Bashkortostan","Chelyabinsk Oblast","Khanty-Mansi Autonomous Okrug","Komi Republic","Kurgan Oblast","Perm Krai","Tyumen Oblast"],"Tambov Oblast":["Lipetsk Oblast","Penza Oblast","Ryazan Oblast","Saratov Oblast","Voronezh Oblast"],Tatarstan:["Bashkortostan","Chuvashia","Kirov Oblast","Mari El","Orenburg Oblast","Samara Oblast","Udmurtia","Ulyanovsk Oblast"],"Tomsk Oblast":["Kemerovo Oblast","Khanty-Mansi Autonomous Okrug","Krasnoyarsk Krai","Novosibirsk Oblast","Omsk Oblast","Tyumen Oblast"],"Tula Oblast":["Kaluga Oblast","Lipetsk Oblast","Moscow Oblast","Oryol Oblast","Ryazan Oblast"],Tuva:["Altai Republic","Buryatia","Irkutsk Oblast","Khakas Autonomous Oblast","Krasnoyarsk Krai","Mongolia__"],"Tver Oblast":["Moscow Oblast","Novgorod Oblast","Pskov Oblast","Smolensk Oblast","Vologda Oblast","Yaroslavl Oblast"],"Tyumen Oblast":["Kazakhstan__","Khanty-Mansi Autonomous Okrug","Kurgan Oblast","Omsk Oblast","Sverdlovskaya Oblast","Tomsk Oblast"],Udmurtia:["Bashkortostan","Kirov Oblast","Perm Krai","Tatarstan"],Ukraine_:["Belarus_","Belgorod Oblast","Bryansk Oblast","Krasnodar Krai","Kursk Oblast","Poland_","Rostov Oblast","Voronezh Oblast"],"Ulyanovsk Oblast":["Chuvashia","Mordovia","Penza Oblast","Samara Oblast","Saratov Oblast","Tatarstan"],"Vladimir Oblast":["Ivanovo Oblast","Moscow Oblast","Nizhny Novgorod Oblast","Ryazan Oblast","Yaroslavl Oblast"],"Volgograd Oblast":["Astrakhan Oblast","Kalmykia","Kazakhstan__","Rostov Oblast","Saratov Oblast","Voronezh Oblast"],"Vologda Oblast":["Arkhangelsk Oblast","Kirov Oblast","Kostroma Oblast","Leningrad Oblast","Novgorod Oblast","Republic of Karelia","Tver Oblast","Yaroslavl Oblast"],"Voronezh Oblast":["Belgorod Oblast","Kursk Oblast","Lipetsk Oblast","Rostov Oblast","Saratov Oblast","Tambov Oblast","Ukraine_","Volgograd Oblast"],"Yamalo-Nenets Autonomous Okrug":["Khanty-Mansi Autonomous Okrug","Komi Republic","Krasnoyarsk Krai","Nenets Autonomous Okrug"],"Yaroslavl Oblast":["Ivanovo Oblast","Kostroma Oblast","Moscow Oblast","Tver Oblast","Vladimir Oblast","Vologda Oblast"],"Zabaykalsky Krai":["Amur Oblast","Buryatia","China___","Irkutsk Oblast","Mongolia__","Sakha Republic"]},"ukraine-provinces":{Belarus__:["Volyn","Rivne","Zhytomyr","Kiev Oblast","Chernihiv","Russia__","Poland___"],Cherkasy:["Kiev Oblast","Poltava","Kirovohrad","Vinnytsya"],Chernihiv:["Sumy","Poltava","Kiev Oblast","Belarus__","Russia__"],Chernivtsi:["Ivano-Frankivsk","Ternopil","Khmelnytskyi","Vinnytsya","Moldova_","Romania_"],Crimea:["Kherson","Sevastopol"],Dnipropetrovsk:["Zaporizhia","Donetsk","Kharkiv","Poltava","Kirovohrad","Mykolayiv","Kherson"],Donetsk:["Russia__","Luhansk","Kharkiv","Dnipropetrovsk","Zaporizhia"],Hungary_:["Zakarpattia","Slovakia_","Romania_"],"Ivano-Frankivsk":["Lviv","Ternopil","Zakarpattia","Chernivtsi","Romania_"],Kharkiv:["Russia__","Sumy","Poltava","Dnipropetrovsk","Donetsk","Luhansk"],Kherson:["Zaporizhia","Crimea","Mykolayiv","Dnipropetrovsk"],Khmelnytskyi:["Rivne","Zhytomyr","Vinnytsya","Chernivtsi","Ternopil"],Kiev:["Kiev Oblast"],"Kiev Oblast":["Kiev","Chernihiv","Poltava","Cherkasy","Vinnytsya","Zhytomyr","Belarus__"],Kirovohrad:["Cherkasy","Poltava","Dnipropetrovsk","Mykolayiv","Odessa","Vinnytsya"],Luhansk:["Russia__","Kharkiv","Donetsk"],Lviv:["Volyn","Rivne","Ternopil","Ivano-Frankivsk","Zakarpattia","Poland___"],Moldova_:["Chernivtsi","Vinnytsya","Odessa","Romania_"],Mykolayiv:["Kirovohrad","Dnipropetrovsk","Kherson","Odessa"],Odessa:["Moldova_","Romania_","Vinnytsya","Kirovohrad","Mykolayiv"],Poland___:["Zakarpattia","Lviv","Volyn","Slovakia_","Belarus__"],Poltava:["Chernihiv","Sumy","Kharkiv","Dnipropetrovsk","Kirovohrad","Cherkasy","Kiev Oblast"],Rivne:["Volyn","Lviv","Ternopil","Khmelnytskyi","Zhytomyr","Belarus__"],Romania_:["Moldova_","Odessa","Hungary_","Chernivtsi","Ivano-Frankivsk","Zakarpattia"],Russia__:["Belarus__","Chernihiv","Sumy","Kharkiv","Luhansk","Donetsk"],Sevastopol:["Crimea"],Slovakia_:["Zakarpattia","Hungary_","Poland___"],Sumy:["Russia__","Chernihiv","Poltava","Kharkiv"],Ternopil:["Khmelnytskyi","Chernivtsi","Ivano-Frankivsk","Lviv","Rivne"],Vinnytsya:["Khmelnytskyi","Zhytomyr","Kiev Oblast","Cherkasy","Kirovohrad","Odessa","Moldova_","Chernivtsi"],Volyn:["Rivne","Lviv","Poland___","Belarus__"],Zakarpattia:["Lviv","Poland___","Ivano-Frankivsk","Romania_","Hungary_","Slovakia_"],Zaporizhia:["Donetsk","Dnipropetrovsk","Kherson"],Zhytomyr:["Kiev Oblast","Vinnytsya","Khmelnytskyi","Rivne","Belarus__"]},"poland-provinces":{Belarus___:["Lithuania__","Ukraine__","Podlachian","Lublin"],Czechia__:["Lower Silesian","Opole","Silesian","Germany__","Slovakia__"],Germany__:["West Pomeranian","Lubusz","Lower Silesian","Czechia__"],"Greater Poland":["Pomeranian","Kuyavian-Pomeranian","LÃ³dÅº","Opole","Lower Silesian","Lubusz","West Pomeranian"],"Kuyavian-Pomeranian":["Warmian-Masurian","Masovian","LÃ³dÅº","Greater Poland","Pomeranian"],"Lesser Poland":["Subcarpathian","Swietokrzyskie","Silesian","Slovakia__"],Lithuania__:["Belarus___","Russia___","Podlachian","Warmian-Masurian"],"Lower Silesian":["Lubusz","Greater Poland","Opole","Czechia__","Germany__"],Lublin:["Belarus___","Ukraine__","Podlachian","Masovian","Swietokrzyskie","Subcarpathian"],Lubusz:["West Pomeranian","Greater Poland","Lower Silesian","Germany__"],"LÃ³dÅº":["Kuyavian-Pomeranian","Masovian","Swietokrzyskie","Silesian","Opole","Greater Poland"],Masovian:["Warmian-Masurian","Podlachian","Lublin","Swietokrzyskie","LÃ³dÅº","Kuyavian-Pomeranian"],Opole:["Greater Poland","LÃ³dÅº","Silesian","Czechia__","Lower Silesian"],Podlachian:["Warmian-Masurian","Lithuania__","Belarus___","Lublin","Masovian"],Pomeranian:["Warmian-Masurian","Kuyavian-Pomeranian","Greater Poland","West Pomeranian"],Russia___:["Warmian-Masurian","Lithuania__"],Silesian:["LÃ³dÅº","Swietokrzyskie","Lesser Poland","Slovakia__","Czechia__","Opole"],Slovakia__:["Czechia__","Ukraine__","Silesian","Lesser Poland","Subcarpathian"],Subcarpathian:["Ukraine__","Slovakia__","Lublin","Swietokrzyskie","Lesser Poland"],Swietokrzyskie:["Lublin","Subcarpathian","Masovian","Lesser Poland","Silesian","LÃ³dÅº"],Ukraine__:["Belarus___","Slovakia__","Lublin","Subcarpathian"],"Warmian-Masurian":["Lithuania__","Russia___","Podlachian","Masovian","Kuyavian-Pomeranian","Pomeranian"],"West Pomeranian":["Pomeranian","Greater Poland","Lubusz","Germany__"]},"germany-states":{Austria_:["Baden-WÃ¼rttemberg","Czechia_","Switzerland_","Bavaria"],"Baden-WÃ¼rttemberg":["Austria_","Switzerland_","France_","Rhineland-Palatinate","Hesse","Bavaria"],Bavaria:["Austria_","Czechia_","Switzerland_","Baden-WÃ¼rttemberg","Hesse","Thuringia","Saxony"],Belgium_:["France_","Netherlands_","Luxembourg_","North Rhine-Westphalia","Rhineland-Palatinate"],Berlin:["Brandenburg"],Brandenburg:["Berlin","Poland__","Mecklenburg-West Pomerania","Lower Saxony","Saxony-Anhalt","Saxony"],Bremen:["Lower Saxony"],Czechia_:["Austria_","Poland__","Bavaria","Saxony"],Denmark_:["Schleswig-Holstein"],France_:["Belgium_","Luxembourg_","Saarland","Rhineland-Palatinate","Baden-WÃ¼rttemberg","Switzerland_"],Hamburg:["Lower Saxony","Schleswig-Holstein"],Hesse:["Lower Saxony","North Rhine-Westphalia","Rhineland-Palatinate","Baden-WÃ¼rttemberg","Bavaria","Thuringia"],Luxembourg_:["Rhineland-Palatinate","Saarland","France_","Belgium_"],"Lower Saxony":["Bremen","Netherlands_","North Rhine-Westphalia","Hesse","Thuringia","Saxony-Anhalt","Brandenburg","Mecklenburg-West Pomerania","Schleswig-Holstein","Hamburg"],"Mecklenburg-West Pomerania":["Brandenburg","Poland__","Schleswig-Holstein","Lower Saxony"],Netherlands_:["Belgium_","North Rhine-Westphalia","Lower Saxony"],"North Rhine-Westphalia":["Hesse","Lower Saxony","Rhineland-Palatinate","Netherlands_","Belgium_"],Poland__:["Czechia_","Saxony","Brandenburg","Mecklenburg-West Pomerania"],"Rhineland-Palatinate":["Luxembourg_","Hesse","North Rhine-Westphalia","Saarland","Baden-WÃ¼rttemberg","Belgium_","France_"],Saarland:["Rhineland-Palatinate","France_","Luxembourg_"],Saxony:["Czechia_","Brandenburg","Poland__","Saxony-Anhalt","Thuringia","Bavaria"],"Saxony-Anhalt":["Saxony","Brandenburg","Lower Saxony","Thuringia"],"Schleswig-Holstein":["Denmark_","Hamburg","Lower Saxony","Mecklenburg-West Pomerania"],Switzerland_:["Austria_","France_","Bavaria","Baden-WÃ¼rttemberg"],Thuringia:["Bavaria","Hesse","Lower Saxony","Saxony-Anhalt","Saxony"]},"italy-regions":{Abruzzo:["Molise","Lazio","Marche"],Apulia:["Molise","Campania","Basilicata"],Austria__:["Switzerland___","Slovenia_","Trentino-Alto Adige","Veneto","Friuli-Venezia Giulia"],Basilicata:["Apulia","Calabria","Campania"],Calabria:["Basilicata"],Campania:["Basilicata","Apulia","Molise","Lazio"],"Emilia-Romagna":["Veneto","Marche","San Marino_","Tuscany","Liguria","Piemonte","Lombardia"],France___:["Switzerland___","Valle d'Aosta","Piemonte","Liguria"],"Friuli-Venezia Giulia":["Veneto","Slovenia_","Austria__"],Lazio:["Tuscany","Vatican City_","Umbria","Marche","Abruzzo","Molise","Campania"],Liguria:["Piemonte","Emilia-Romagna","Tuscany","France___"],Lombardia:["Trentino-Alto Adige","Veneto","Emilia-Romagna","Piemonte","Switzerland___"],Marche:["San Marino_","Emilia-Romagna","Tuscany","Umbria","Lazio","Abruzzo"],Molise:["Abruzzo","Lazio","Campania","Apulia"],Piemonte:["France___","Valle d'Aosta","Switzerland___","Lombardia","Liguria","Emilia-Romagna"],"San Marino_":["Emilia-Romagna","Marche"],Sardinia:[],Sicily:[],Slovenia_:["Austria__","Friuli-Venezia Giulia"],Switzerland___:["France___","Austria__","Trentino-Alto Adige","Lombardia","Piemonte","Valle d'Aosta"],Tuscany:["Liguria","Emilia-Romagna","Marche","Umbria","Lazio"],"Trentino-Alto Adige":["Veneto","Lombardia","Austria__","Switzerland___"],Umbria:["Marche","Lazio","Tuscany"],"Valle d'Aosta":["Piemonte","France___","Switzerland___"],"Vatican City_":["Lazio"],Veneto:["Friuli-Venezia Giulia","Austria__","Trentino-Alto Adige","Lombardia","Emilia-Romagna"]},"france-regions":{Alsace:["Germany_","Switzerland__","Lorraine","Franche-ComtÃ©"],Andorra_:["Midi-PyrÃ©nÃ©es","Languedoc-Roussillon","Spain_"],Aquitaine:["Poitou-Charentes","Limousin","Midi-PyrÃ©nÃ©es","Spain_"],Auvergne:["Centre-Val de Loire","Bourgogne","RhÃ´ne-Alpes","Languedoc-Roussillon","Midi-PyrÃ©nÃ©es","Limousin"],"Basse-Normandie":["Haute-Normandie","Centre-Val de Loire","Bretagne","Pays de la Loire"],Belgium__:["Luxembourg__","Nord-Pas-de-Calais","Picardie","Germany_","Champagne-Ardenne","Lorraine"],Bourgogne:["Ãle-de-France","Champagne-Ardenne","Franche-ComtÃ©","RhÃ´ne-Alpes","Auvergne","Centre-Val de Loire"],Bretagne:["Basse-Normandie","Pays de la Loire"],"Centre-Val de Loire":["Basse-Normandie","Haute-Normandie","Ãle-de-France","Bourgogne","Auvergne","Limousin","Poitou-Charentes","Pays de la Loire"],"Champagne-Ardenne":["Belgium__","Picardie","Ãle-de-France","Bourgogne","Franche-ComtÃ©","Lorraine"],Corsica:[],"Franche-ComtÃ©":["Switzerland__","Alsace","Lorraine","Champagne-Ardenne","Bourgogne","RhÃ´ne-Alpes"],Germany_:["Switzerland__","Alsace","Lorraine","Luxembourg__","Belgium__"],"Haute-Normandie":["Basse-Normandie","Centre-Val de Loire","Ãle-de-France","Picardie"],Italy_:["Provence-Alpes-CÃ´te d'Azur","RhÃ´ne-Alpes","Switzerland__"],"Languedoc-Roussillon":["Andorra_","Spain_","Midi-PyrÃ©nÃ©es","Auvergne","RhÃ´ne-Alpes","Provence-Alpes-CÃ´te d'Azur"],Limousin:["Poitou-Charentes","Centre-Val de Loire","Auvergne","Midi-PyrÃ©nÃ©es","Aquitaine"],Lorraine:["Belgium__","Luxembourg__","Germany_","Alsace","Franche-ComtÃ©","Champagne-Ardenne"],Luxembourg__:["Belgium__","Germany_","Lorraine"],"Midi-PyrÃ©nÃ©es":["Aquitaine","Limousin","Auvergne","Languedoc-Roussillon","Andorra_","Spain_"],Monaco_:["Provence-Alpes-CÃ´te d'Azur"],"Nord-Pas-de-Calais":["Picardie","Belgium__"],"Pays de la Loire":["Bretagne","Basse-Normandie","Centre-Val de Loire","Poitou-Charentes"],Picardie:["Belgium__","Nord-Pas-de-Calais","Haute-Normandie","Ãle-de-France","Champagne-Ardenne"],"Poitou-Charentes":["Pays de la Loire","Centre-Val de Loire","Limousin","Aquitaine"],"Provence-Alpes-CÃ´te d'Azur":["Languedoc-Roussillon","Monaco_","RhÃ´ne-Alpes","Italy_"],"RhÃ´ne-Alpes":["Switzerland__","Italy_","Franche-ComtÃ©","Bourgogne","Auvergne","Languedoc-Roussillon","Provence-Alpes-CÃ´te d'Azur"],Spain_:["Andorra_","Aquitaine","Midi-PyrÃ©nÃ©es","Languedoc-Roussillon"],Switzerland__:["RhÃ´ne-Alpes","Franche-ComtÃ©","Alsace","Italy_","Germany_"],"Ãle-de-France":["Picardie","Champagne-Ardenne","Bourgogne","Haute-Normandie","Centre-Val de Loire"]},"spain-autonomous-communities":{Andalusia:["Murcia_","United Kingdom (Gibraltar)_","CastillaâLa Mancha","Extremadura","Portugal__"],Andorra___:["Catalonia","France____"],Aragon:["Navarra_","La Rioja_","Castile and LeÃ³n","CastillaâLa Mancha","Valencia_","Catalonia","France____"],Asturias_:["Galicia","Castile and LeÃ³n","Cantabria_"],"Balearic Islands":[],"Basque Country":["Cantabria_","Castile and LeÃ³n","La Rioja_","Navarra_","France____"],"Canary Islands":[],Cantabria_:["Asturias_","Castile and LeÃ³n","Basque Country"],"Castile and LeÃ³n":["Galicia","Asturias_","Cantabria_","Basque Country","La Rioja_","Aragon","CastillaâLa Mancha","Madrid_","Extremadura","Portugal__"],"CastillaâLa Mancha":["Madrid_","Extremadura","Castile and LeÃ³n","Aragon","Valencia_","Murcia_","Andalusia"],Catalonia:["Andorra___","France____","Aragon","Valencia_"],Ceuta_:["Morocco__"],Extremadura:["Castile and LeÃ³n","CastillaâLa Mancha","Andalusia","Portugal__"],France____:["Basque Country","Navarra_","Aragon","Catalonia","Andorra___"],Galicia:["Asturias_","Castile and LeÃ³n","Portugal__"],"United Kingdom (Gibraltar)_":["Andalusia"],"La Rioja_":["Basque Country","Navarra_","Aragon","Castile and LeÃ³n"],Madrid_:["Castile and LeÃ³n","CastillaâLa Mancha"],Melilla_:["Morocco__"],Morocco__:["Ceuta_","Melilla_"],Murcia_:["Valencia_","CastillaâLa Mancha","Andalusia"],Navarra_:["France____","Aragon","La Rioja_","Basque Country"],Portugal__:["Galicia","Castile and LeÃ³n","Extremadura","Andalusia"],Valencia_:["Catalonia","Aragon","CastillaâLa Mancha","Murcia_"]},"ireland-counties":{Carlow:["Wicklow","Wexford","Kilkenny","Laois","Kildare"],Cavan:["United Kingdom_","Monaghan","Meath","Westmeath","Longford","Leitrim"],Clare:["Galway","Tipperary","Limerick","Kerry"],Cork:["Kerry","Limerick","Tipperary","Waterford"],Donegal:["Leitrim","United Kingdom_"],Dublin:["Meath","Kildare","Wicklow"],Galway:["Mayo","Roscommon","Offaly","Tipperary","Clare"],Kerry:["Clare","Limerick","Cork"],Kildare:["Meath","Dublin","Wicklow","Carlow","Laois","Offaly"],Kilkenny:["Laois","Carlow","Wexford","Waterford","Tipperary"],Laois:["Offaly","Kildare","Carlow","Kilkenny","Tipperary"],Leitrim:["United Kingdom_","Donegal","Sligo","Roscommon","Longford","Cavan"],Limerick:["Clare","Tipperary","Cork","Kerry"],Longford:["Cavan","Westmeath","Roscommon","Leitrim"],Louth:["Monaghan","Meath","United Kingdom_"],Mayo:["Sligo","Roscommon","Galway"],Meath:["Louth","Monaghan","Cavan","Westmeath","Offaly","Kildare","Dublin"],Monaghan:["Louth","Meath","Cavan","United Kingdom_"],Offaly:["Westmeath","Meath","Kildare","Laois","Tipperary","Galway","Roscommon"],Roscommon:["Leitrim","Longford","Westmeath","Offaly","Galway","Mayo","Sligo"],Sligo:["Mayo","Roscommon","Leitrim"],Tipperary:["Laois","Kilkenny","Waterford","Cork","Limerick","Clare","Galway","Offaly"],"United Kingdom_":["Donegal","Leitrim","Cavan","Monaghan","Louth"],Waterford:["Kilkenny","Wexford","Tipperary","Cork"],Westmeath:["Cavan","Meath","Offaly","Roscommon","Longford"],Wexford:["Wicklow","Carlow","Kilkenny","Waterford"],Wicklow:["Dublin","Kildare","Carlow","Wexford"]},"england-ceremonial-counties":{Bedfordshire:["Cambridgeshire","Northamptonshire","Buckinghamshire","Hertfordshire"],Berkshire:["Wiltshire","Oxfordshire","Buckinghamshire","Greater London","Surrey","Hampshire"],Bristol:["Gloucestershire","Somerset"],Buckinghamshire:["Northamptonshire","Bedfordshire","Hertfordshire","Greater London","Berkshire","Oxfordshire"],Cambridgeshire:["Lincolnshire","Rutland","Norfolk","Suffolk","Essex","Hertfordshire","Bedfordshire","Northamptonshire"],Cheshire:["Merseyside","Wales","Greater Manchester","Derbyshire","Staffordshire","Shropshire"],"City of London":["Greater London"],Cornwall:["Devon"],"County Durham":["Tyne and Wear","Northumberland","Cumbria","North Yorkshire"],Cumbria:["Scotland","Northumberland","County Durham","North Yorkshire","Lancashire"],Derbyshire:["Cheshire","Greater Manchester","West Yorkshire","South Yorkshire","Nottinghamshire","Leicestershire","Staffordshire"],Devon:["Cornwall","Somerset","Dorset"],Dorset:["Devon","Somerset","Wiltshire","Hampshire"],"East Riding of Yorkshire":["North Yorkshire","South Yorkshire","Lincolnshire"],"East Sussex":["Kent","Surrey","West Sussex"],Essex:["Suffolk","Cambridgeshire","Hertfordshire","Greater London","Kent"],Gloucestershire:["Bristol","Wales","Somerset","Wiltshire","Oxfordshire","Warwickshire","Worcestershire","Herefordshire"],"Greater London":["City of London","Buckinghamshire","Hertfordshire","Essex","Kent","Surrey","Berkshire"],"Greater Manchester":["West Yorkshire","Derbyshire","Cheshire","Merseyside","Lancashire"],Hampshire:["Dorset","Wiltshire","Berkshire","Surrey","West Sussex"],Herefordshire:["Shropshire","Wales","Worcestershire","Gloucestershire"],Hertfordshire:["Bedfordshire","Cambridgeshire","Essex","Greater London","Buckinghamshire"],"Isle of Wight":[],Kent:["Essex","Greater London","Surrey","East Sussex"],Lancashire:["Cumbria","North Yorkshire","West Yorkshire","Greater Manchester","Merseyside"],Leicestershire:["Derbyshire","Nottinghamshire","Lincolnshire","Rutland","Northamptonshire","Warwickshire","Staffordshire"],Lincolnshire:["East Riding of Yorkshire","South Yorkshire","Nottinghamshire","Leicestershire","Rutland","Northamptonshire","Cambridgeshire","Norfolk"],Merseyside:["Greater Manchester","Lancashire","Cheshire"],Norfolk:["Lincolnshire","Cambridgeshire","Suffolk"],Northamptonshire:["Rutland","Lincolnshire","Cambridgeshire","Bedfordshire","Buckinghamshire","Oxfordshire","Warwickshire","Leicestershire"],Northumberland:["Scotland","Cumbria","County Durham","Tyne and Wear"],"North Yorkshire":["East Riding of Yorkshire","South Yorkshire","West Yorkshire","Lancashire","Cumbria","County Durham"],Nottinghamshire:["South Yorkshire","Lincolnshire","Leicestershire","Derbyshire"],Oxfordshire:["Gloucestershire","Warwickshire","Northamptonshire","Buckinghamshire","Berkshire","Wiltshire"],Rutland:["Leicestershire","Lincolnshire","Cambridgeshire","Northamptonshire"],Scotland:["Northumberland","Cumbria"],Shropshire:["Cheshire","Wales","Staffordshire","Worcestershire","Herefordshire"],Somerset:["Devon","Dorset","Wiltshire","Gloucestershire","Bristol"],"South Yorkshire":["West Yorkshire","North Yorkshire","East Riding of Yorkshire","Lincolnshire","Nottinghamshire","Derbyshire"],Staffordshire:["Derbyshire","Leicestershire","Warwickshire","West Midlands","Worcestershire","Shropshire","Cheshire"],Suffolk:["Essex","Cambridgeshire","Norfolk"],Surrey:["Berkshire","Greater London","Kent","East Sussex","West Sussex","Hampshire"],"Tyne and Wear":["Northumberland","County Durham"],Wales:["Cheshire","Shropshire","Herefordshire","Gloucestershire"],Warwickshire:["Leicestershire","Northamptonshire","Oxfordshire","Gloucestershire","Worcestershire","West Midlands","Staffordshire"],"West Midlands":["Staffordshire","Warwickshire","Worcestershire"],"West Sussex":["Hampshire","Surrey","East Sussex"],"West Yorkshire":["North Yorkshire","South Yorkshire","Derbyshire","Greater Manchester","Lancashire"],Wiltshire:["Gloucestershire","Oxfordshire","Berkshire","Hampshire","Dorset","Somerset"],Worcestershire:["Shropshire","Staffordshire","West Midlands","Warwickshire","Gloucestershire","Herefordshire"]},countries:{Afghanistan:["China","Iran","Pakistan","Tajikistan","Turkmenistan","Uzbekistan"],Albania:["Greece","Kosovo","Macedonia","Montenegro"],Algeria:["Libya","Mali","Mauritania","Morocco","Niger","Tunisia","Western Sahara"],"Andaman Sea":["India","Myanmar","Thailand","Malaysia","Indonesia"],Andorra:["France","Spain"],Angola:["Democratic Republic of the Congo","Namibia","Republic of the Congo","Zambia"],"Antigua and Barbuda":[],"Arabian Sea":["Somalia","Djibouti","Yemen","Oman","United Arab Emirates","Iran","Pakistan","India"],"Arafura Sea":["Australia","Indonesia","Papua New Guinea"],Argentina:["Bolivia","Brazil","Chile","Paraguay","Uruguay"],Armenia:["Azerbaijan","Georgia","Iran","Turkey"],Australia:[],Austria:["Czechia","Germany","Hungary","Italy","Liechtenstein","Slovakia","Slovenia","Switzerland"],Azerbaijan:["Armenia","Georgia","Iran","Russia","Turkey"],Bahrain:[],"Baltic Sea":["Denmark","Germany","Poland","Russia","Lithuania","Latvia","Estonia","Finland","Sweden"],Bangladesh:["India","Myanmar"],Barbados:[],"Bay of Bengal":["Sri Lanka","India","Bangladesh","Myanmar"],Belarus:["Latvia","Lithuania","Poland","Russia","Ukraine"],Belgium:["France","Germany","Luxembourg","Netherlands"],Belize:["Guatemala","Mexico"],Benin:["Burkina Faso","Niger","Nigeria","Togo"],"Bering Sea":["Russia","United States"],Bhutan:["China","India"],"Black Sea":["Bulgaria","Romania","Ukraine","Russia","Georgia","Turkey"],Bolivia:["Argentina","Brazil","Chile","Paraguay","Peru"],"Bosnia and Herzegovina":["Croatia","Montenegro","Serbia"],Botswana:["Namibia","South Africa","Zambia","Zimbabwe"],Brazil:["Uruguay","Argentina","Paraguay","Bolivia","Peru","Colombia","Venezuela","Guyana","Suriname","French Guiana"],Brunei:["Malaysia"],Bulgaria:["Greece","Macedonia","Romania","Serbia","Turkey"],"Burkina Faso":["Benin","CÃ´te d'Ivoire","Ghana","Mali","Niger","Togo"],Burundi:["Democratic Republic of the Congo","Rwanda","Tanzania"],Cambodia:["Laos","Thailand","Vietnam"],Cameroon:["Central African Republic","Chad","Republic of the Congo","Equatorial Guinea","Gabon","Nigeria"],Canada:["United States"],"Cape Verde":[],"Caribbean Sea":["Mexico","United Kingdom (Cayman Islands)","Cuba","Jamaica","Haiti","Dominican Republic","United States (Puerto Rico)","United Kingdom (Virgin Islands)","United States (Virgin Islands)","United Kingdom (Anguilla)","France (Saint Barthelemy)","France (Guadeloupe)","Netherlands (Antilles)","Saint Kitts and Nevis","Antigua and Barbuda","United Kingdom (Montserrat)","France (Guadeloupe)","Dominica","France (Martinique)","Saint Lucia","Saint Vincent and the Grenadines","Barbados","Grenada","Trinidad and Tobago","Venezuela","Netherlands (Aruba)","Colombia","Panama","Costa Rica","Nicaragua","Honduras","Guatemala","Belize"],"Caspian Sea":["Azerbaijan","Russia","Kazakhstan","Turkmenistan","Iran"],"Celebes Sea":["Indonesia","Malaysia","Philippines"],"Central African Republic":["Cameroon","Chad","Democratic Republic of the Congo","Republic of the Congo","South Sudan","Sudan"],Chad:["Cameroon","Central African Republic","Libya","Niger","Nigeria","Sudan"],Chile:["Argentina","Bolivia","Peru"],China:["Vietnam","Laos","Myanmar","India","Bhutan","Nepal","Pakistan","Afghanistan","Tajikistan","Kyrgyzstan","Kazakhstan","Russia","Mongolia","North Korea"],Colombia:["Brazil","Ecuador","Panama","Peru","Venezuela"],Comoros:[],"Coral Sea":["Australia","Papua New Guinea","Solomon Islands","Vanuatu","France (New Caledonia)"],"Costa Rica":["Nicaragua","Panama"],"CÃ´te d'Ivoire":["Burkina Faso","Ghana","Guinea","Liberia","Mali"],Croatia:["Bosnia and Herzegovina","Hungary","Montenegro","Slovenia","Serbia"],Cuba:[],Cyprus:[],Czechia:["Austria","Germany","Poland","Slovakia"],"Democratic Republic of the Congo":["Angola","Burundi","Central African Republic","Republic of the Congo","Rwanda","South Sudan","Tanzania","Uganda","Zambia"],Denmark:["Germany"],Djibouti:["Eritrea","Ethiopia","Somalia"],Dominica:[],"Dominican Republic":["Haiti"],"East China Sea":["Taiwan","China","South Korea","Japan"],Ecuador:["Colombia","Peru"],Egypt:["Israel","Libya","Palestine","Sudan"],"El Salvador":["Guatemala","Honduras"],"Equatorial Guinea":["Cameroon","Gabon"],Eritrea:["Djibouti","Ethiopia","Sudan"],Estonia:["Latvia","Russia"],Ethiopia:["Djibouti","Eritrea","Kenya","Somalia","South Sudan","Sudan"],Fiji:[],Finland:["Norway","Russia","Sweden"],France:["Andorra","Belgium","Germany","Italy","Luxembourg","Monaco","Spain","Switzerland"],"France (Guadeloupe)":[],"France (Martinique)":[],"France (New Caledonia)":[],"France (Saint Barthelemy)":[],"French Guiana":["Brazil","Suriname"],Gabon:["Cameroon","Equatorial Guinea","Republic of the Congo"],Georgia:["Armenia","Azerbaijan","Russia","Turkey"],Germany:["Austria","Belgium","Czechia","Denmark","France","Luxembourg","Netherlands","Poland","Switzerland"],Ghana:["Burkina Faso","CÃ´te d'Ivoire","Togo"],Greece:["Albania","Bulgaria","Macedonia","Turkey"],Grenada:[],Guatemala:["Belize","El Salvador","Honduras","Mexico"],Guinea:["CÃ´te d'Ivoire","Guinea-Bissau","Liberia","Mali","Senegal","Sierra Leone"],"Guinea-Bissau":["Guinea","Senegal"],"Gulf of Guinea":["Liberia","CÃ´te d'Ivoire","Ghana","Togo","Benin","Nigeria","Cameroon","Equatorial Guinea","Gabon","SÃ£o TomÃ© and Principe","Republic of the Congo","Angola","Democratic Republic of the Congo"],"Gulf of Mexico":["Mexico","United States","Cuba"],"Gulf of Thailand":["Malaysia","Thailand","Cambodia","Vietnam"],Guyana:["Brazil","Suriname","Venezuela"],Haiti:["Dominican Republic"],Honduras:["El Salvador","Guatemala","Nicaragua"],Hungary:["Austria","Croatia","Romania","Serbia","Slovakia","Slovenia","Ukraine"],India:["Bangladesh","Bhutan","China","Myanmar","Nepal","Pakistan"],Indonesia:["Malaysia","Papua New Guinea","Timor-Leste"],Iran:["Afghanistan","Armenia","Azerbaijan","Iraq","Pakistan","Turkey","Turkmenistan"],Iraq:["Iran","Jordan","Kuwait","Saudi Arabia","Syria","Turkey"],Ireland:["United Kingdom"],Israel:["Egypt","Jordan","Lebanon","Palestine","Syria"],Italy:["Austria","France","San Marino","Slovenia","Switzerland","Vatican City"],Jamaica:[],Japan:[],Jordan:["Iraq","Israel","Palestine","Saudi Arabia","Syria"],Kazakhstan:["China","Kyrgyzstan","Russia","Turkmenistan","Uzbekistan"],Kenya:["Ethiopia","Somalia","South Sudan","Tanzania","Uganda"],Kosovo:["Albania","Macedonia","Montenegro","Serbia"],Kuwait:["Iraq","Saudi Arabia"],Kyrgyzstan:["China","Kazakhstan","Tajikistan","Uzbekistan"],"Labrador Sea":["Canada","Greenland"],"Lake Malawi":["Tanzania","Malawi","Mozambique"],"Lake Tanganyika":["Burundi","Democratic Republic of the Congo","Zambia","Tanzania"],"Lake Victoria":["Kenya","Tanzania","Uganda"],Laos:["Cambodia","China","Myanmar","Thailand","Vietnam"],Latvia:["Belarus","Estonia","Lithuania","Russia"],Lebanon:["Israel","Syria"],Lesotho:["South Africa"],Liberia:["CÃ´te d'Ivoire","Guinea","Sierra Leone"],Libya:["Algeria","Chad","Egypt","Niger","Sudan","Tunisia"],Liechtenstein:["Austria","Switzerland"],Lithuania:["Belarus","Latvia","Poland","Russia"],Luxembourg:["Belgium","France","Germany"],Macedonia:["Albania","Bulgaria","Greece","Kosovo","Serbia"],Madagascar:[],Malawi:["Mozambique","Tanzania","Zambia"],Malaysia:["Brunei","Indonesia","Thailand"],Mali:["Algeria","Burkina Faso","CÃ´te d'Ivoire","Guinea","Mauritania","Niger","Senegal"],Maldives:[],Malta:[],Mauritania:["Algeria","Mali","Senegal","Western Sahara"],Mauritius:[],"Mediterranean Sea":["Spain","France","Monaco","Italy","Slovenia","Croatia","Bosnia and Herzegovina","Montenegro","Albania","Greece","Turkey","Cyprus","Syria","Lebanon","Israel","Palestine","Egypt","Libya","Malta","Tunisia","Algeria","Morocco"],Mexico:["Belize","Guatemala","United States"],Moldova:["Romania","Ukraine"],Monaco:["France"],Mongolia:["China","Russia"],Montenegro:["Albania","Bosnia and Herzegovina","Croatia","Serbia","Kosovo"],Morocco:["Algeria","Spain","Western Sahara"],Mozambique:["Malawi","South Africa","Swaziland","Tanzania","Zambia","Zimbabwe"],Myanmar:["Bangladesh","China","India","Laos","Thailand"],Namibia:["Angola","Botswana","South Africa","Zambia"],Nepal:["China","India"],Netherlands:["Belgium","Germany"],"Netherlands (Antilles)":[],"Netherlands (Aruba)":[],"New Zealand":[],Nicaragua:["Costa Rica","Honduras"],Niger:["Algeria","Benin","Burkina Faso","Chad","Libya","Mali","Nigeria"],Nigeria:["Benin","Cameroon","Chad","Niger"],"North Korea":["China","Russia","South Korea"],"North Sea":["United Kingdom","Norway","Denmark","Germany","Netherlands","Belgium","France"],"Norwegian Sea":["Iceland","Norway"],Norway:["Finland","Russia","Sweden"],Oman:["Saudi Arabia","United Arab Emirates","Yemen"],Palestine:["Egypt","Israel","Jordan"],Pakistan:["Afghanistan","China","India","Iran"],Panama:["Colombia","Costa Rica"],"Papua New Guinea":["Indonesia"],Paraguay:["Argentina","Bolivia","Brazil"],"Persian Gulf":["Iran","Iraq","Kuwait","Saudi Arabia","Bahrain","Qatar","United Arab Emirates","Oman"],Peru:["Bolivia","Brazil","Chile","Colombia","Ecuador"],Philippines:[],Poland:["Belarus","Czechia","Germany","Lithuania","Russia","Slovakia","Ukraine"],Portugal:["Spain"],Qatar:["Saudi Arabia"],"Red Sea":["Djibouti","Eritrea","Sudan","Egypt","Israel","Jordan","Saudi Arabia","Yemen"],"Republic of the Congo":["Angola","Cameroon","Central African Republic","Democratic Republic of the Congo","Gabon"],Romania:["Bulgaria","Hungary","Moldova","Serbia","Ukraine"],Russia:["Norway","Finland","Estonia","Latvia","Lithuania","Poland","Belarus","Ukraine","Georgia","Azerbaijan","Kazakhstan","China","Mongolia","North Korea"],Rwanda:["Burundi","Democratic Republic of the Congo","Tanzania","Uganda"],"Saint Kitts and Nevis":[],"Saint Lucia":[],"Saint Vincent and the Grenadines":[],"San Marino":["Italy"],"SÃ£o TomÃ© and Principe":[],"Saudi Arabia":["Iraq","Jordan","Kuwait","Oman","Qatar","United Arab Emirates","Yemen"],"Sea of Japan":["South Korea","North Korea","Russia","Japan"],Senegal:["The Gambia","Guinea","Guinea-Bissau","Mali","Mauritania"],Serbia:["Bosnia and Herzegovina","Bulgaria","Croatia","Hungary","Kosovo","Macedonia","Montenegro","Romania"],Seychelles:[],"Sierra Leone":["Guinea","Liberia"],Singapore:[],Slovakia:["Austria","Czechia","Hungary","Poland","Ukraine"],Slovenia:["Austria","Croatia","Hungary","Italy"],"Solomon Islands":[],"Solomon Sea":["Papua New Guinea","Solomon Islands"],Somalia:["Djibouti","Ethiopia","Kenya"],"South Africa":["Botswana","Lesotho","Mozambique","Namibia","Swaziland","Zimbabwe"],"South China Sea":["Indonesia","Singapore","Malaysia","Vietnam","China","Taiwan","Philippines","Brunei"],"South Korea":["North Korea"],"South Sudan":["Central African Republic","Democratic Republic of the Congo","Ethiopia","Kenya","Sudan","Uganda"],Spain:["Andorra","France","Morocco","Portugal"],"Sri Lanka":[],Sudan:["Central African Republic","Chad","Egypt","Eritrea","Ethiopia","Libya","South Sudan"],Suriname:["Brazil","French Guiana","Guyana"],Swaziland:["Mozambique","South Africa"],Sweden:["Finland","Norway"],Switzerland:["Austria","France","Germany","Italy","Liechtenstein"],Syria:["Iraq","Israel","Jordan","Lebanon","Turkey"],Taiwan:[],Tajikistan:["Afghanistan","China","Kyrgyzstan","Uzbekistan"],Tanzania:["Burundi","Democratic Republic of the Congo","Kenya","Malawi","Mozambique","Rwanda","Uganda","Zambia"],"Tasman Sea":["Australia","New Zealand"],Thailand:["Cambodia","Laos","Malaysia","Myanmar"],"The Gambia":["Senegal"],"Timor-Leste":["Indonesia"],"Timor Sea":["Australia","Indonesia","Timor-Leste"],Togo:["Benin","Burkina Faso","Ghana"],"Trinidad and Tobago":[],Tunisia:["Algeria","Libya"],Turkey:["Armenia","Azerbaijan","Bulgaria","Georgia","Greece","Iran","Iraq","Syria"],Turkmenistan:["Afghanistan","Iran","Kazakhstan","Uzbekistan"],Uganda:["Democratic Republic of the Congo","Kenya","Rwanda","South Sudan","Tanzania"],Ukraine:["Belarus","Hungary","Moldova","Poland","Romania","Russia","Slovakia"],"United Arab Emirates":["Oman","Saudi Arabia"],"United Kingdom":["Ireland"],"United Kingdom (Anguilla)":[],"United Kingdom (Cayman Islands)":[],"United Kingdom (Montserrat)":[],"United Kingdom (Virgin Islands)":[],"United States":["Canada","Mexico"],"United States (Puerto Rico)":[],"United States (Virgin Islands)":[],Uruguay:["Argentina","Brazil"],Uzbekistan:["Afghanistan","Kazakhstan","Kyrgyzstan","Tajikistan","Turkmenistan"],Vanuatu:[],"Vatican City":["Italy"],Venezuela:["Brazil","Colombia","Guyana"],Vietnam:["Cambodia","China","Laos"],"Western Sahara":["Algeria","Mauritania","Morocco"],"Yellow Sea":["China","North Korea","South Korea"],Yemen:["Oman","Saudi Arabia"],Zambia:["Angola","Botswana","Democratic Republic of the Congo","Malawi","Mozambique","Namibia","Tanzania","Zimbabwe"],Zimbabwe:["Botswana","Mozambique","South Africa","Zambia"]}}},function(e){e.exports={remove_paths_through:["Brazil","Canada_","China","China_","Egypt","Germany","Iran","Italy","Morocco","Nevada_","Russia","Spain","Turkey","United States","United States_"],unless_started_from:["Alaska","Denmark","Portugal","San Marino","Vatican City"],add_possible_answers:{California:["Hawaii"],Cameroon:["SÃ£o TomÃ© and Principe"],China:["Taiwan"],Dorset:["Isle of Wight"],"Equatorial Guinea":["SÃ£o TomÃ© and Principe"],Gabon:["SÃ£o TomÃ© and Principe"],Guinea:["Cape Verde"],"Guinea-Bissau":["Cape Verde"],Hampshire:["Isle of Wight"],India:["Maldives","Sri Lanka"],Indonesia:["Australia","Fiji","New Zealand","Philippines","Singapore"],Israel:["Cyprus"],Italy:["Malta"],Johor:["Singapore_"],Lebanon:["Cyprus"],Libya:["Malta"],Malaysia:["Philippines","Singapore"],Mauritania:["Cape Verde"],Monaco_:["Corsica"],Mozambique:["Comoros","Madagascar","Mauritius","Seychelles"],"New Brunswick":["Prince Edward Island"],"New South Wales":["Tasmania"],Nigeria:["SÃ£o TomÃ© and Principe"],"Nova Scotia":["Prince Edward Island"],"Papua New Guinea":["Fiji"],"Provence-Alpes-CÃ´te d'Azur":["Corsica"],Qatar:["Bahrain"],"Saudi Arabia":["Bahrain"],Senegal:["Cape Verde"],"South Australia":["Tasmania"],Sweden:["Denmark"],Syria:["Cyprus"],Tanzania:["Comoros","Madagascar","Mauritius","Seychelles"],"The Gambia":["Cape Verde"],Tunisia:["Malta"],Turkey:["Cyprus"],"United Arab Emirates":["Bahrain"],Venezuela:["Trinidad and Tobago"],Victoria:["Tasmania"],"West Sussex":["Isle of Wight"]},replace_possible_answers:{Azerbaijan:["Turkmenistan","Iraq","Syria","Afghanistan"],"Bering Sea":["Canada"],Canada:["Greenland"],"Dominican Republic":["Cuba","Jamaica"],Ehime:["Hokkaido","Okinawa"],Finland:["Denmark","Greenland","Iceland"],Haiti:["Cuba","Jamaica"],Ireland:["Belgium","France","Netherlands"],"Kalimantan Timur":["Sulawesi Tengah"],Mongolia:["Kazakhstan"],Morocco_:["CÃ¡diz","Gibraltar"],Morocco__:["Andalusia","United Kingdom (Gibraltar)_"],"North Korea":["Japan"],Norway:["Denmark","Greenland","Iceland"],"Nusa Tenggara Timur":["Maluku"],Papua:["Maluku"],Portugal:["Andorra","France"],Sarawak:["Singapore_"],"Tasman Sea":["Papua New Guinea"],"Timor-Leste_":["Maluku"],Tokushima:["Hokkaido","Okinawa"],"United Kingdom":["Belgium","France","Netherlands"]}}},function(e,a){var n;function t(e){return e<10?"0"+e:e}function i(e){return function(e){var a=Math.round(e/1e3),n=t(Math.floor(a/60/60)),i=t(Math.floor(a/60%60))+":"+t(Math.floor(a%60));return n>0?n+":"+i:i}(Date.now()-e)}Object.assign(a,{time_elapsed:i,start_timer:function(e,a){void 0!=n&&clearInterval(n),n=setInterval(function(){!function(e,a){void 0!=a&&(a.innerHTML=i(e))}(e,a)},1e3)}})},function(e){e.exports={"usa-states":{anthem:'"The Star-Spangled Banner"',click_message:"(Click the states!)",default_zoom_level:5,description:"(U.S. states.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col3+from+1wm55ugZ3RffprAFPRklG254KDInGYwtYy_-5oQQX&viz=MAP&h=false&t=1&l=col3",title:"USA States"},"california-counties":{anthem:'"I Love You, California"',click_message:"(Click the counties!)",default_zoom_level:7,description:"(California's counties.)",geocode_append:" County California",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col4+from+1QxmdyxJWnq5IgFpS5zGv9M1v25l84InpK8y-yY_m&viz=MAP&h=false&t=1&l=col4",title:"California Counties"},"mexico-states":{anthem:'"Mexicanos, al Grito de Guerra"',click_message:"(Click the states!)",default_zoom_level:5,description:"(Mexico's states.)",geocode_append:" Mexico",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col5+from+19KyBvfdcDLNkVwn466Aa9asNfTMsPhwsasNdimAP&viz=MAP&h=false&t=1&l=col5",title:"Mexico States"},"canada-provinces":{anthem:'"O Canada"',click_message:"(Click the provinces!)",default_zoom_level:3,description:"(Canada's provinces.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col4+from+1WLNv__CToy_grFi67jOIKJPmy5KlA0Ihh6j0sW0H&viz=MAP&h=false&t=1&l=col4",title:"Canada Provinces"},"brazil-states":{anthem:'"Ã PÃ¡tria Amada"',click_message:"(Click the states!)",default_zoom_level:4,description:"(Brazil's states.)",geocode_append:" State Brazil",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col3+from+1RUviWSunc98hNoDXYbsNFfZrexdnriZyNnEctaox&viz=MAP&h=false&t=1&l=col3",title:"Brazil States"},"nigeria-states":{anthem:'"Arise, O Compatriots"',click_message:"(Click the states!)",default_zoom_level:6,description:"(Nigeria's states.)",geocode_append:" Nigeria",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col0+from+17IWDPjtStnNVSnuTzKB1wZksNUZ5mu6x-4k5AU-J&viz=MAP&h=false&t=1&l=col0",title:"Nigeria States"},"india-states":{anthem:'"Jana Gana Mana"',click_message:"(Click the states!)",default_zoom_level:5,description:"(India's states.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col3+from+1ic8zKmb8ROuFbiQMLXvdA6u9EPJaJjWq6pyZDC83&viz=MAP&h=false&t=1&l=col3",title:"India States"},"pakistan-provinces":{anthem:'"Qaumi Taranah"',click_message:"(Click the provinces!)",default_zoom_level:5,description:"(Pakistan's provinces.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col0+from+1CFcoHdOuF_S98-v5E8RuFOobTOFYzq6Gz4FfVoK5&viz=MAP&h=false&t=1&l=col0",title:"Pakistan Provinces"},"china-provinces":{anthem:'"Yiyongjun Jinxingqu"',click_message:"(Click the provinces!)",default_zoom_level:5,description:"(China's provinces.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col12+from+1ZpUS_-CvOh40_HaHXJ4TGjfOO0n9VPglLpTtlFg9&viz=MAP&h=false&t=1&l=col12",title:"China Provinces"},"taiwan-counties":{anthem:'"Sanmin Zhuyi"',click_message:"(Click the counties!)",default_zoom_level:8,description:"(Taiwan's counties.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+12zcluwsLcKnPYh42DRReW60ZjZIXNRS8sWkOpv5w&viz=MAP&h=false&t=1&l=col2",title:"Taiwan Counties"},"south-korea-provinces":{anthem:'"Aegukga"',click_message:"(Click the provinces!)",default_zoom_level:7,description:"(South Korea's provinces.)",geocode_append:" South Korea",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+1mXgLcmURA7HTJvsWHchCErieTTykv5xqS9WDWjDA&viz=MAP&h=false&t=1&l=col2",title:"South Korea Provinces"},"japan-prefectures":{anthem:'"Kimigayo"',click_message:"(Click the prefectures!)",default_zoom_level:7,description:"(Japan's prefectures.)",geocode_append:" Japan",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+1e1KEhbC1opeDS1IhQCVCyyR4X9U1D1eVB_gfmIdy&viz=MAP&h=false&t=1&l=col2",title:"Japan Prefectures"},"malaysia-states":{anthem:'"Negaraku"',click_message:"(Click the states!)",default_zoom_level:6,description:"(Malaysia's states.)",geocode_append:" Malaysia",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+1oY7JvyX3rW_yaOwSW-cLkCn7FYOjCnZbJ8OzMB2L&viz=MAP&h=false&t=1&l=col2",title:"Malaysia States"},"indonesia-provinces":{anthem:'"Indonesia Raya"',click_message:"(Click the provinces!)",default_zoom_level:5,description:"(Indonesia's provinces.)",geocode_append:" Indonesia",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col3+from+194aFJNWEGO3l47407GuckyOjzgLdL3qCtVGvlTVT&viz=MAP&h=false&t=1&l=col3",title:"Indonesia Provinces"},"australia-states":{anthem:'"Advance Australia Fair"',click_message:"(Click the states!)",default_zoom_level:4,description:"(Australia's states.)",geocode_append:" Australia",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+1AyYgmyEMeKnAqdAGoeQCfkOROAGAQYnzlzvV92Bo&viz=MAP&h=false&t=1&l=col2",title:"Australia States"},"russia-federal-subjects":{anthem:'"Patrioticheskaya Pesnya"',click_message:"(Click the federal subjects!)",default_zoom_level:4,description:"(Russia's federal subjects.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+1HPB9NFQFQECAii23-N-ZhjptEt2AJMOV7Onwl_Kz&viz=MAP&h=false&t=1&l=col2",title:"Russia Federal Subjects"},"ukraine-provinces":{anthem:'"Shche ne vmerla Ukraina"',click_message:"(Click the provinces!)",default_zoom_level:5,description:"(Ukraine's provinces.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col16+from+1ps0MS1fqxkcmnrGklSD5HEVNCoVTSL8MkhrT4vyl&viz=MAP&h=false&t=1&l=col16",title:"Ukraine Provinces"},"poland-provinces":{anthem:'"Mazurek DÄbrowskiego"',click_message:"(Click the provinces!)",default_zoom_level:5,description:"(Poland's provinces.)",geocode_append:" Poland",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col15+from+1kpY7Sdr0ifJxi_uN9SGcmxg9g36au73ilorUZCCO&viz=MAP&h=false&t=1&l=col15",title:"Poland Provinces"},"germany-states":{anthem:'"Deutschlandlied"',click_message:"(Click the states!)",default_zoom_level:5,description:"(Germany's states.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col0+from+1LJBiyxxI5VmRg5ELJ6wMXIUuxbDf-YsYgkmldZ3V&viz=MAP&h=false&t=1&l=col0",title:"Germany States"},"italy-regions":{anthem:'"Fratelli d\'Italia"',click_message:"(Click the regions!)",default_zoom_level:6,description:"(Italy's regions.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+1smAC5HzCv5KAQ0MOb-80aTGavsZK_rIV-D8yGqdh&viz=MAP&h=false&t=1&l=col2",title:"Italy Regions"},"france-regions":{anthem:'"La Marseillaise"',click_message:"(Click the regions!)",default_zoom_level:5,description:"(France's pre-2016 regions.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col0+from+1muJSWzcqq9Xja9GEsNRGt5oljHJ0WwaKy-Ud7OMg&viz=MAP&h=false&t=1&l=col0",title:"France Regions"},"spain-autonomous-communities":{anthem:'"Marcha Real"',click_message:"(Click the autonomous communities!)",default_zoom_level:5,description:"(Spain's autonomous communities.)",geocode_append:" Spain",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col1+from+1NHEGhx3wWq8PeqmFtY_IEz7ADv4yE3scsQzd9OH-&viz=MAP&h=false&t=1&l=col1",title:"Spain Autonomous Communities"},"england-ceremonial-counties":{anthem:'"God Save the Queen"',click_message:"(Click the counties!)",default_zoom_level:7,description:"(England's ceremonial counties.)",geocode_append:" County England",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+1JXIDp4FOMTOES9t1EuZlSurdA_LgLhhHQK1MhVFa&viz=MAP&h=false&t=1&l=col2",title:"England Ceremonial Counties"},"ireland-counties":{anthem:'"AmhrÃ¡n na bhFiann"',click_message:"(Click the counties!)",default_zoom_level:7,description:"(Ireland's counties.)",geocode_append:" County Ireland",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col2+from+13PyOxVhuAzhyIUFaHaswDcKssO7xtPqDkhqBV2Sm&viz=MAP&h=false&t=1&l=col2",title:"Ireland Counties"},countries:{anthem:'"Pale Blue Dot"',click_message:"(Click the countries!)",default_zoom_level:5,description:"(The world's countries.)",geocode_append:"",map_embed_base_url:"https://fusiontables.google.com/embedviz?q=select+col3+from+1rkqDW9ccbr840fEN9Ao5sq2fVrYXPkirKjnN4oyD&viz=MAP&h=false&t=1&l=col3",title:"World Countries"}}},function(e){e.exports={recenter_map:{Afghanistan_:"FATA Pakistan",Argentina:"Charlone Argentina",Arizona__:"Parker Arizona USA","Atlantic Ocean_":"Surgoinsville Tennessee","Baltic Sea":"Stockholm Sweden",Benin_:"Benin",Brunei_:"Brunei","Burkina Faso":"Tougouri Burkina Faso",Cameroon_:"Cameroon",Chad_:"Chad",China:"Balongxiang China",China_:"Puluge Tibet China",China__:"Gilgit-Baltistan",China___:"Mongolia","Colorado River":"Parker Dam Arizona","Delaware River":"Philadephia Pennsylvania","Democratic Republic of the Congo":"Iteli DRC",Florida:"Rattlesnake Lake Florida","France (New Caledonia)":"New Caledonia",France_:"Burgen Germany",France___:"Solda Italy",France____:"Gazost France",Georgia:"Georgia Country",Georgia_:"Georgia State USA",Georgia__:"Georgia Country",Germany__:"Zlotnik Poland",Gibraltar:"Gibraltar UK","Hudson Bay":"Coats Island Canada",Hunan:"Hunan Province China",India:"Taranga Nepal",India_:"Dharakh India",India__:"Gomo Co Tibet",Indonesia_:"Kalimantan Indonesia",Iran_:"Sefidabeh",Italy:"San Marino",Italy_:"Dosimo Italy",Japan:"Sado Japan",Jordan:"Jordan Country",Kazakhstan:"Shalginskiy Kazakhstan",Kazakhstan_:"Shalginskiy Kazakhstan",Kazakhstan__:"Shalginskiy Kazakhstan",Maldives:"Addu City","Mason-Dixon Line":"Pen Mar Pennsylvania",Mexico__:"Baja California","Mississippi River":"St Louis Missouri","Missouri River":"Omaha Nebraska",Morocco_:"Tangier Morocco",Morocco__:"Tangier Morocco",Myanmar_:"Thabeikkyin Myanmar","Nei Mongol":"Ulaanbadrakh Mongolia",Nevada_:"Tonopah Nevada",Niger_:"Niger","North Korea_":"Cheorwon South Korea",Nunavut:"Baker Lake Nunavut","Ohio River":"Louisville Kentucky",Oregon_:"Scott Bar California","Pacific Ocean":"Cooperstown California","Pacific Ocean_":"Valley Falls Oregon",Pahang:"Kuala Krau",Peru_:"Peru",Portugal_:"Lardosa Portugal",Portugal__:"Lardosa Portugal",Punjab_:"Punjab Pakistan","Republic of the Congo":"Makoua Republic of the Congo","Rio Grande":"El Paso Texas",Riverside:"Palm Desert California",Russia:"Poligus Russia",Russia_:"Ulan Bator",Russia___:"Kaliningrad","Saudi Arabia":"Shaqra University Saudi Arabia",Scotland:"Dumfries Scotland","South Africa":"Bateleur Nature Reserve South Africa","South China Sea":"Spratly Islands",Sudan:"Al Dabbah Sudan",Ukraine__:"Lviv Ukraine","United Kingdom (Gibraltar)_":"Gibraltar UK","United States":"Ballard Missouri","United States_":"Egg Island Manitoba","United States__":"Rincon New Mexico USA",Washington:"Washington State"},truncations_for_mobile:{"Australian Capital Territory":"ACT","Azad Jammu and Kashmir":"AJK","Bosnia and Herzegovina":"Bosnia","Central African Republic":"CAR","Democratic Republic of the Congo":"DRC","Federally Administered Tribal Areas":"FATA","Islamabad Capital Territory":"ICT","Khyber Pakhtunkhwa":"KP","Mediterranean Sea":"Mediterranean","Newfoundland and Labrador":"NL","Northern Territory":"NT","Northwest Territories":"NW Territories","Republic of the Congo":"ROC","SÃ£o TomÃ© and Principe":"SÃ£o TomÃ©","United Arab Emirates":"UAE","United Kingdom (Anguilla)":"Anguilla","United Kingdom (Cayman Islands)":"Cayman Islands","United Kingdom (Montserrat)":"Montserrat","United Kingdom (Virgin Islands)":"UK Virgin Islands","United Kingdom":"UK","United Kingdom_":"UK","United States (Puerto Rico)":"Puerto Rico","United States (Virgin Islands)":"USA Virgin Islands"},should_prepend_the:["Andaman Sea","Arabian Sea","Arafura Sea","Atlantic Ocean_","Australian Capital Territory","Baltic Sea","Basque Country","Bay of Bengal","Bering Sea","Black Sea","Caribbean Sea","Caspian Sea","Celebes Sea","Central African Republic","City of London","Coral Sea","Democratic Republic of the Congo","Dominican Republic","East China Sea","Federally Administered Tribal Areas","Federal Capital Territory","Great Australian Bight","Gulf of California","Gulf of Guinea","Gulf of Mexico","Gulf of Mexico_","Gulf of Thailand","Islamabad Capital Territory","Isle of Wight","Jewish Autonomous Oblast","Labrador Sea","Maldives","Mason-Dixon Line","Mediterranean Sea","Mississippi River","Missouri River","Colorado River","Rio Grande","Ohio River","Delaware River","Netherlands (Antilles)","Netherlands (Aruba)","Netherlands","Netherlands_","North Sea","Norwegian Sea","Northern Territory","Northwest Territories","Pacific Ocean","Pacific Ocean_","Persian Gulf","Philippines","Red Sea","Republic of the Congo","Republic of Karelia","Sakha Republic","Sea of Japan","Solomon Sea","South China Sea","State of Mexico","Tasman Sea","Timor Sea","United Arab Emirates","United Kingdom (Anguilla)","United Kingdom (Cayman Islands)","United Kingdom (Gibraltar)_","United Kingdom (Montserrat)","United Kingdom (Virgin Islands)","United Kingdom","United Kingdom_","United States","United States_","United States__","United States (Alaska)_","United States (Continental)_","United States (Puerto Rico)","United States (Virgin Islands)","West Midlands","Yellow Sea","Yukon Territory"],dont_sort_neighbors:["Atlantic Ocean_","Benin_","Cameroon_","Niger_","Chad_","Arabian Sea","Andaman Sea","Arizona__","Baltic Sea","Bay of Bengal","Black Sea","Brazil","Canada_","Caribbean Sea","Caspian Sea","Celebes Sea","China","Coral Sea","East China Sea","France____","Gulf of California","Gulf of Guinea","Gulf of Mexico","Gulf of Mexico_","Gulf of Thailand","Hudson Bay","Mason-Dixon Line","Mediterranean Sea","Mexico_","Mississippi River","Missouri River","Colorado River","Rio Grande","Ohio River","Delaware River","Nei Mongol","Nevada_","North Sea","Oregon_","Pacific Ocean","Pacific Ocean_","Pakistan_","Persian Gulf","Portugal_","Portugal__","Red Sea","Russia","San Francisco Bay","Sea of Japan","South China Sea","Tasman Sea","Timor Sea","United States_","United States__","Xinjiang","Yellow Sea"],custom_zoom_levels:{Alaska:2,Arizona:4,Arkansas:4,"Atlantic Ocean_":4,California:4,Canada_:3,Colorado:4,Hawaii:3,Idaho:4,Illinois:4,Iowa:4,Kansas:4,Louisiana:4,Mexico_:3,Minnesota:4,"Mississippi River":4,Missouri:4,"Missouri River":4,"Colorado River":4,"Rio Grande":4,Montana:4,Nebraska:4,Nevada:4,"New Mexico":4,"New York":4,"North Dakota":4,Oklahoma:4,Oregon:4,"Pacific Ocean_":3,"South Dakota":4,Texas:4,Utah:4,Washington:4,Wisconsin:4,Wyoming:4,Afghanistan:3,Algeria:3,Angola:3,Argentina:3,Australia:3,Austria:4,Azerbaijan:4,"Baltic Sea":4,Bangladesh:4,Belarus:4,Belgium:4,"Bering Sea":3,Benin:4,Bhutan:4,"Black Sea":4,Bolivia:3,Botswana:3,Brazil:3,"Burkina Faso":4,Burundi:4,Cambodia:4,Cameroon:4,Canada:2,"Caribbean Sea":4,"Caspian Sea":4,"Celebes Sea":4,"Central African Republic":4,"Coral Sea":3,Chad:3,Chile:3,China:3,China___:3,Colombia:3,"Costa Rica":4,Czechia:4,"CÃ´te d'Ivoire":4,"Democratic Republic of the Congo":4,Denmark:3,Djibouti:4,"East China Sea":4,Ecuador:3,Egypt:4,"Equatorial Guinea":4,Eritrea:4,Estonia:4,Ethiopia:4,Finland:3,France:4,"French Guiana":4,Gabon:4,Gansu:4,Georgia:4,Germany:4,Ghana:4,Greenland:2,Guatemala:4,Guinea:4,"Guinea-Bissau":4,"Gulf of Guinea":4,"Gulf of Mexico":4,Guyana:4,Honduras:4,Hungary:4,Iceland:3,India:4,Indonesia:3,Iran:4,Iraq:4,Ireland:4,Israel:4,Japan:4,Jordan:4,Kazakhstan:3,Kenya:4,Kyrgyzstan:4,"Labrador Sea":3,Laos:4,Laos_:4,Latvia:4,Lebanon:4,Lesotho:4,Liberia:4,Libya:3,Liechtenstein:6,Lithuania:4,Madagascar:3,"Magadan Oblast":3,Malawi:4,Malaysia:4,Mali:4,Mauritania:3,"Mediterranean Sea":3,Mexico:3,Moldova:4,Mongolia:3,Mongolia_:3,Morocco:3,Mozambique:4,Myanmar:4,Myanmar__:4,Namibia:3,Nepal:4,Netherlands:4,"New Zealand":3,Nicaragua:4,Niger:3,Nigeria:4,"North Korea":4,"North Korea__":4,"North Sea":4,Norway:3,"Norwegian Sea":3,Oman:4,Pakistan:3,Panama:4,"Papua New Guinea":3,Paraguay:3,Peru:3,Philippines:4,Poland:4,Portugal:3,"Red Sea":4,Romania:4,Russia:2,Russia_:3,Rwanda:4,"San Marino":7,"Saudi Arabia":4,"Sea of Japan":4,Senegal:4,Sichuan:4,"Sierra Leone":4,Slovakia:4,Somalia:4,"Solomon Sea":4,"South Africa":4,"South China Sea":4,"South Korea":4,"South Sudan":4,Spain:4,"Sri Lanka":4,Sudan:4,Suriname:4,Swaziland:4,Sweden:3,Syria:4,Taiwan:4,Tajikistan:4,Tanzania:4,"Tasman Sea":3,Thailand:4,"Timor Sea":4,Togo:4,Tunisia:3,Turkey:4,Turkmenistan:3,Uganda:4,Ukraine:4,"United Kingdom":4,"United States":3,Uruguay:3,Uzbekistan:4,"Vatican City":11,Venezuela:3,Vietnam:4,"Western Sahara":3,"Yellow Sea":4,Yemen:4,Zambia:3,Zimbabwe:4,Afghanistan__:3,"Andaman Sea":4,"Arabian Sea":3,"Arafura Sea":4,Arizona__:5,"Australian Capital Territory":5,Austria__:5,Balochistan:4,"Bay of Bengal":4,Brunei_:5,"Del Norte":6,"Distrito Federal":5,France___:5,France____:5,Fresno:6,"Gulf of Mexico_":4,"Gulf of Thailand":4,Heilongjiang:4,Hokkaido:5,Humboldt:6,Imperial:6,India__:4,Indonesia_:5,Inyo:6,Iran_:4,"Kamchatka Krai":3,Kazakhstan_:3,Kazakhstan__:3,Kern:6,Kings:6,"Krasnoyarsk Krai":2,Kyrgyzstan_:4,Lassen:6,"Los Angeles":6,Mendocino:6,Mexico__:5,Modoc:6,Mongolia__:3,Mono:6,"Nei Mongol":4,Nepal__:4,Nevada_:5,"New Brunswick":5,"Nova Scotia":5,Orange:6,Oregon_:5,"Pacific Ocean":5,Pakistan_:4,Pakistan__:4,Plumas:6,Portugal_:5,Portugal__:5,"Prince Edward Island":6,Qinghai:4,Riverside:6,Sabah:5,"Sakha Republic":2,"San Benito":6,"San Bernardino":6,"San Diego":6,"San Francisco Bay":8,"San Luis Obispo":6,"Santa Barbara":6,Sarawak:5,Sevastopol:6,Shasta:6,Siskiyou:6,Slovenia_:5,Switzerland___:5,Tajikistan_:4,Trinity:6,Benin_:5,Cameroon_:5,Niger_:5,Chad_:5,Tulare:6,"United States__":4,"Vatican City_":11,Ventura:6,Vietnam_:4,Xinjiang:3,Xizang:4}}}]);